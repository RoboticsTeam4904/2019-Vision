
/* THIS FILE IS GENERATED BY rust-cpp. DO NOT EDIT */

#include "stdint.h" // For {u}intN_t
#include <new> // For placement new
#include <cstdlib> // For abort
#include <type_traits>
#include <utility>

namespace rustcpp {

// We can't just pass or return any type from extern "C" rust functions (because the call
// convention may differ between the C++ type, and the Rust type).
// So we make sure to pass trivial structure that only contains a pointer to the object we want to
// pass. The constructor of these helper class contains a 'container' of the right size which will
// be allocated on the stack.
template<typename T> struct return_helper {
    struct container {
#if defined (_MSC_VER) && (_MSC_VER + 0 < 1900)
        char memory[sizeof(T)];
        ~container() { reinterpret_cast<T*>(this)->~T(); }
#else
        // The fact that it is in an union means it is properly sized and aligned, but we have
        // to call the destructor and constructor manually
        union { T memory; };
        ~container() { memory.~T(); }
#endif
        container() {}
    };
    const container* data;
    return_helper(int, const container &c = container()) : data(&c) { }
};

template<typename T> struct argument_helper {
    using type = const T&;
};
template<typename T> struct argument_helper<T&> {
    T &ref;
    argument_helper(T &x) : ref(x) {}
    using type = argument_helper<T&> const&;
};

template<typename T>
typename std::enable_if<std::is_copy_constructible<T>::value>::type copy_helper(const void *src, void *dest)
{ new (dest) T (*static_cast<T const*>(src)); }
template<typename T>
typename std::enable_if<!std::is_copy_constructible<T>::value>::type copy_helper(const void *, void *)
{ std::abort(); }
template<typename T>
typename std::enable_if<std::is_default_constructible<T>::value>::type default_helper(void *dest)
{ new (dest) T(); }
template<typename T>
typename std::enable_if<!std::is_default_constructible<T>::value>::type default_helper(void *)
{ std::abort(); }

template<typename T> int compare_helper(const T &a, const T&b, int cmp) {
    switch (cmp) {
        using namespace std::rel_ops;
        case 0:
            if (a < b)
                return -1;
            if (b < a)
                return 1;
            return 0;
        case -2: return a < b;
        case 2: return a > b;
        case -1: return a <= b;
        case 1: return a >= b;
    }
    std::abort();
}
}

#define RUST_CPP_CLASS_HELPER(HASH, ...) \
    extern "C" { \
    void __cpp_destructor_##HASH(void *ptr) { typedef __VA_ARGS__ T; static_cast<T*>(ptr)->~T(); } \
    void __cpp_copy_##HASH(const void *src, void *dest) { rustcpp::copy_helper<__VA_ARGS__>(src, dest); } \
    void __cpp_default_##HASH(void *dest) { rustcpp::default_helper<__VA_ARGS__>(dest); } \
    }

#line 28 "src/lib.rs"
       
    #include "../common_opencv.h"
    using namespace cv;
    #include "common.h"
    #include "../types.h"
    #include "../return_types.h"


#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9807135835043904657(Ptr<cv::AKAZE>* const& me) {
#line 20 "src/opencv/hub/types.rs"
                                               
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16454064900438198650_impl(cv::Ptr<cv::AKAZE>* const& me) {
#line 31 "src/opencv/hub/types.rs"
                                                                             
            return me->get();
        
}
extern "C" {
void __cpp_closure_16454064900438198650(cv::Ptr<cv::AKAZE>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16454064900438198650_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3376917103512685534_impl(cv::Ptr<cv::Algorithm>* const& me) {
#line 40 "src/opencv/hub/types.rs"
                                                                                 
            return me->get();
        
}
extern "C" {
void __cpp_closure_3376917103512685534(cv::Ptr<cv::Algorithm>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3376917103512685534_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9513500868794336285_impl(cv::Ptr<cv::Feature2D>* const& me) {
#line 49 "src/opencv/hub/types.rs"
                                                                                 
            return me->get();
        
}
extern "C" {
void __cpp_closure_9513500868794336285(cv::Ptr<cv::Feature2D>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9513500868794336285_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10284837212841116777(Ptr<cv::ml::ANN_MLP>* const& me) {
#line 70 "src/opencv/hub/types.rs"
                                                     
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_17443669151092803430_impl(cv::Ptr<cv::ml::ANN_MLP>* const& me) {
#line 90 "src/opencv/hub/types.rs"
                                                                                   
            return me->get();
        
}
extern "C" {
void __cpp_closure_17443669151092803430(cv::Ptr<cv::ml::ANN_MLP>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_17443669151092803430_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11963775357768202618_impl(cv::Ptr<cv::ml::StatModel>* const& me) {
#line 99 "src/opencv/hub/types.rs"
                                                                                     
            return me->get();
        
}
extern "C" {
void __cpp_closure_11963775357768202618(cv::Ptr<cv::ml::StatModel>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_11963775357768202618_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16811988349157225888(Ptr<cv::dnn::AbsLayer>* const& me) {
#line 120 "src/opencv/hub/types.rs"
                                                       
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16489992396853819645(Ptr<cv::dnn::ActivationLayer>* const& me) {
#line 143 "src/opencv/hub/types.rs"
                                                              
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_14676194032732400547_impl(cv::Ptr<cv::dnn::ActivationLayer>* const& me) {
#line 163 "src/opencv/hub/types.rs"
                                                                                            
            return me->get();
        
}
extern "C" {
void __cpp_closure_14676194032732400547(cv::Ptr<cv::dnn::ActivationLayer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_14676194032732400547_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_14868388515153303827_impl(cv::Ptr<cv::dnn::Layer>* const& me) {
#line 172 "src/opencv/hub/types.rs"
                                                                                  
            return me->get();
        
}
extern "C" {
void __cpp_closure_14868388515153303827(cv::Ptr<cv::dnn::Layer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_14868388515153303827_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3366240138574606371(Ptr<cv::xfeatures2d::AffineFeature2D>* const& me) {
#line 193 "src/opencv/hub/types.rs"
                                                                      
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3092795778535571570_impl(cv::Ptr<cv::xfeatures2d::AffineFeature2D>* const& me) {
#line 213 "src/opencv/hub/types.rs"
                                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_3092795778535571570(cv::Ptr<cv::xfeatures2d::AffineFeature2D>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3092795778535571570_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18342467862633862957(Ptr<cv::AffineTransformer>* const& me) {
#line 243 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_5511267017033849999_impl(cv::Ptr<cv::AffineTransformer>* const& me) {
#line 254 "src/opencv/hub/types.rs"
                                                                                         
            return me->get();
        
}
extern "C" {
void __cpp_closure_5511267017033849999(cv::Ptr<cv::AffineTransformer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_5511267017033849999_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1284239448781233148_impl(cv::Ptr<cv::ShapeTransformer>* const& me) {
#line 272 "src/opencv/hub/types.rs"
                                                                                        
            return me->get();
        
}
extern "C" {
void __cpp_closure_1284239448781233148(cv::Ptr<cv::ShapeTransformer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1284239448781233148_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14125615602265827950(Ptr<cv::AgastFeatureDetector>* const& me) {
#line 293 "src/opencv/hub/types.rs"
                                                              
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9369788081664874238_impl(cv::Ptr<cv::AgastFeatureDetector>* const& me) {
#line 304 "src/opencv/hub/types.rs"
                                                                                            
            return me->get();
        
}
extern "C" {
void __cpp_closure_9369788081664874238(cv::Ptr<cv::AgastFeatureDetector>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9369788081664874238_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7045595508298671278(Ptr<cv::AlignMTB>* const& me) {
#line 343 "src/opencv/hub/types.rs"
                                                  
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_4650491127679299308_impl(cv::Ptr<cv::AlignExposures>* const& me) {
#line 363 "src/opencv/hub/types.rs"
                                                                                      
            return me->get();
        
}
extern "C" {
void __cpp_closure_4650491127679299308(cv::Ptr<cv::AlignExposures>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_4650491127679299308_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12588941391952929537_impl(cv::Ptr<cv::AlignMTB>* const& me) {
#line 372 "src/opencv/hub/types.rs"
                                                                                
            return me->get();
        
}
extern "C" {
void __cpp_closure_12588941391952929537(cv::Ptr<cv::AlignMTB>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12588941391952929537_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1543033383346634583(Ptr<cv::img_hash::AverageHash>* const& me) {
#line 393 "src/opencv/hub/types.rs"
                                                               
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14416048477817568123(Ptr<cv::BFMatcher>* const& me) {
#line 416 "src/opencv/hub/types.rs"
                                                   
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4293957868168666564(Ptr<cv::dnn::BNLLLayer>* const& me) {
#line 439 "src/opencv/hub/types.rs"
                                                        
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4228649784178912015(Ptr<cv::BRISK>* const& me) {
#line 462 "src/opencv/hub/types.rs"
                                               
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12532978743003785526(Ptr<cv::dnn::BackendNode>* const& me) {
#line 485 "src/opencv/hub/types.rs"
                                                          
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16591784146531144562(Ptr<cv::dnn::BackendWrapper>* const& me) {
#line 508 "src/opencv/hub/types.rs"
                                                             
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_2075048322786229265_impl(cv::Ptr<cv::dnn::BackendWrapper>* const& me) {
#line 519 "src/opencv/hub/types.rs"
                                                                                           
            return me->get();
        
}
extern "C" {
void __cpp_closure_2075048322786229265(cv::Ptr<cv::dnn::BackendWrapper>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_2075048322786229265_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10603400295610324010(Ptr<cv::bgsegm::BackgroundSubtractorCNT>* const& me) {
#line 540 "src/opencv/hub/types.rs"
                                                                         
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_2050427191734240398_impl(cv::Ptr<cv::bgsegm::BackgroundSubtractorCNT>* const& me) {
#line 551 "src/opencv/hub/types.rs"
                                                                                                       
            return me->get();
        
}
extern "C" {
void __cpp_closure_2050427191734240398(cv::Ptr<cv::bgsegm::BackgroundSubtractorCNT>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_2050427191734240398_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1463098344417728280(Ptr<cv::bgsegm::BackgroundSubtractorGMG>* const& me) {
#line 572 "src/opencv/hub/types.rs"
                                                                         
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_5933273850473935435_impl(cv::Ptr<cv::bgsegm::BackgroundSubtractorGMG>* const& me) {
#line 583 "src/opencv/hub/types.rs"
                                                                                                       
            return me->get();
        
}
extern "C" {
void __cpp_closure_5933273850473935435(cv::Ptr<cv::bgsegm::BackgroundSubtractorGMG>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_5933273850473935435_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8437012461300310879(Ptr<cv::bgsegm::BackgroundSubtractorGSOC>* const& me) {
#line 604 "src/opencv/hub/types.rs"
                                                                          
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6788468514983912977(Ptr<cv::BackgroundSubtractorKNN>* const& me) {
#line 627 "src/opencv/hub/types.rs"
                                                                 
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_848206346270670123_impl(cv::Ptr<cv::BackgroundSubtractor>* const& me) {
#line 647 "src/opencv/hub/types.rs"
                                                                                            
            return me->get();
        
}
extern "C" {
void __cpp_closure_848206346270670123(cv::Ptr<cv::BackgroundSubtractor>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_848206346270670123_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_10086887530630251358_impl(cv::Ptr<cv::BackgroundSubtractorKNN>* const& me) {
#line 656 "src/opencv/hub/types.rs"
                                                                                               
            return me->get();
        
}
extern "C" {
void __cpp_closure_10086887530630251358(cv::Ptr<cv::BackgroundSubtractorKNN>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_10086887530630251358_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15078683086943225257(Ptr<cv::bgsegm::BackgroundSubtractorLSBP>* const& me) {
#line 677 "src/opencv/hub/types.rs"
                                                                          
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_646522027994128855(Ptr<cv::bgsegm::BackgroundSubtractorMOG>* const& me) {
#line 700 "src/opencv/hub/types.rs"
                                                                         
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_14215879216818690466_impl(cv::Ptr<cv::bgsegm::BackgroundSubtractorMOG>* const& me) {
#line 711 "src/opencv/hub/types.rs"
                                                                                                       
            return me->get();
        
}
extern "C" {
void __cpp_closure_14215879216818690466(cv::Ptr<cv::bgsegm::BackgroundSubtractorMOG>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_14215879216818690466_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7838883806697164729(Ptr<cv::BackgroundSubtractorMOG2>* const& me) {
#line 732 "src/opencv/hub/types.rs"
                                                                  
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_5806742838044442948_impl(cv::Ptr<cv::BackgroundSubtractorMOG2>* const& me) {
#line 761 "src/opencv/hub/types.rs"
                                                                                                
            return me->get();
        
}
extern "C" {
void __cpp_closure_5806742838044442948(cv::Ptr<cv::BackgroundSubtractorMOG2>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_5806742838044442948_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8717824783334214367(Ptr<cv::dnn::BaseConvolutionLayer>* const& me) {
#line 782 "src/opencv/hub/types.rs"
                                                                   
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_4956957443879093068_impl(cv::Ptr<cv::dnn::BaseConvolutionLayer>* const& me) {
#line 802 "src/opencv/hub/types.rs"
                                                                                                 
            return me->get();
        
}
extern "C" {
void __cpp_closure_4956957443879093068(cv::Ptr<cv::dnn::BaseConvolutionLayer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_4956957443879093068_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13012256406258165110(Ptr<cv::dnn::BatchNormLayer>* const& me) {
#line 832 "src/opencv/hub/types.rs"
                                                             
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13930744764063686775(Ptr<cv::line_descriptor::BinaryDescriptor>* const& me) {
#line 855 "src/opencv/hub/types.rs"
                                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13485900154834644057(Ptr<cv::line_descriptor::BinaryDescriptorMatcher>* const& me) {
#line 878 "src/opencv/hub/types.rs"
                                                                                  
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16351496603725601421(Ptr<cv::img_hash::BlockMeanHash>* const& me) {
#line 901 "src/opencv/hub/types.rs"
                                                                 
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16726784135925458194(Ptr<cv::aruco::Board>* const& me) {
#line 924 "src/opencv/hub/types.rs"
                                                      
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9601957938915154375_impl(cv::Ptr<cv::aruco::Board>* const& me) {
#line 935 "src/opencv/hub/types.rs"
                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_9601957938915154375(cv::Ptr<cv::aruco::Board>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9601957938915154375_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9014197072775018538(Ptr<cv::ml::Boost>* const& me) {
#line 956 "src/opencv/hub/types.rs"
                                                   
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7134163245275726417_impl(cv::Ptr<cv::ml::Boost>* const& me) {
#line 976 "src/opencv/hub/types.rs"
                                                                                 
            return me->get();
        
}
extern "C" {
void __cpp_closure_7134163245275726417(cv::Ptr<cv::ml::Boost>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_7134163245275726417_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_5071434219656396027_impl(cv::Ptr<cv::ml::DTrees>* const& me) {
#line 985 "src/opencv/hub/types.rs"
                                                                                  
            return me->get();
        
}
extern "C" {
void __cpp_closure_5071434219656396027(cv::Ptr<cv::ml::DTrees>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_5071434219656396027_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17315054814873549244(Ptr<cv::xfeatures2d::BoostDesc>* const& me) {
#line 1015 "src/opencv/hub/types.rs"
                                                                
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_10835523475753682116_impl(cv::Ptr<cv::xfeatures2d::BoostDesc>* const& me) {
#line 1035 "src/opencv/hub/types.rs"
                                                                                              
            return me->get();
        
}
extern "C" {
void __cpp_closure_10835523475753682116(cv::Ptr<cv::xfeatures2d::BoostDesc>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_10835523475753682116_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11959862157579248462(Ptr<cv::xfeatures2d::BriefDescriptorExtractor>* const& me) {
#line 1065 "src/opencv/hub/types.rs"
                                                                               
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14566177014746565504(Ptr<cv::CLAHE>* const& me) {
#line 1088 "src/opencv/hub/types.rs"
                                               
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7852777603034946679_impl(cv::Ptr<cv::CLAHE>* const& me) {
#line 1108 "src/opencv/hub/types.rs"
                                                                             
            return me->get();
        
}
extern "C" {
void __cpp_closure_7852777603034946679(cv::Ptr<cv::CLAHE>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_7852777603034946679_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17361725195240803070(Ptr<cv::CalibrateDebevec>* const& me) {
#line 1129 "src/opencv/hub/types.rs"
                                                          
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_111479494351288106_impl(cv::Ptr<cv::CalibrateCRF>* const& me) {
#line 1149 "src/opencv/hub/types.rs"
                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_111479494351288106(cv::Ptr<cv::CalibrateCRF>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_111479494351288106_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15995202137495465797_impl(cv::Ptr<cv::CalibrateDebevec>* const& me) {
#line 1158 "src/opencv/hub/types.rs"
                                                                                        
            return me->get();
        
}
extern "C" {
void __cpp_closure_15995202137495465797(cv::Ptr<cv::CalibrateDebevec>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15995202137495465797_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11896892673579509051(Ptr<cv::CalibrateRobertson>* const& me) {
#line 1179 "src/opencv/hub/types.rs"
                                                            
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_14990064460016258682_impl(cv::Ptr<cv::CalibrateRobertson>* const& me) {
#line 1208 "src/opencv/hub/types.rs"
                                                                                          
            return me->get();
        
}
extern "C" {
void __cpp_closure_14990064460016258682(cv::Ptr<cv::CalibrateRobertson>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_14990064460016258682_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17080185157781260270(Ptr<cv::LMSolver::Callback>* const& me) {
#line 1229 "src/opencv/hub/types.rs"
                                                            
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16167358790253032223_impl(cv::Ptr<cv::LMSolver::Callback>* const& me) {
#line 1240 "src/opencv/hub/types.rs"
                                                                                          
            return me->get();
        
}
extern "C" {
void __cpp_closure_16167358790253032223(cv::Ptr<cv::LMSolver::Callback>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16167358790253032223_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5260750722674350680(Ptr<cv::aruco::CharucoBoard>* const& me) {
#line 1261 "src/opencv/hub/types.rs"
                                                             
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_708700911227832861(Ptr<cv::img_hash::ColorMomentHash>* const& me) {
#line 1284 "src/opencv/hub/types.rs"
                                                                   
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1456924569743261443(Ptr<cv::dnn::ConcatLayer>* const& me) {
#line 1307 "src/opencv/hub/types.rs"
                                                          
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18389673630908919517(Ptr<cv::ConjGradSolver>* const& me) {
#line 1330 "src/opencv/hub/types.rs"
                                                        
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11459570283899766502(Ptr<cv::xfeatures2d::DAISY>* const& me) {
#line 1353 "src/opencv/hub/types.rs"
                                                            
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3026078291209560761_impl(cv::Ptr<cv::xfeatures2d::DAISY>* const& me) {
#line 1373 "src/opencv/hub/types.rs"
                                                                                          
            return me->get();
        
}
extern "C" {
void __cpp_closure_3026078291209560761(cv::Ptr<cv::xfeatures2d::DAISY>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3026078291209560761_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12704745601201063092(Ptr<cv::DISOpticalFlow>* const& me) {
#line 1403 "src/opencv/hub/types.rs"
                                                        
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_13678305679052972487_impl(cv::Ptr<cv::DISOpticalFlow>* const& me) {
#line 1423 "src/opencv/hub/types.rs"
                                                                                      
            return me->get();
        
}
extern "C" {
void __cpp_closure_13678305679052972487(cv::Ptr<cv::DISOpticalFlow>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_13678305679052972487_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_10913314667101694061_impl(cv::Ptr<cv::DenseOpticalFlow>* const& me) {
#line 1432 "src/opencv/hub/types.rs"
                                                                                        
            return me->get();
        
}
extern "C" {
void __cpp_closure_10913314667101694061(cv::Ptr<cv::DenseOpticalFlow>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_10913314667101694061_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17037799757485092612(Ptr<cv::ml::DTrees>* const& me) {
#line 1453 "src/opencv/hub/types.rs"
                                                    
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4038971355852386368(Ptr<cv::videostab::DeblurerBase>* const& me) {
#line 1503 "src/opencv/hub/types.rs"
                                                                 
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11426881203793370532_impl(cv::Ptr<cv::videostab::DeblurerBase>* const& me) {
#line 1514 "src/opencv/hub/types.rs"
                                                                                               
            return me->get();
        
}
extern "C" {
void __cpp_closure_11426881203793370532(cv::Ptr<cv::videostab::DeblurerBase>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_11426881203793370532_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12648739659550556057(Ptr<cv::DescriptorMatcher>* const& me) {
#line 1535 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15657197567174628329_impl(cv::Ptr<cv::DescriptorMatcher>* const& me) {
#line 1555 "src/opencv/hub/types.rs"
                                                                                         
            return me->get();
        
}
extern "C" {
void __cpp_closure_15657197567174628329(cv::Ptr<cv::DescriptorMatcher>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15657197567174628329_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1512837650214014377(Ptr<cv::dnn::DetectionOutputLayer>* const& me) {
#line 1576 "src/opencv/hub/types.rs"
                                                                   
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_917280752245236036(Ptr<cv::aruco::DetectorParameters>* const& me) {
#line 1599 "src/opencv/hub/types.rs"
                                                                   
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15865281641909424876(Ptr<cv::aruco::Dictionary>* const& me) {
#line 1622 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1803507780298305868(Ptr<cv::DownhillSolver>* const& me) {
#line 1645 "src/opencv/hub/types.rs"
                                                        
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7238598112189246965_impl(cv::Ptr<cv::DownhillSolver>* const& me) {
#line 1665 "src/opencv/hub/types.rs"
                                                                                      
            return me->get();
        
}
extern "C" {
void __cpp_closure_7238598112189246965(cv::Ptr<cv::DownhillSolver>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_7238598112189246965_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11558937410409068832_impl(cv::Ptr<cv::MinProblemSolver>* const& me) {
#line 1674 "src/opencv/hub/types.rs"
                                                                                        
            return me->get();
        
}
extern "C" {
void __cpp_closure_11558937410409068832(cv::Ptr<cv::MinProblemSolver>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_11558937410409068832_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1194584806435165400(Ptr<cv::dnn::ELULayer>* const& me) {
#line 1695 "src/opencv/hub/types.rs"
                                                       
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1932817228206934892(Ptr<cv::ml::EM>* const& me) {
#line 1718 "src/opencv/hub/types.rs"
                                                
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_5827495019965121130_impl(cv::Ptr<cv::ml::EM>* const& me) {
#line 1738 "src/opencv/hub/types.rs"
                                                                              
            return me->get();
        
}
extern "C" {
void __cpp_closure_5827495019965121130(cv::Ptr<cv::ml::EM>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_5827495019965121130_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10580763766230926777(Ptr<cv::dnn::EltwiseLayer>* const& me) {
#line 1768 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17652912444344820493(Ptr<cv::xfeatures2d::FREAK>* const& me) {
#line 1791 "src/opencv/hub/types.rs"
                                                            
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12905903205074140578(Ptr<cv::FarnebackOpticalFlow>* const& me) {
#line 1814 "src/opencv/hub/types.rs"
                                                              
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_10254981884414891658_impl(cv::Ptr<cv::FarnebackOpticalFlow>* const& me) {
#line 1843 "src/opencv/hub/types.rs"
                                                                                            
            return me->get();
        
}
extern "C" {
void __cpp_closure_10254981884414891658(cv::Ptr<cv::FarnebackOpticalFlow>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_10254981884414891658_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4994600514380875859(Ptr<cv::FastFeatureDetector>* const& me) {
#line 1864 "src/opencv/hub/types.rs"
                                                             
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1701476710353979550_impl(cv::Ptr<cv::FastFeatureDetector>* const& me) {
#line 1884 "src/opencv/hub/types.rs"
                                                                                           
            return me->get();
        
}
extern "C" {
void __cpp_closure_1701476710353979550(cv::Ptr<cv::FastFeatureDetector>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1701476710353979550_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12945237782997784387(Ptr<cv::Feature2D>* const& me) {
#line 1914 "src/opencv/hub/types.rs"
                                                   
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8527303846788533519(Ptr<cv::FileStorage>* const& me) {
#line 1955 "src/opencv/hub/types.rs"
                                                     
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9358353970515498209(Ptr<cv::FlannBasedMatcher>* const& me) {
#line 1978 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10568076079019357740(Ptr<cv::dnn::FlattenLayer>* const& me) {
#line 2001 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2779772228196529343(Ptr<cv::Formatted>* const& me) {
#line 2024 "src/opencv/hub/types.rs"
                                                   
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1187805095696925115_impl(cv::Ptr<cv::Formatted>* const& me) {
#line 2035 "src/opencv/hub/types.rs"
                                                                                 
            return me->get();
        
}
extern "C" {
void __cpp_closure_1187805095696925115(cv::Ptr<cv::Formatted>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1187805095696925115_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6974318899053638844(Ptr<cv::Formatter>* const& me) {
#line 2056 "src/opencv/hub/types.rs"
                                                   
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_4363025779663942226_impl(cv::Ptr<cv::Formatter>* const& me) {
#line 2067 "src/opencv/hub/types.rs"
                                                                                 
            return me->get();
        
}
extern "C" {
void __cpp_closure_4363025779663942226(cv::Ptr<cv::Formatter>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_4363025779663942226_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5534920100499391335(Ptr<cv::superres::FrameSource>* const& me) {
#line 2088 "src/opencv/hub/types.rs"
                                                               
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16347695555636434857_impl(cv::Ptr<cv::superres::FrameSource>* const& me) {
#line 2099 "src/opencv/hub/types.rs"
                                                                                             
            return me->get();
        
}
extern "C" {
void __cpp_closure_16347695555636434857(cv::Ptr<cv::superres::FrameSource>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16347695555636434857_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7313954701530667486(Ptr<cv::freetype::FreeType2>* const& me) {
#line 2120 "src/opencv/hub/types.rs"
                                                             
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16786750653085655820_impl(cv::Ptr<cv::freetype::FreeType2>* const& me) {
#line 2140 "src/opencv/hub/types.rs"
                                                                                           
            return me->get();
        
}
extern "C" {
void __cpp_closure_16786750653085655820(cv::Ptr<cv::freetype::FreeType2>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16786750653085655820_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4859817104263064919(Ptr<cv::MinProblemSolver::Function>* const& me) {
#line 2161 "src/opencv/hub/types.rs"
                                                                    
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6575744793744336839_impl(cv::Ptr<cv::MinProblemSolver::Function>* const& me) {
#line 2172 "src/opencv/hub/types.rs"
                                                                                                  
            return me->get();
        
}
extern "C" {
void __cpp_closure_6575744793744336839(cv::Ptr<cv::MinProblemSolver::Function>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_6575744793744336839_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2687659788960907383(Ptr<cv::GFTTDetector>* const& me) {
#line 2193 "src/opencv/hub/types.rs"
                                                      
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16670120514955206924_impl(cv::Ptr<cv::GFTTDetector>* const& me) {
#line 2222 "src/opencv/hub/types.rs"
                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_16670120514955206924(cv::Ptr<cv::GFTTDetector>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16670120514955206924_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14501572238806016697(Ptr<cv::GeneralizedHoughBallard>* const& me) {
#line 2243 "src/opencv/hub/types.rs"
                                                                 
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_47499928488781705_impl(cv::Ptr<cv::GeneralizedHough>* const& me) {
#line 2263 "src/opencv/hub/types.rs"
                                                                                        
            return me->get();
        
}
extern "C" {
void __cpp_closure_47499928488781705(cv::Ptr<cv::GeneralizedHough>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_47499928488781705_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_18259325500962736677_impl(cv::Ptr<cv::GeneralizedHoughBallard>* const& me) {
#line 2272 "src/opencv/hub/types.rs"
                                                                                               
            return me->get();
        
}
extern "C" {
void __cpp_closure_18259325500962736677(cv::Ptr<cv::GeneralizedHoughBallard>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_18259325500962736677_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8766360211800019497(Ptr<cv::GeneralizedHoughGuil>* const& me) {
#line 2293 "src/opencv/hub/types.rs"
                                                              
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_14541910598181036309_impl(cv::Ptr<cv::GeneralizedHoughGuil>* const& me) {
#line 2322 "src/opencv/hub/types.rs"
                                                                                            
            return me->get();
        
}
extern "C" {
void __cpp_closure_14541910598181036309(cv::Ptr<cv::GeneralizedHoughGuil>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_14541910598181036309_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1859567857402064665(Ptr<cv::structured_light::GrayCodePattern>* const& me) {
#line 2343 "src/opencv/hub/types.rs"
                                                                           
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6467726163601840928_impl(cv::Ptr<cv::structured_light::GrayCodePattern>* const& me) {
#line 2363 "src/opencv/hub/types.rs"
                                                                                                         
            return me->get();
        
}
extern "C" {
void __cpp_closure_6467726163601840928(cv::Ptr<cv::structured_light::GrayCodePattern>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_6467726163601840928_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9130416839771370419_impl(cv::Ptr<cv::structured_light::StructuredLightPattern>* const& me) {
#line 2372 "src/opencv/hub/types.rs"
                                                                                                                
            return me->get();
        
}
extern "C" {
void __cpp_closure_9130416839771370419(cv::Ptr<cv::structured_light::StructuredLightPattern>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9130416839771370419_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5638078283461906005(Ptr<cv::xphoto::GrayworldWB>* const& me) {
#line 2393 "src/opencv/hub/types.rs"
                                                             
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_18444813753570817619_impl(cv::Ptr<cv::xphoto::GrayworldWB>* const& me) {
#line 2413 "src/opencv/hub/types.rs"
                                                                                           
            return me->get();
        
}
extern "C" {
void __cpp_closure_18444813753570817619(cv::Ptr<cv::xphoto::GrayworldWB>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_18444813753570817619_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16845646395359195684_impl(cv::Ptr<cv::xphoto::WhiteBalancer>* const& me) {
#line 2422 "src/opencv/hub/types.rs"
                                                                                             
            return me->get();
        
}
extern "C" {
void __cpp_closure_16845646395359195684(cv::Ptr<cv::xphoto::WhiteBalancer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16845646395359195684_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7205755423865247123(Ptr<cv::aruco::GridBoard>* const& me) {
#line 2443 "src/opencv/hub/types.rs"
                                                          
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6187548737082091375(Ptr<cv::hdf::HDF5>* const& me) {
#line 2466 "src/opencv/hub/types.rs"
                                                   
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_4940119900363673307_impl(cv::Ptr<cv::hdf::HDF5>* const& me) {
#line 2477 "src/opencv/hub/types.rs"
                                                                                 
            return me->get();
        
}
extern "C" {
void __cpp_closure_4940119900363673307(cv::Ptr<cv::hdf::HDF5>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_4940119900363673307_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8942793532951586774(Ptr<cv::xfeatures2d::HarrisLaplaceFeatureDetector>* const& me) {
#line 2498 "src/opencv/hub/types.rs"
                                                                                   
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17424072278128639222(Ptr<cv::HausdorffDistanceExtractor>* const& me) {
#line 2521 "src/opencv/hub/types.rs"
                                                                    
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15360530466563111170_impl(cv::Ptr<cv::HausdorffDistanceExtractor>* const& me) {
#line 2541 "src/opencv/hub/types.rs"
                                                                                                  
            return me->get();
        
}
extern "C" {
void __cpp_closure_15360530466563111170(cv::Ptr<cv::HausdorffDistanceExtractor>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15360530466563111170_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7657572951958577014_impl(cv::Ptr<cv::ShapeDistanceExtractor>* const& me) {
#line 2550 "src/opencv/hub/types.rs"
                                                                                              
            return me->get();
        
}
extern "C" {
void __cpp_closure_7657572951958577014(cv::Ptr<cv::ShapeDistanceExtractor>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_7657572951958577014_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2483398474520152550(Ptr<cv::HistogramCostExtractor>* const& me) {
#line 2571 "src/opencv/hub/types.rs"
                                                                
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_13542162339573349925_impl(cv::Ptr<cv::HistogramCostExtractor>* const& me) {
#line 2591 "src/opencv/hub/types.rs"
                                                                                              
            return me->get();
        
}
extern "C" {
void __cpp_closure_13542162339573349925(cv::Ptr<cv::HistogramCostExtractor>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_13542162339573349925_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9356249463999177603(Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>* const& me) {
#line 2612 "src/opencv/hub/types.rs"
                                                                                    
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16273705479179792459_impl(cv::Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>* const& me) {
#line 2632 "src/opencv/hub/types.rs"
                                                                                                                  
            return me->get();
        
}
extern "C" {
void __cpp_closure_16273705479179792459(cv::Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16273705479179792459_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9739853428975830285_impl(cv::Ptr<cv::phase_unwrapping::PhaseUnwrapping>* const& me) {
#line 2641 "src/opencv/hub/types.rs"
                                                                                                         
            return me->get();
        
}
extern "C" {
void __cpp_closure_9739853428975830285(cv::Ptr<cv::phase_unwrapping::PhaseUnwrapping>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9739853428975830285_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1339623399333785548(Ptr<cv::videostab::IFrameSource>* const& me) {
#line 2662 "src/opencv/hub/types.rs"
                                                                 
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_14561939575263394982_impl(cv::Ptr<cv::videostab::IFrameSource>* const& me) {
#line 2673 "src/opencv/hub/types.rs"
                                                                                               
            return me->get();
        
}
extern "C" {
void __cpp_closure_14561939575263394982(cv::Ptr<cv::videostab::IFrameSource>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_14561939575263394982_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18198237692712979612(Ptr<cv::videostab::ILog>* const& me) {
#line 2694 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9361312242683319322_impl(cv::Ptr<cv::videostab::ILog>* const& me) {
#line 2705 "src/opencv/hub/types.rs"
                                                                                       
            return me->get();
        
}
extern "C" {
void __cpp_closure_9361312242683319322(cv::Ptr<cv::videostab::ILog>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9361312242683319322_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10303895632629502866(Ptr<cv::videostab::IMotionStabilizer>* const& me) {
#line 2726 "src/opencv/hub/types.rs"
                                                                      
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_17537165542402289872_impl(cv::Ptr<cv::videostab::IMotionStabilizer>* const& me) {
#line 2737 "src/opencv/hub/types.rs"
                                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_17537165542402289872(cv::Ptr<cv::videostab::IMotionStabilizer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_17537165542402289872_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7587352115276004024(Ptr<cv::videostab::ImageMotionEstimatorBase>* const& me) {
#line 2758 "src/opencv/hub/types.rs"
                                                                             
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12593287579734816640_impl(cv::Ptr<cv::videostab::ImageMotionEstimatorBase>* const& me) {
#line 2769 "src/opencv/hub/types.rs"
                                                                                                           
            return me->get();
        
}
extern "C" {
void __cpp_closure_12593287579734816640(cv::Ptr<cv::videostab::ImageMotionEstimatorBase>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12593287579734816640_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9502312929427979317(Ptr<cv::dnn::InnerProductLayer>* const& me) {
#line 2790 "src/opencv/hub/types.rs"
                                                                
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5082851792357966868(Ptr<cv::videostab::InpainterBase>* const& me) {
#line 2813 "src/opencv/hub/types.rs"
                                                                  
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_2524036501072473108_impl(cv::Ptr<cv::videostab::InpainterBase>* const& me) {
#line 2824 "src/opencv/hub/types.rs"
                                                                                                
            return me->get();
        
}
extern "C" {
void __cpp_closure_2524036501072473108(cv::Ptr<cv::videostab::InpainterBase>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_2524036501072473108_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16049892126422532870(Ptr<cv::KAZE>* const& me) {
#line 2845 "src/opencv/hub/types.rs"
                                              
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7230897292932647643_impl(cv::Ptr<cv::KAZE>* const& me) {
#line 2874 "src/opencv/hub/types.rs"
                                                                            
            return me->get();
        
}
extern "C" {
void __cpp_closure_7230897292932647643(cv::Ptr<cv::KAZE>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_7230897292932647643_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5991407856556358424(Ptr<cv::ml::KNearest>* const& me) {
#line 2895 "src/opencv/hub/types.rs"
                                                      
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9380110218057111234_impl(cv::Ptr<cv::ml::KNearest>* const& me) {
#line 2915 "src/opencv/hub/types.rs"
                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_9380110218057111234(cv::Ptr<cv::ml::KNearest>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9380110218057111234_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5069235347220625259(Ptr<cv::ml::SVM::Kernel>* const& me) {
#line 2945 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11220371491790837283_impl(cv::Ptr<cv::ml::SVM::Kernel>* const& me) {
#line 2965 "src/opencv/hub/types.rs"
                                                                                       
            return me->get();
        
}
extern "C" {
void __cpp_closure_11220371491790837283(cv::Ptr<cv::ml::SVM::Kernel>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_11220371491790837283_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15565642460353171795(Ptr<cv::xfeatures2d::LATCH>* const& me) {
#line 2986 "src/opencv/hub/types.rs"
                                                            
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_225352646700498615(Ptr<cv::LMSolver>* const& me) {
#line 3009 "src/opencv/hub/types.rs"
                                                  
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16631819156618831151_impl(cv::Ptr<cv::LMSolver>* const& me) {
#line 3029 "src/opencv/hub/types.rs"
                                                                                
            return me->get();
        
}
extern "C" {
void __cpp_closure_16631819156618831151(cv::Ptr<cv::LMSolver>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16631819156618831151_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9571689812789661333(Ptr<cv::dnn::LRNLayer>* const& me) {
#line 3050 "src/opencv/hub/types.rs"
                                                       
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2121701416244121308(Ptr<cv::line_descriptor::LSDDetector>* const& me) {
#line 3073 "src/opencv/hub/types.rs"
                                                                      
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11542281859125239804(Ptr<cv::dnn::LSTMLayer>* const& me) {
#line 3096 "src/opencv/hub/types.rs"
                                                        
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_190199469183236370_impl(cv::Ptr<cv::dnn::LSTMLayer>* const& me) {
#line 3116 "src/opencv/hub/types.rs"
                                                                                      
            return me->get();
        
}
extern "C" {
void __cpp_closure_190199469183236370(cv::Ptr<cv::dnn::LSTMLayer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_190199469183236370_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13498657802608002024(Ptr<cv::xfeatures2d::LUCID>* const& me) {
#line 3146 "src/opencv/hub/types.rs"
                                                            
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6034091355433475730(Ptr<cv::dnn::Layer>* const& me) {
#line 3169 "src/opencv/hub/types.rs"
                                                    
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16540695043405732457(Ptr<cv::xphoto::LearningBasedWB>* const& me) {
#line 3210 "src/opencv/hub/types.rs"
                                                                 
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_8477798784336776199_impl(cv::Ptr<cv::xphoto::LearningBasedWB>* const& me) {
#line 3230 "src/opencv/hub/types.rs"
                                                                                               
            return me->get();
        
}
extern "C" {
void __cpp_closure_8477798784336776199(cv::Ptr<cv::xphoto::LearningBasedWB>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_8477798784336776199_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_472323764292028458(Ptr<cv::LineSegmentDetector>* const& me) {
#line 3260 "src/opencv/hub/types.rs"
                                                             
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12937108712183968527_impl(cv::Ptr<cv::LineSegmentDetector>* const& me) {
#line 3280 "src/opencv/hub/types.rs"
                                                                                           
            return me->get();
        
}
extern "C" {
void __cpp_closure_12937108712183968527(cv::Ptr<cv::LineSegmentDetector>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12937108712183968527_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15627648732781970708(Ptr<cv::ml::LogisticRegression>* const& me) {
#line 3301 "src/opencv/hub/types.rs"
                                                                
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_2031149368850707641_impl(cv::Ptr<cv::ml::LogisticRegression>* const& me) {
#line 3321 "src/opencv/hub/types.rs"
                                                                                              
            return me->get();
        
}
extern "C" {
void __cpp_closure_2031149368850707641(cv::Ptr<cv::ml::LogisticRegression>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_2031149368850707641_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2003462756773145611(Ptr<cv::xfeatures2d::MSDDetector>* const& me) {
#line 3351 "src/opencv/hub/types.rs"
                                                                  
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11818669637766761773(Ptr<cv::MSER>* const& me) {
#line 3374 "src/opencv/hub/types.rs"
                                              
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1567386245675638093_impl(cv::Ptr<cv::MSER>* const& me) {
#line 3403 "src/opencv/hub/types.rs"
                                                                            
            return me->get();
        
}
extern "C" {
void __cpp_closure_1567386245675638093(cv::Ptr<cv::MSER>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1567386245675638093_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_664750282558173717(Ptr<cv::dnn::MVNLayer>* const& me) {
#line 3424 "src/opencv/hub/types.rs"
                                                       
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17788493978444352700(Ptr<cv::img_hash::MarrHildrethHash>* const& me) {
#line 3447 "src/opencv/hub/types.rs"
                                                                    
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7110797066684438024(Ptr<cv::BaseCascadeClassifier::MaskGenerator>* const& me) {
#line 3470 "src/opencv/hub/types.rs"
                                                                              
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16824657060876277620_impl(cv::Ptr<cv::BaseCascadeClassifier::MaskGenerator>* const& me) {
#line 3481 "src/opencv/hub/types.rs"
                                                                                                            
            return me->get();
        
}
extern "C" {
void __cpp_closure_16824657060876277620(cv::Ptr<cv::BaseCascadeClassifier::MaskGenerator>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16824657060876277620_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16599416280007314315(Ptr<cv::dnn::MaxUnpoolLayer>* const& me) {
#line 3502 "src/opencv/hub/types.rs"
                                                             
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_969378202585011276(Ptr<cv::MergeDebevec>* const& me) {
#line 3525 "src/opencv/hub/types.rs"
                                                      
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1124236502233214873_impl(cv::Ptr<cv::MergeDebevec>* const& me) {
#line 3545 "src/opencv/hub/types.rs"
                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_1124236502233214873(cv::Ptr<cv::MergeDebevec>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1124236502233214873_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_10863833973569489794_impl(cv::Ptr<cv::MergeExposures>* const& me) {
#line 3554 "src/opencv/hub/types.rs"
                                                                                      
            return me->get();
        
}
extern "C" {
void __cpp_closure_10863833973569489794(cv::Ptr<cv::MergeExposures>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_10863833973569489794_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8823330407854163062(Ptr<cv::MergeMertens>* const& me) {
#line 3575 "src/opencv/hub/types.rs"
                                                      
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15879880248135126923_impl(cv::Ptr<cv::MergeMertens>* const& me) {
#line 3604 "src/opencv/hub/types.rs"
                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_15879880248135126923(cv::Ptr<cv::MergeMertens>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15879880248135126923_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8827862907116326792(Ptr<cv::MergeRobertson>* const& me) {
#line 3625 "src/opencv/hub/types.rs"
                                                        
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_13987088219514192559_impl(cv::Ptr<cv::MergeRobertson>* const& me) {
#line 3654 "src/opencv/hub/types.rs"
                                                                                      
            return me->get();
        
}
extern "C" {
void __cpp_closure_13987088219514192559(cv::Ptr<cv::MergeRobertson>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_13987088219514192559_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16849787778410430446(Ptr<cv::videostab::MotionEstimatorBase>* const& me) {
#line 3675 "src/opencv/hub/types.rs"
                                                                        
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_10817820762671558858_impl(cv::Ptr<cv::videostab::MotionEstimatorBase>* const& me) {
#line 3686 "src/opencv/hub/types.rs"
                                                                                                      
            return me->get();
        
}
extern "C" {
void __cpp_closure_10817820762671558858(cv::Ptr<cv::videostab::MotionEstimatorBase>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_10817820762671558858_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_306737377762118310(Ptr<cv::videostab::MotionFilterBase>* const& me) {
#line 3707 "src/opencv/hub/types.rs"
                                                                     
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6088203358513886165_impl(cv::Ptr<cv::videostab::MotionFilterBase>* const& me) {
#line 3727 "src/opencv/hub/types.rs"
                                                                                                   
            return me->get();
        
}
extern "C" {
void __cpp_closure_6088203358513886165(cv::Ptr<cv::videostab::MotionFilterBase>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_6088203358513886165_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9420934050222435202(Ptr<cv::ml::NormalBayesClassifier>* const& me) {
#line 3748 "src/opencv/hub/types.rs"
                                                                   
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12210542222737275905_impl(cv::Ptr<cv::ml::NormalBayesClassifier>* const& me) {
#line 3768 "src/opencv/hub/types.rs"
                                                                                                 
            return me->get();
        
}
extern "C" {
void __cpp_closure_12210542222737275905(cv::Ptr<cv::ml::NormalBayesClassifier>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12210542222737275905_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14967754789672115278(Ptr<cv::dnn::NormalizeBBoxLayer>* const& me) {
#line 3798 "src/opencv/hub/types.rs"
                                                                 
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9563326329782244080(Ptr<cv::ORB>* const& me) {
#line 3821 "src/opencv/hub/types.rs"
                                             
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1108626882757810831_impl(cv::Ptr<cv::ORB>* const& me) {
#line 3850 "src/opencv/hub/types.rs"
                                                                           
            return me->get();
        
}
extern "C" {
void __cpp_closure_1108626882757810831(cv::Ptr<cv::ORB>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1108626882757810831_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9440441718553280570(Ptr<cv::xfeatures2d::PCTSignatures>* const& me) {
#line 3871 "src/opencv/hub/types.rs"
                                                                    
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_4452362306563857291_impl(cv::Ptr<cv::xfeatures2d::PCTSignatures>* const& me) {
#line 3891 "src/opencv/hub/types.rs"
                                                                                                  
            return me->get();
        
}
extern "C" {
void __cpp_closure_4452362306563857291(cv::Ptr<cv::xfeatures2d::PCTSignatures>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_4452362306563857291_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10257672686281229754(Ptr<cv::xfeatures2d::PCTSignaturesSQFD>* const& me) {
#line 3912 "src/opencv/hub/types.rs"
                                                                        
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3573517871276799886_impl(cv::Ptr<cv::xfeatures2d::PCTSignaturesSQFD>* const& me) {
#line 3932 "src/opencv/hub/types.rs"
                                                                                                      
            return me->get();
        
}
extern "C" {
void __cpp_closure_3573517871276799886(cv::Ptr<cv::xfeatures2d::PCTSignaturesSQFD>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3573517871276799886_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17910216134377550753(Ptr<cv::img_hash::PHash>* const& me) {
#line 3953 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10644479542316175429(Ptr<cv::dnn::PaddingLayer>* const& me) {
#line 3976 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2967820026473400850(Ptr<cv::ml::ParamGrid>* const& me) {
#line 3999 "src/opencv/hub/types.rs"
                                                       
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16167574920054176898(Ptr<cv::structured_light::SinusoidalPattern::Params>* const& me) {
#line 4022 "src/opencv/hub/types.rs"
                                                                                     
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4247627113030051852(Ptr<cv::dnn::PermuteLayer>* const& me) {
#line 4045 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9215424044286806710(Ptr<cv::plot::Plot2d>* const& me) {
#line 4068 "src/opencv/hub/types.rs"
                                                      
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_8728249174976718134_impl(cv::Ptr<cv::plot::Plot2d>* const& me) {
#line 4088 "src/opencv/hub/types.rs"
                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_8728249174976718134(cv::Ptr<cv::plot::Plot2d>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_8728249174976718134_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16769774822878677528(Ptr<cv::dnn::PoolingLayer>* const& me) {
#line 4109 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17402325878906626091(Ptr<cv::dnn::PowerLayer>* const& me) {
#line 4132 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16477784381366228042(Ptr<cv::dnn::PriorBoxLayer>* const& me) {
#line 4155 "src/opencv/hub/types.rs"
                                                            
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6937340515399409502(Ptr<cv::dnn::ProposalLayer>* const& me) {
#line 4178 "src/opencv/hub/types.rs"
                                                            
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9956300721862918842(Ptr<cv::dnn::RNNLayer>* const& me) {
#line 4201 "src/opencv/hub/types.rs"
                                                       
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15400219728245805522_impl(cv::Ptr<cv::dnn::RNNLayer>* const& me) {
#line 4230 "src/opencv/hub/types.rs"
                                                                                     
            return me->get();
        
}
extern "C" {
void __cpp_closure_15400219728245805522(cv::Ptr<cv::dnn::RNNLayer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15400219728245805522_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13000817054207274220(Ptr<cv::ml::RTrees>* const& me) {
#line 4251 "src/opencv/hub/types.rs"
                                                    
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15543245347619478499_impl(cv::Ptr<cv::ml::RTrees>* const& me) {
#line 4280 "src/opencv/hub/types.rs"
                                                                                  
            return me->get();
        
}
extern "C" {
void __cpp_closure_15543245347619478499(cv::Ptr<cv::ml::RTrees>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15543245347619478499_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4550595403161930936(Ptr<cv::img_hash::RadialVarianceHash>* const& me) {
#line 4310 "src/opencv/hub/types.rs"
                                                                      
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6212028047882590212(Ptr<cv::dnn::ReLU6Layer>* const& me) {
#line 4333 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16133085131344526368(Ptr<cv::dnn::ReLULayer>* const& me) {
#line 4356 "src/opencv/hub/types.rs"
                                                        
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12461889819712850381(Ptr<cv::dnn::RegionLayer>* const& me) {
#line 4379 "src/opencv/hub/types.rs"
                                                          
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9751734359816078948(Ptr<cv::dnn::ReorgLayer>* const& me) {
#line 4402 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2907390751103714830(Ptr<cv::dnn::ReshapeLayer>* const& me) {
#line 4425 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12723748592525922054(Ptr<cv::dnn::ResizeLayer>* const& me) {
#line 4448 "src/opencv/hub/types.rs"
                                                          
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1936546357439376816(Ptr<cv::bioinspired::Retina>* const& me) {
#line 4471 "src/opencv/hub/types.rs"
                                                             
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9425702410970703142_impl(cv::Ptr<cv::bioinspired::Retina>* const& me) {
#line 4491 "src/opencv/hub/types.rs"
                                                                                           
            return me->get();
        
}
extern "C" {
void __cpp_closure_9425702410970703142(cv::Ptr<cv::bioinspired::Retina>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9425702410970703142_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15761352024001064129(Ptr<cv::bioinspired::RetinaFastToneMapping>* const& me) {
#line 4512 "src/opencv/hub/types.rs"
                                                                            
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_733037742724609830_impl(cv::Ptr<cv::bioinspired::RetinaFastToneMapping>* const& me) {
#line 4532 "src/opencv/hub/types.rs"
                                                                                                          
            return me->get();
        
}
extern "C" {
void __cpp_closure_733037742724609830(cv::Ptr<cv::bioinspired::RetinaFastToneMapping>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_733037742724609830_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2371959563926750531(Ptr<cv::sfm::SFMLibmvEuclideanReconstruction>* const& me) {
#line 4553 "src/opencv/hub/types.rs"
                                                                              
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15870932814481900338(Ptr<cv::xfeatures2d::SIFT>* const& me) {
#line 4576 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12884606475019575687(Ptr<cv::xfeatures2d::SURF>* const& me) {
#line 4599 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11830126940083729864_impl(cv::Ptr<cv::xfeatures2d::SURF>* const& me) {
#line 4628 "src/opencv/hub/types.rs"
                                                                                         
            return me->get();
        
}
extern "C" {
void __cpp_closure_11830126940083729864(cv::Ptr<cv::xfeatures2d::SURF>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_11830126940083729864_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10045000002926703753(Ptr<cv::ml::SVM>* const& me) {
#line 4649 "src/opencv/hub/types.rs"
                                                 
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15383192762949579036_impl(cv::Ptr<cv::ml::SVM>* const& me) {
#line 4669 "src/opencv/hub/types.rs"
                                                                               
            return me->get();
        
}
extern "C" {
void __cpp_closure_15383192762949579036(cv::Ptr<cv::ml::SVM>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15383192762949579036_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3777505347712248467(Ptr<cv::ml::SVMSGD>* const& me) {
#line 4699 "src/opencv/hub/types.rs"
                                                    
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3558943668980408180_impl(cv::Ptr<cv::ml::SVMSGD>* const& me) {
#line 4719 "src/opencv/hub/types.rs"
                                                                                  
            return me->get();
        
}
extern "C" {
void __cpp_closure_3558943668980408180(cv::Ptr<cv::ml::SVMSGD>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3558943668980408180_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7954975382389705004(Ptr<cv::dnn::ScaleLayer>* const& me) {
#line 4749 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_360150812001673555(Ptr<cv::ShapeContextDistanceExtractor>* const& me) {
#line 4772 "src/opencv/hub/types.rs"
                                                                       
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1352300925758240751_impl(cv::Ptr<cv::ShapeContextDistanceExtractor>* const& me) {
#line 4792 "src/opencv/hub/types.rs"
                                                                                                     
            return me->get();
        
}
extern "C" {
void __cpp_closure_1352300925758240751(cv::Ptr<cv::ShapeContextDistanceExtractor>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1352300925758240751_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16298546404844554959(Ptr<cv::dnn::SigmoidLayer>* const& me) {
#line 4822 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16470498267405534177(Ptr<cv::SimpleBlobDetector>* const& me) {
#line 4845 "src/opencv/hub/types.rs"
                                                            
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3749787240431094784(Ptr<cv::xphoto::SimpleWB>* const& me) {
#line 4868 "src/opencv/hub/types.rs"
                                                          
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12212805680333427698_impl(cv::Ptr<cv::xphoto::SimpleWB>* const& me) {
#line 4888 "src/opencv/hub/types.rs"
                                                                                        
            return me->get();
        
}
extern "C" {
void __cpp_closure_12212805680333427698(cv::Ptr<cv::xphoto::SimpleWB>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12212805680333427698_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13695571527984217256(Ptr<cv::structured_light::SinusoidalPattern>* const& me) {
#line 4918 "src/opencv/hub/types.rs"
                                                                             
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_2320937837311737793_impl(cv::Ptr<cv::structured_light::SinusoidalPattern>* const& me) {
#line 4938 "src/opencv/hub/types.rs"
                                                                                                           
            return me->get();
        
}
extern "C" {
void __cpp_closure_2320937837311737793(cv::Ptr<cv::structured_light::SinusoidalPattern>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_2320937837311737793_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1868804106035409695(Ptr<cv::dnn::SliceLayer>* const& me) {
#line 4968 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14534451350619200859(Ptr<cv::dnn::SoftmaxLayer>* const& me) {
#line 4991 "src/opencv/hub/types.rs"
                                                           
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14406019438041710152(Ptr<cv::SparsePyrLKOpticalFlow>* const& me) {
#line 5014 "src/opencv/hub/types.rs"
                                                                
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_13625481011724271854_impl(cv::Ptr<cv::SparseOpticalFlow>* const& me) {
#line 5034 "src/opencv/hub/types.rs"
                                                                                         
            return me->get();
        
}
extern "C" {
void __cpp_closure_13625481011724271854(cv::Ptr<cv::SparseOpticalFlow>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_13625481011724271854_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_10396465582262553300_impl(cv::Ptr<cv::SparsePyrLKOpticalFlow>* const& me) {
#line 5043 "src/opencv/hub/types.rs"
                                                                                              
            return me->get();
        
}
extern "C" {
void __cpp_closure_10396465582262553300(cv::Ptr<cv::SparsePyrLKOpticalFlow>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_10396465582262553300_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17857226872240975794(Ptr<cv::dnn::SplitLayer>* const& me) {
#line 5064 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6645996351189639176(Ptr<cv::xfeatures2d::StarDetector>* const& me) {
#line 5087 "src/opencv/hub/types.rs"
                                                                   
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6546716437333099587(Ptr<cv::StereoBM>* const& me) {
#line 5110 "src/opencv/hub/types.rs"
                                                  
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1703956185342649881_impl(cv::Ptr<cv::StereoBM>* const& me) {
#line 5130 "src/opencv/hub/types.rs"
                                                                                
            return me->get();
        
}
extern "C" {
void __cpp_closure_1703956185342649881(cv::Ptr<cv::StereoBM>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1703956185342649881_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_17835170138994487146_impl(cv::Ptr<cv::StereoMatcher>* const& me) {
#line 5139 "src/opencv/hub/types.rs"
                                                                                     
            return me->get();
        
}
extern "C" {
void __cpp_closure_17835170138994487146(cv::Ptr<cv::StereoMatcher>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_17835170138994487146_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3255234121190735457(Ptr<cv::StereoSGBM>* const& me) {
#line 5160 "src/opencv/hub/types.rs"
                                                    
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1654281845497104519_impl(cv::Ptr<cv::StereoSGBM>* const& me) {
#line 5189 "src/opencv/hub/types.rs"
                                                                                  
            return me->get();
        
}
extern "C" {
void __cpp_closure_1654281845497104519(cv::Ptr<cv::StereoSGBM>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1654281845497104519_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10906360933173671857(Ptr<cv::Stitcher>* const& me) {
#line 5210 "src/opencv/hub/types.rs"
                                                  
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15128721469780227812(Ptr<cv::superres::SuperResolution>* const& me) {
#line 5233 "src/opencv/hub/types.rs"
                                                                   
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3688401402665632575_impl(cv::Ptr<cv::superres::SuperResolution>* const& me) {
#line 5262 "src/opencv/hub/types.rs"
                                                                                                 
            return me->get();
        
}
extern "C" {
void __cpp_closure_3688401402665632575(cv::Ptr<cv::superres::SuperResolution>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3688401402665632575_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11353623839479258768(Ptr<cv::bgsegm::SyntheticSequenceGenerator>* const& me) {
#line 5283 "src/opencv/hub/types.rs"
                                                                            
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1175662990378228105(Ptr<cv::dnn::TanHLayer>* const& me) {
#line 5306 "src/opencv/hub/types.rs"
                                                        
            delete me;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17753628109745312168(Ptr<cv::ThinPlateSplineShapeTransformer>* const& me) {
#line 5329 "src/opencv/hub/types.rs"
                                                                         
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16446232155672134300_impl(cv::Ptr<cv::ThinPlateSplineShapeTransformer>* const& me) {
#line 5358 "src/opencv/hub/types.rs"
                                                                                                       
            return me->get();
        
}
extern "C" {
void __cpp_closure_16446232155672134300(cv::Ptr<cv::ThinPlateSplineShapeTransformer>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16446232155672134300_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3032352726630820502(Ptr<cv::Tonemap>* const& me) {
#line 5379 "src/opencv/hub/types.rs"
                                                 
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_13778030310213370037_impl(cv::Ptr<cv::Tonemap>* const& me) {
#line 5399 "src/opencv/hub/types.rs"
                                                                               
            return me->get();
        
}
extern "C" {
void __cpp_closure_13778030310213370037(cv::Ptr<cv::Tonemap>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_13778030310213370037_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9288262875142720556(Ptr<cv::TonemapDrago>* const& me) {
#line 5420 "src/opencv/hub/types.rs"
                                                      
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1045920101063545181_impl(cv::Ptr<cv::TonemapDrago>* const& me) {
#line 5449 "src/opencv/hub/types.rs"
                                                                                    
            return me->get();
        
}
extern "C" {
void __cpp_closure_1045920101063545181(cv::Ptr<cv::TonemapDrago>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1045920101063545181_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_634615454237714425(Ptr<cv::xphoto::TonemapDurand>* const& me) {
#line 5470 "src/opencv/hub/types.rs"
                                                               
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9029446508362955159_impl(cv::Ptr<cv::xphoto::TonemapDurand>* const& me) {
#line 5481 "src/opencv/hub/types.rs"
                                                                                             
            return me->get();
        
}
extern "C" {
void __cpp_closure_9029446508362955159(cv::Ptr<cv::xphoto::TonemapDurand>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9029446508362955159_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1973540200901411147(Ptr<cv::TonemapMantiuk>* const& me) {
#line 5502 "src/opencv/hub/types.rs"
                                                        
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1082315758510282792_impl(cv::Ptr<cv::TonemapMantiuk>* const& me) {
#line 5531 "src/opencv/hub/types.rs"
                                                                                      
            return me->get();
        
}
extern "C" {
void __cpp_closure_1082315758510282792(cv::Ptr<cv::TonemapMantiuk>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1082315758510282792_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1405279751135639723(Ptr<cv::TonemapReinhard>* const& me) {
#line 5552 "src/opencv/hub/types.rs"
                                                         
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3285744690845491651_impl(cv::Ptr<cv::TonemapReinhard>* const& me) {
#line 5581 "src/opencv/hub/types.rs"
                                                                                       
            return me->get();
        
}
extern "C" {
void __cpp_closure_3285744690845491651(cv::Ptr<cv::TonemapReinhard>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3285744690845491651_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_618249180929106717(Ptr<cv::ml::TrainData>* const& me) {
#line 5602 "src/opencv/hub/types.rs"
                                                       
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12550152626119932562_impl(cv::Ptr<cv::ml::TrainData>* const& me) {
#line 5613 "src/opencv/hub/types.rs"
                                                                                     
            return me->get();
        
}
extern "C" {
void __cpp_closure_12550152626119932562(cv::Ptr<cv::ml::TrainData>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12550152626119932562_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4054153030151661446(Ptr<cv::bioinspired::TransientAreasSegmentationModule>* const& me) {
#line 5634 "src/opencv/hub/types.rs"
                                                                                       
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16320715448303060337_impl(cv::Ptr<cv::bioinspired::TransientAreasSegmentationModule>* const& me) {
#line 5654 "src/opencv/hub/types.rs"
                                                                                                                     
            return me->get();
        
}
extern "C" {
void __cpp_closure_16320715448303060337(cv::Ptr<cv::bioinspired::TransientAreasSegmentationModule>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_16320715448303060337_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2903559663075135314(Ptr<cv::xfeatures2d::VGG>* const& me) {
#line 5675 "src/opencv/hub/types.rs"
                                                          
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11547659441977831531_impl(cv::Ptr<cv::xfeatures2d::VGG>* const& me) {
#line 5704 "src/opencv/hub/types.rs"
                                                                                        
            return me->get();
        
}
extern "C" {
void __cpp_closure_11547659441977831531(cv::Ptr<cv::xfeatures2d::VGG>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_11547659441977831531_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4756517262374739382(Ptr<cv::VariationalRefinement>* const& me) {
#line 5725 "src/opencv/hub/types.rs"
                                                               
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7743851960032734782_impl(cv::Ptr<cv::VariationalRefinement>* const& me) {
#line 5754 "src/opencv/hub/types.rs"
                                                                                             
            return me->get();
        
}
extern "C" {
void __cpp_closure_7743851960032734782(cv::Ptr<cv::VariationalRefinement>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_7743851960032734782_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15762518598864093390(Ptr<cv::xobjdetect::WBDetector>* const& me) {
#line 5775 "src/opencv/hub/types.rs"
                                                                
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3238170990704411966_impl(cv::Ptr<cv::xobjdetect::WBDetector>* const& me) {
#line 5786 "src/opencv/hub/types.rs"
                                                                                              
            return me->get();
        
}
extern "C" {
void __cpp_closure_3238170990704411966(cv::Ptr<cv::xobjdetect::WBDetector>* const& me, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3238170990704411966_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9404264430494156532(Ptr<float>* const& me) {
#line 5807 "src/opencv/hub/types.rs"
                                           
            delete me;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_4674391220520923164_impl(std::vector<cv::DMatch>* const& vec) {
#line 5830 "src/opencv/hub/types.rs"
                                                                                                           
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_4674391220520923164(std::vector<cv::DMatch>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_4674391220520923164_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15290650661388735515(std::vector<cv::DMatch>* const& vec) {
#line 5842 "src/opencv/hub/types.rs"
                                                         
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_10471633955279465266_impl() {
#line 5873 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::DMatch>();
        
}
extern "C" {
void __cpp_closure_10471633955279465266( void* __result) {
    ::new(__result) (void*)(__cpp_closure_10471633955279465266_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11670610201937047534_impl(const std::vector<cv::DMatch>* const& vec) {
#line 5881 "src/opencv/hub/types.rs"
                                                                                     
            return vec->size();
        
}
extern "C" {
void __cpp_closure_11670610201937047534(const std::vector<cv::DMatch>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11670610201937047534_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_14195017661130982216_impl(const std::vector<cv::DMatch>* const& vec) {
#line 5889 "src/opencv/hub/types.rs"
                                                                                 
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_14195017661130982216(const std::vector<cv::DMatch>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_14195017661130982216_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_6553890723709291524_impl(const std::vector<cv::DMatch>* const& vec) {
#line 5897 "src/opencv/hub/types.rs"
                                                                                     
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_6553890723709291524(const std::vector<cv::DMatch>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_6553890723709291524_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11300096679525706219(std::vector<cv::DMatch>* const& vec) {
#line 5905 "src/opencv/hub/types.rs"
                                                         
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10801280333637246550(std::vector<cv::DMatch>* const& vec, size_t const& additional) {
#line 5913 "src/opencv/hub/types.rs"
                                                                                 
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8092649963627636402(std::vector<cv::DMatch>* const& vec, size_t const& index) {
#line 5922 "src/opencv/hub/types.rs"
                                                                            
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4669129286379900903(std::vector<cv::DMatch>* const& vec, size_t const& index1, size_t const& index2) {
#line 5935 "src/opencv/hub/types.rs"
                                                                                                     
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8942869993081642168(std::vector<cv::DMatch>* const& vec) {
#line 5945 "src/opencv/hub/types.rs"
                                                         
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12635579593382041797(std::vector<cv::DMatch>* const& vec, cv::DMatch const& val) {
#line 5955 "src/opencv/hub/types.rs"
                                                                              
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13509449439050880971(std::vector<cv::DMatch>* const& vec, size_t const& index, cv::DMatch const& val) {
#line 5964 "src/opencv/hub/types.rs"
                                                                                                 
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_DMatch __cpp_closure_18373684793563344043_impl(const std::vector<cv::DMatch>* const& vec, size_t const& index) {
#line 5973 "src/opencv/hub/types.rs"
                                                                                                                                                    
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_DMatch)
        
}
extern "C" {
void __cpp_closure_18373684793563344043(const std::vector<cv::DMatch>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_DMatch)(__cpp_closure_18373684793563344043_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv::DMatch __cpp_closure_9454853937062164660_impl(const std::vector<cv::DMatch>* const& vec, size_t const& index) {
#line 5983 "src/opencv/hub/types.rs"
                                                                                                                  
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_9454853937062164660(const std::vector<cv::DMatch>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv::DMatch)(__cpp_closure_9454853937062164660_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_15911182154416177790_impl(std::vector<cv::DMatch>* const& vec, size_t const& index, cv::DMatch const& val) {
#line 5991 "src/opencv/hub/types.rs"
                                                                                                                                                               
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_15911182154416177790(std::vector<cv::DMatch>* const& vec, size_t const& index, cv::DMatch const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_15911182154416177790_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16422822724327893431(std::vector<cv::DMatch>* const& vec, size_t const& index, cv::DMatch const& val) {
#line 6002 "src/opencv/hub/types.rs"
                                                                                                 
            (*vec)[index] = val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17782615142455000158(std::vector<cv::DetectionROI>* const& vec) {
#line 6032 "src/opencv/hub/types.rs"
                                                               
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12897256558288052471_impl() {
#line 6063 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::DetectionROI>();
        
}
extern "C" {
void __cpp_closure_12897256558288052471( void* __result) {
    ::new(__result) (void*)(__cpp_closure_12897256558288052471_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_3646958439540451126_impl(const std::vector<cv::DetectionROI>* const& vec) {
#line 6071 "src/opencv/hub/types.rs"
                                                                                           
            return vec->size();
        
}
extern "C" {
void __cpp_closure_3646958439540451126(const std::vector<cv::DetectionROI>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_3646958439540451126_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_8914147281552747206_impl(const std::vector<cv::DetectionROI>* const& vec) {
#line 6079 "src/opencv/hub/types.rs"
                                                                                       
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_8914147281552747206(const std::vector<cv::DetectionROI>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_8914147281552747206_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11431014761157442844_impl(const std::vector<cv::DetectionROI>* const& vec) {
#line 6087 "src/opencv/hub/types.rs"
                                                                                           
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_11431014761157442844(const std::vector<cv::DetectionROI>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11431014761157442844_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11811132315376436326(std::vector<cv::DetectionROI>* const& vec) {
#line 6095 "src/opencv/hub/types.rs"
                                                               
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4404923708776346260(std::vector<cv::DetectionROI>* const& vec, size_t const& additional) {
#line 6103 "src/opencv/hub/types.rs"
                                                                                       
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10564428206213610634(std::vector<cv::DetectionROI>* const& vec, size_t const& index) {
#line 6112 "src/opencv/hub/types.rs"
                                                                                  
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9498205440752511026(std::vector<cv::DetectionROI>* const& vec, size_t const& index1, size_t const& index2) {
#line 6125 "src/opencv/hub/types.rs"
                                                                                                           
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2327144954298267897(std::vector<cv::DetectionROI>* const& vec) {
#line 6135 "src/opencv/hub/types.rs"
                                                               
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14523492943826002318(std::vector<cv::DetectionROI>* const& vec, cv::DetectionROI* const& val) {
#line 6146 "src/opencv/hub/types.rs"
                                                                                           
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10894961991327774538(std::vector<cv::DetectionROI>* const& vec, size_t const& index, cv::DetectionROI* const& val) {
#line 6156 "src/opencv/hub/types.rs"
                                                                                                              
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_14438998223381755009_impl(const std::vector<cv::DetectionROI>* const& vec, size_t const& index) {
#line 6165 "src/opencv/hub/types.rs"
                                                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, new cv::DetectionROI(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_14438998223381755009(const std::vector<cv::DetectionROI>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_14438998223381755009_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15615904229132646509_impl(const std::vector<cv::DetectionROI>* const& vec, size_t const& index) {
#line 6175 "src/opencv/hub/types.rs"
                                                                                                                                                        
            return new cv::DetectionROI((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_15615904229132646509(const std::vector<cv::DetectionROI>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15615904229132646509_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_9205990657145873986_impl(std::vector<cv::DetectionROI>* const& vec, size_t const& index, cv::DetectionROI* const& val) {
#line 6184 "src/opencv/hub/types.rs"
                                                                                                                                                                            
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_9205990657145873986(std::vector<cv::DetectionROI>* const& vec, size_t const& index, cv::DetectionROI* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_9205990657145873986_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13875113986189357627(std::vector<cv::DetectionROI>* const& vec, size_t const& index, cv::DetectionROI* const& val) {
#line 6196 "src/opencv/hub/types.rs"
                                                                                                              
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3074040188831730085(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec) {
#line 6221 "src/opencv/hub/types.rs"
                                                                                 
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_2193398303447859563_impl() {
#line 6252 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::xfeatures2d::Elliptic_KeyPoint>();
        
}
extern "C" {
void __cpp_closure_2193398303447859563( void* __result) {
    ::new(__result) (void*)(__cpp_closure_2193398303447859563_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_17148886415187056930_impl(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec) {
#line 6260 "src/opencv/hub/types.rs"
                                                                                                             
            return vec->size();
        
}
extern "C" {
void __cpp_closure_17148886415187056930(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_17148886415187056930_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_3252835796573477998_impl(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec) {
#line 6268 "src/opencv/hub/types.rs"
                                                                                                         
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_3252835796573477998(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_3252835796573477998_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_14587002918496984553_impl(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec) {
#line 6276 "src/opencv/hub/types.rs"
                                                                                                             
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_14587002918496984553(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_14587002918496984553_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_295766625996957677(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec) {
#line 6284 "src/opencv/hub/types.rs"
                                                                                 
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12997991613063800679(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& additional) {
#line 6292 "src/opencv/hub/types.rs"
                                                                                                         
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2118172634627805866(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index) {
#line 6301 "src/opencv/hub/types.rs"
                                                                                                    
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2127479284379495442(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index1, size_t const& index2) {
#line 6314 "src/opencv/hub/types.rs"
                                                                                                                             
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3752589128807051386(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec) {
#line 6324 "src/opencv/hub/types.rs"
                                                                                 
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9088854080944328713(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, cv::xfeatures2d::Elliptic_KeyPoint* const& val) {
#line 6335 "src/opencv/hub/types.rs"
                                                                                                                               
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5133379219696854141(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index, cv::xfeatures2d::Elliptic_KeyPoint* const& val) {
#line 6345 "src/opencv/hub/types.rs"
                                                                                                                                                  
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_4031284176960032447_impl(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index) {
#line 6354 "src/opencv/hub/types.rs"
                                                                                                                                                                            
            try {
                return { Error::Code::StsOk, NULL, new cv::xfeatures2d::Elliptic_KeyPoint(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_4031284176960032447(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_4031284176960032447_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15345325904379480701_impl(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index) {
#line 6364 "src/opencv/hub/types.rs"
                                                                                                                                                                                 
            return new cv::xfeatures2d::Elliptic_KeyPoint((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_15345325904379480701(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15345325904379480701_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_9928871132854783870_impl(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index, cv::xfeatures2d::Elliptic_KeyPoint* const& val) {
#line 6373 "src/opencv/hub/types.rs"
                                                                                                                                                                                                                
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_9928871132854783870(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index, cv::xfeatures2d::Elliptic_KeyPoint* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_9928871132854783870_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3150681320486488051(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>* const& vec, size_t const& index, cv::xfeatures2d::Elliptic_KeyPoint* const& val) {
#line 6385 "src/opencv/hub/types.rs"
                                                                                                                                                  
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6626609059411216896(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec) {
#line 6410 "src/opencv/hub/types.rs"
                                                                                   
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11415598706624217859_impl() {
#line 6441 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::DetectionBasedTracker::ExtObject>();
        
}
extern "C" {
void __cpp_closure_11415598706624217859( void* __result) {
    ::new(__result) (void*)(__cpp_closure_11415598706624217859_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11056692831393708364_impl(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec) {
#line 6449 "src/opencv/hub/types.rs"
                                                                                                               
            return vec->size();
        
}
extern "C" {
void __cpp_closure_11056692831393708364(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11056692831393708364_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_11888395373105940659_impl(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec) {
#line 6457 "src/opencv/hub/types.rs"
                                                                                                           
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_11888395373105940659(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_11888395373105940659_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_9162930286249469722_impl(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec) {
#line 6465 "src/opencv/hub/types.rs"
                                                                                                               
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_9162930286249469722(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_9162930286249469722_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3734240423129365362(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec) {
#line 6473 "src/opencv/hub/types.rs"
                                                                                   
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10961134387514359668(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& additional) {
#line 6481 "src/opencv/hub/types.rs"
                                                                                                           
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15556014847456324504(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index) {
#line 6490 "src/opencv/hub/types.rs"
                                                                                                      
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5512848381787752875(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index1, size_t const& index2) {
#line 6503 "src/opencv/hub/types.rs"
                                                                                                                               
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18237748664670686308(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec) {
#line 6513 "src/opencv/hub/types.rs"
                                                                                   
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_743682484784167627(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, cv::DetectionBasedTracker::ExtObject* const& val) {
#line 6524 "src/opencv/hub/types.rs"
                                                                                                                                   
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15803022385993170862(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index, cv::DetectionBasedTracker::ExtObject* const& val) {
#line 6534 "src/opencv/hub/types.rs"
                                                                                                                                                      
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_1718366197401541479_impl(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index) {
#line 6543 "src/opencv/hub/types.rs"
                                                                                                                                                                              
            try {
                return { Error::Code::StsOk, NULL, new cv::DetectionBasedTracker::ExtObject(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_1718366197401541479(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_1718366197401541479_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_5954416479333492102_impl(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index) {
#line 6553 "src/opencv/hub/types.rs"
                                                                                                                                                                                               
            return new cv::DetectionBasedTracker::ExtObject((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_5954416479333492102(const std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_5954416479333492102_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_8573612662851766529_impl(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index, cv::DetectionBasedTracker::ExtObject* const& val) {
#line 6562 "src/opencv/hub/types.rs"
                                                                                                                                                                                                                    
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_8573612662851766529(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index, cv::DetectionBasedTracker::ExtObject* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_8573612662851766529_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10371516880619494324(std::vector<cv::DetectionBasedTracker::ExtObject>* const& vec, size_t const& index, cv::DetectionBasedTracker::ExtObject* const& val) {
#line 6574 "src/opencv/hub/types.rs"
                                                                                                                                                      
            (*vec)[index] = *val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_17462383869196190163_impl(std::vector<cv::line_descriptor::KeyLine>* const& vec) {
#line 6597 "src/opencv/hub/types.rs"
                                                                                                                                                
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_17462383869196190163(std::vector<cv::line_descriptor::KeyLine>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_17462383869196190163_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7668524569890039392(std::vector<cv::line_descriptor::KeyLine>* const& vec) {
#line 6609 "src/opencv/hub/types.rs"
                                                                           
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3811088676782801859_impl() {
#line 6640 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::line_descriptor::KeyLine>();
        
}
extern "C" {
void __cpp_closure_3811088676782801859( void* __result) {
    ::new(__result) (void*)(__cpp_closure_3811088676782801859_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_546764723872345558_impl(const std::vector<cv::line_descriptor::KeyLine>* const& vec) {
#line 6648 "src/opencv/hub/types.rs"
                                                                                                       
            return vec->size();
        
}
extern "C" {
void __cpp_closure_546764723872345558(const std::vector<cv::line_descriptor::KeyLine>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_546764723872345558_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_11546945343202345905_impl(const std::vector<cv::line_descriptor::KeyLine>* const& vec) {
#line 6656 "src/opencv/hub/types.rs"
                                                                                                   
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_11546945343202345905(const std::vector<cv::line_descriptor::KeyLine>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_11546945343202345905_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_14515515723909939806_impl(const std::vector<cv::line_descriptor::KeyLine>* const& vec) {
#line 6664 "src/opencv/hub/types.rs"
                                                                                                       
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_14515515723909939806(const std::vector<cv::line_descriptor::KeyLine>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_14515515723909939806_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2498733974426812968(std::vector<cv::line_descriptor::KeyLine>* const& vec) {
#line 6672 "src/opencv/hub/types.rs"
                                                                           
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5226190320744307105(std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& additional) {
#line 6680 "src/opencv/hub/types.rs"
                                                                                                   
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2324492252536501012(std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index) {
#line 6689 "src/opencv/hub/types.rs"
                                                                                              
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16603740254157801484(std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index1, size_t const& index2) {
#line 6702 "src/opencv/hub/types.rs"
                                                                                                                       
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6424396827849893270(std::vector<cv::line_descriptor::KeyLine>* const& vec) {
#line 6712 "src/opencv/hub/types.rs"
                                                                           
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17751962569595202574(std::vector<cv::line_descriptor::KeyLine>* const& vec, cv::line_descriptor::KeyLine const& val) {
#line 6722 "src/opencv/hub/types.rs"
                                                                                                                  
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7558612527809500192(std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index, cv::line_descriptor::KeyLine const& val) {
#line 6731 "src/opencv/hub/types.rs"
                                                                                                                                     
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_KeyLine __cpp_closure_2665137612377542554_impl(const std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index) {
#line 6740 "src/opencv/hub/types.rs"
                                                                                                                                                                        
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_KeyLine)
        
}
extern "C" {
void __cpp_closure_2665137612377542554(const std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_KeyLine)(__cpp_closure_2665137612377542554_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv::line_descriptor::KeyLine __cpp_closure_11931383868742619471_impl(const std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index) {
#line 6750 "src/opencv/hub/types.rs"
                                                                                                                                                                         
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_11931383868742619471(const std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv::line_descriptor::KeyLine)(__cpp_closure_11931383868742619471_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_2037248515412179921_impl(std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index, cv::line_descriptor::KeyLine const& val) {
#line 6758 "src/opencv/hub/types.rs"
                                                                                                                                                                                                   
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_2037248515412179921(std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index, cv::line_descriptor::KeyLine const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_2037248515412179921_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13943442841400996419(std::vector<cv::line_descriptor::KeyLine>* const& vec, size_t const& index, cv::line_descriptor::KeyLine const& val) {
#line 6769 "src/opencv/hub/types.rs"
                                                                                                                                     
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_11224092282151344485_impl(std::vector<cv::KeyPoint>* const& vec) {
#line 6797 "src/opencv/hub/types.rs"
                                                                                                               
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_11224092282151344485(std::vector<cv::KeyPoint>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_11224092282151344485_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1167824623877612649(std::vector<cv::KeyPoint>* const& vec) {
#line 6809 "src/opencv/hub/types.rs"
                                                           
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7248536824058441090_impl() {
#line 6840 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::KeyPoint>();
        
}
extern "C" {
void __cpp_closure_7248536824058441090( void* __result) {
    ::new(__result) (void*)(__cpp_closure_7248536824058441090_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_15220941912224742389_impl(const std::vector<cv::KeyPoint>* const& vec) {
#line 6848 "src/opencv/hub/types.rs"
                                                                                       
            return vec->size();
        
}
extern "C" {
void __cpp_closure_15220941912224742389(const std::vector<cv::KeyPoint>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_15220941912224742389_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_2976277802773075598_impl(const std::vector<cv::KeyPoint>* const& vec) {
#line 6856 "src/opencv/hub/types.rs"
                                                                                   
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_2976277802773075598(const std::vector<cv::KeyPoint>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_2976277802773075598_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_4938761509377368093_impl(const std::vector<cv::KeyPoint>* const& vec) {
#line 6864 "src/opencv/hub/types.rs"
                                                                                       
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_4938761509377368093(const std::vector<cv::KeyPoint>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_4938761509377368093_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_128377175832137008(std::vector<cv::KeyPoint>* const& vec) {
#line 6872 "src/opencv/hub/types.rs"
                                                           
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17219629578048030604(std::vector<cv::KeyPoint>* const& vec, size_t const& additional) {
#line 6880 "src/opencv/hub/types.rs"
                                                                                   
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13301806137447112883(std::vector<cv::KeyPoint>* const& vec, size_t const& index) {
#line 6889 "src/opencv/hub/types.rs"
                                                                              
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11177678911017773952(std::vector<cv::KeyPoint>* const& vec, size_t const& index1, size_t const& index2) {
#line 6902 "src/opencv/hub/types.rs"
                                                                                                       
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4392639904478546750(std::vector<cv::KeyPoint>* const& vec) {
#line 6912 "src/opencv/hub/types.rs"
                                                           
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15631773648252398002(std::vector<cv::KeyPoint>* const& vec, cv::KeyPoint const& val) {
#line 6922 "src/opencv/hub/types.rs"
                                                                                  
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1826580309323276549(std::vector<cv::KeyPoint>* const& vec, size_t const& index, cv::KeyPoint const& val) {
#line 6931 "src/opencv/hub/types.rs"
                                                                                                     
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_KeyPoint __cpp_closure_2873301603114579920_impl(const std::vector<cv::KeyPoint>* const& vec, size_t const& index) {
#line 6940 "src/opencv/hub/types.rs"
                                                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_KeyPoint)
        
}
extern "C" {
void __cpp_closure_2873301603114579920(const std::vector<cv::KeyPoint>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_KeyPoint)(__cpp_closure_2873301603114579920_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv::KeyPoint __cpp_closure_3847331770652133291_impl(const std::vector<cv::KeyPoint>* const& vec, size_t const& index) {
#line 6950 "src/opencv/hub/types.rs"
                                                                                                                        
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_3847331770652133291(const std::vector<cv::KeyPoint>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv::KeyPoint)(__cpp_closure_3847331770652133291_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_11122785704331773848_impl(std::vector<cv::KeyPoint>* const& vec, size_t const& index, cv::KeyPoint const& val) {
#line 6958 "src/opencv/hub/types.rs"
                                                                                                                                                                   
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_11122785704331773848(std::vector<cv::KeyPoint>* const& vec, size_t const& index, cv::KeyPoint const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_11122785704331773848_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2288726521239565537(std::vector<cv::KeyPoint>* const& vec, size_t const& index, cv::KeyPoint const& val) {
#line 6969 "src/opencv/hub/types.rs"
                                                                                                     
            (*vec)[index] = val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1616174321047765932(std::vector<cv::Mat>* const& vec) {
#line 6999 "src/opencv/hub/types.rs"
                                                      
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7399222969602663750_impl() {
#line 7030 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::Mat>();
        
}
extern "C" {
void __cpp_closure_7399222969602663750( void* __result) {
    ::new(__result) (void*)(__cpp_closure_7399222969602663750_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_17693422600574069294_impl(const std::vector<cv::Mat>* const& vec) {
#line 7038 "src/opencv/hub/types.rs"
                                                                                  
            return vec->size();
        
}
extern "C" {
void __cpp_closure_17693422600574069294(const std::vector<cv::Mat>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_17693422600574069294_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_12453604116914976013_impl(const std::vector<cv::Mat>* const& vec) {
#line 7046 "src/opencv/hub/types.rs"
                                                                              
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_12453604116914976013(const std::vector<cv::Mat>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_12453604116914976013_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_8634334309538648831_impl(const std::vector<cv::Mat>* const& vec) {
#line 7054 "src/opencv/hub/types.rs"
                                                                                  
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_8634334309538648831(const std::vector<cv::Mat>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_8634334309538648831_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1543689406954297498(std::vector<cv::Mat>* const& vec) {
#line 7062 "src/opencv/hub/types.rs"
                                                      
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17620058482356912797(std::vector<cv::Mat>* const& vec, size_t const& additional) {
#line 7070 "src/opencv/hub/types.rs"
                                                                              
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6865175574988018626(std::vector<cv::Mat>* const& vec, size_t const& index) {
#line 7079 "src/opencv/hub/types.rs"
                                                                         
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_314936093064805283(std::vector<cv::Mat>* const& vec, size_t const& index1, size_t const& index2) {
#line 7092 "src/opencv/hub/types.rs"
                                                                                                  
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16001067059979594207(std::vector<cv::Mat>* const& vec) {
#line 7102 "src/opencv/hub/types.rs"
                                                      
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9216146474565868324(std::vector<cv::Mat>* const& vec, cv::Mat* const& val) {
#line 7113 "src/opencv/hub/types.rs"
                                                                         
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10751110325882406258(std::vector<cv::Mat>* const& vec, size_t const& index, cv::Mat* const& val) {
#line 7123 "src/opencv/hub/types.rs"
                                                                                            
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_9759592100864313143_impl(const std::vector<cv::Mat>* const& vec, size_t const& index) {
#line 7132 "src/opencv/hub/types.rs"
                                                                                                                                                 
            try {
                return { Error::Code::StsOk, NULL, new cv::Mat(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_9759592100864313143(const std::vector<cv::Mat>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_9759592100864313143_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_4961131279666700380_impl(const std::vector<cv::Mat>* const& vec, size_t const& index) {
#line 7142 "src/opencv/hub/types.rs"
                                                                                                                          
            return new cv::Mat((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_4961131279666700380(const std::vector<cv::Mat>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_4961131279666700380_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_2684880046096815640_impl(std::vector<cv::Mat>* const& vec, size_t const& index, cv::Mat* const& val) {
#line 7151 "src/opencv/hub/types.rs"
                                                                                                                                                          
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_2684880046096815640(std::vector<cv::Mat>* const& vec, size_t const& index, cv::Mat* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_2684880046096815640_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15294798845381997807(std::vector<cv::Mat>* const& vec, size_t const& index, cv::Mat* const& val) {
#line 7163 "src/opencv/hub/types.rs"
                                                                                            
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18401291936179530028(std::vector<cv::ml::DTrees::Node>* const& vec) {
#line 7188 "src/opencv/hub/types.rs"
                                                                   
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_8962632025402348542_impl() {
#line 7219 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::ml::DTrees::Node>();
        
}
extern "C" {
void __cpp_closure_8962632025402348542( void* __result) {
    ::new(__result) (void*)(__cpp_closure_8962632025402348542_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11451532541133659827_impl(const std::vector<cv::ml::DTrees::Node>* const& vec) {
#line 7227 "src/opencv/hub/types.rs"
                                                                                               
            return vec->size();
        
}
extern "C" {
void __cpp_closure_11451532541133659827(const std::vector<cv::ml::DTrees::Node>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11451532541133659827_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_6847601833162455061_impl(const std::vector<cv::ml::DTrees::Node>* const& vec) {
#line 7235 "src/opencv/hub/types.rs"
                                                                                           
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_6847601833162455061(const std::vector<cv::ml::DTrees::Node>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_6847601833162455061_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11837190605829423818_impl(const std::vector<cv::ml::DTrees::Node>* const& vec) {
#line 7243 "src/opencv/hub/types.rs"
                                                                                               
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_11837190605829423818(const std::vector<cv::ml::DTrees::Node>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11837190605829423818_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10679752719351805712(std::vector<cv::ml::DTrees::Node>* const& vec) {
#line 7251 "src/opencv/hub/types.rs"
                                                                   
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6801720164774223896(std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& additional) {
#line 7259 "src/opencv/hub/types.rs"
                                                                                           
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16398973602422445448(std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index) {
#line 7268 "src/opencv/hub/types.rs"
                                                                                      
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11882802976042056920(std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index1, size_t const& index2) {
#line 7281 "src/opencv/hub/types.rs"
                                                                                                               
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6587805545754022614(std::vector<cv::ml::DTrees::Node>* const& vec) {
#line 7291 "src/opencv/hub/types.rs"
                                                                   
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18045286549201903365(std::vector<cv::ml::DTrees::Node>* const& vec, cv::ml::DTrees::Node* const& val) {
#line 7302 "src/opencv/hub/types.rs"
                                                                                                   
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6842133305639194130(std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index, cv::ml::DTrees::Node* const& val) {
#line 7312 "src/opencv/hub/types.rs"
                                                                                                                      
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_690321274776965184_impl(const std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index) {
#line 7321 "src/opencv/hub/types.rs"
                                                                                                                                                              
            try {
                return { Error::Code::StsOk, NULL, new cv::ml::DTrees::Node(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_690321274776965184(const std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_690321274776965184_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6924809804357726620_impl(const std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index) {
#line 7331 "src/opencv/hub/types.rs"
                                                                                                                                                    
            return new cv::ml::DTrees::Node((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_6924809804357726620(const std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_6924809804357726620_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_6952069191652183321_impl(std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index, cv::ml::DTrees::Node* const& val) {
#line 7340 "src/opencv/hub/types.rs"
                                                                                                                                                                                    
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_6952069191652183321(std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index, cv::ml::DTrees::Node* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_6952069191652183321_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16123641573570003945(std::vector<cv::ml::DTrees::Node>* const& vec, size_t const& index, cv::ml::DTrees::Node* const& val) {
#line 7352 "src/opencv/hub/types.rs"
                                                                                                                      
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18184983902759783690(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec) {
#line 7377 "src/opencv/hub/types.rs"
                                                                                    
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9678360469931201106_impl() {
#line 7408 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::dpm::DPMDetector::ObjectDetection>();
        
}
extern "C" {
void __cpp_closure_9678360469931201106( void* __result) {
    ::new(__result) (void*)(__cpp_closure_9678360469931201106_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_2748471256420061436_impl(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec) {
#line 7416 "src/opencv/hub/types.rs"
                                                                                                                
            return vec->size();
        
}
extern "C" {
void __cpp_closure_2748471256420061436(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_2748471256420061436_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_5895995234606752333_impl(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec) {
#line 7424 "src/opencv/hub/types.rs"
                                                                                                            
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_5895995234606752333(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_5895995234606752333_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_10820727662302808781_impl(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec) {
#line 7432 "src/opencv/hub/types.rs"
                                                                                                                
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_10820727662302808781(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_10820727662302808781_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15671465192759075645(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec) {
#line 7440 "src/opencv/hub/types.rs"
                                                                                    
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7715518250746807804(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& additional) {
#line 7448 "src/opencv/hub/types.rs"
                                                                                                            
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12187768575431481188(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index) {
#line 7457 "src/opencv/hub/types.rs"
                                                                                                       
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14204112698620933814(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index1, size_t const& index2) {
#line 7470 "src/opencv/hub/types.rs"
                                                                                                                                
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9437746741871422580(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec) {
#line 7480 "src/opencv/hub/types.rs"
                                                                                    
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1650458311699968390(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, cv::dpm::DPMDetector::ObjectDetection* const& val) {
#line 7491 "src/opencv/hub/types.rs"
                                                                                                                                     
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4770392373392710765(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index, cv::dpm::DPMDetector::ObjectDetection* const& val) {
#line 7501 "src/opencv/hub/types.rs"
                                                                                                                                                        
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_7952289937184739911_impl(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index) {
#line 7510 "src/opencv/hub/types.rs"
                                                                                                                                                                               
            try {
                return { Error::Code::StsOk, NULL, new cv::dpm::DPMDetector::ObjectDetection(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_7952289937184739911(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_7952289937184739911_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_4972250428433289818_impl(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index) {
#line 7520 "src/opencv/hub/types.rs"
                                                                                                                                                                                      
            return new cv::dpm::DPMDetector::ObjectDetection((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_4972250428433289818(const std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_4972250428433289818_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_13413356243446711558_impl(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index, cv::dpm::DPMDetector::ObjectDetection* const& val) {
#line 7529 "src/opencv/hub/types.rs"
                                                                                                                                                                                                                      
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_13413356243446711558(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index, cv::dpm::DPMDetector::ObjectDetection* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_13413356243446711558_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4316688469775077966(std::vector<cv::dpm::DPMDetector::ObjectDetection>* const& vec, size_t const& index, cv::dpm::DPMDetector::ObjectDetection* const& val) {
#line 7541 "src/opencv/hub/types.rs"
                                                                                                                                                        
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15562566728208504871(std::vector<cv::ocl::PlatformInfo>* const& vec) {
#line 7566 "src/opencv/hub/types.rs"
                                                                    
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_699610292114923869_impl() {
#line 7597 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::ocl::PlatformInfo>();
        
}
extern "C" {
void __cpp_closure_699610292114923869( void* __result) {
    ::new(__result) (void*)(__cpp_closure_699610292114923869_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11475204979879335014_impl(const std::vector<cv::ocl::PlatformInfo>* const& vec) {
#line 7605 "src/opencv/hub/types.rs"
                                                                                                
            return vec->size();
        
}
extern "C" {
void __cpp_closure_11475204979879335014(const std::vector<cv::ocl::PlatformInfo>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11475204979879335014_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_3634805126614791296_impl(const std::vector<cv::ocl::PlatformInfo>* const& vec) {
#line 7613 "src/opencv/hub/types.rs"
                                                                                            
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_3634805126614791296(const std::vector<cv::ocl::PlatformInfo>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_3634805126614791296_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16164575024159460855_impl(const std::vector<cv::ocl::PlatformInfo>* const& vec) {
#line 7621 "src/opencv/hub/types.rs"
                                                                                                
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_16164575024159460855(const std::vector<cv::ocl::PlatformInfo>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16164575024159460855_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14279658207030775183(std::vector<cv::ocl::PlatformInfo>* const& vec) {
#line 7629 "src/opencv/hub/types.rs"
                                                                    
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15986016920289615542(std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& additional) {
#line 7637 "src/opencv/hub/types.rs"
                                                                                            
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7515033161757101303(std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index) {
#line 7646 "src/opencv/hub/types.rs"
                                                                                       
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10417429146576805050(std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index1, size_t const& index2) {
#line 7659 "src/opencv/hub/types.rs"
                                                                                                                
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9981815931256477052(std::vector<cv::ocl::PlatformInfo>* const& vec) {
#line 7669 "src/opencv/hub/types.rs"
                                                                    
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4701687725348235547(std::vector<cv::ocl::PlatformInfo>* const& vec, cv::ocl::PlatformInfo* const& val) {
#line 7680 "src/opencv/hub/types.rs"
                                                                                                     
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_165959253939335742(std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index, cv::ocl::PlatformInfo* const& val) {
#line 7690 "src/opencv/hub/types.rs"
                                                                                                                        
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_6373203709143175962_impl(const std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index) {
#line 7699 "src/opencv/hub/types.rs"
                                                                                                                                                               
            try {
                return { Error::Code::StsOk, NULL, new cv::ocl::PlatformInfo(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_6373203709143175962(const std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_6373203709143175962_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6128200382616540171_impl(const std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index) {
#line 7709 "src/opencv/hub/types.rs"
                                                                                                                                                 
            return new cv::ocl::PlatformInfo((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_6128200382616540171(const std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_6128200382616540171_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_6514845154575022756_impl(std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index, cv::ocl::PlatformInfo* const& val) {
#line 7718 "src/opencv/hub/types.rs"
                                                                                                                                                                                      
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_6514845154575022756(std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index, cv::ocl::PlatformInfo* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_6514845154575022756_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18083312154585202053(std::vector<cv::ocl::PlatformInfo>* const& vec, size_t const& index, cv::ocl::PlatformInfo* const& val) {
#line 7730 "src/opencv/hub/types.rs"
                                                                                                                        
            (*vec)[index] = *val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_10127192725658080816_impl(std::vector<cv::Point>* const& vec) {
#line 7753 "src/opencv/hub/types.rs"
                                                                                                         
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_10127192725658080816(std::vector<cv::Point>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_10127192725658080816_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3523428955429592721(std::vector<cv::Point>* const& vec) {
#line 7765 "src/opencv/hub/types.rs"
                                                        
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_2138530042574566550_impl() {
#line 7796 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::Point>();
        
}
extern "C" {
void __cpp_closure_2138530042574566550( void* __result) {
    ::new(__result) (void*)(__cpp_closure_2138530042574566550_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_12255878100343471988_impl(const std::vector<cv::Point>* const& vec) {
#line 7804 "src/opencv/hub/types.rs"
                                                                                    
            return vec->size();
        
}
extern "C" {
void __cpp_closure_12255878100343471988(const std::vector<cv::Point>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_12255878100343471988_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_3543857541920974296_impl(const std::vector<cv::Point>* const& vec) {
#line 7812 "src/opencv/hub/types.rs"
                                                                                
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_3543857541920974296(const std::vector<cv::Point>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_3543857541920974296_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_15089626210623532686_impl(const std::vector<cv::Point>* const& vec) {
#line 7820 "src/opencv/hub/types.rs"
                                                                                    
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_15089626210623532686(const std::vector<cv::Point>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_15089626210623532686_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9615939534272500879(std::vector<cv::Point>* const& vec) {
#line 7828 "src/opencv/hub/types.rs"
                                                        
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7013655254240822061(std::vector<cv::Point>* const& vec, size_t const& additional) {
#line 7836 "src/opencv/hub/types.rs"
                                                                                
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15995112325951445392(std::vector<cv::Point>* const& vec, size_t const& index) {
#line 7845 "src/opencv/hub/types.rs"
                                                                           
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6403876985203814927(std::vector<cv::Point>* const& vec, size_t const& index1, size_t const& index2) {
#line 7858 "src/opencv/hub/types.rs"
                                                                                                    
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7890612104626144721(std::vector<cv::Point>* const& vec) {
#line 7868 "src/opencv/hub/types.rs"
                                                        
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14725258169775119719(std::vector<cv::Point>* const& vec, cv::Point const& val) {
#line 7878 "src/opencv/hub/types.rs"
                                                                            
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7022067587516059625(std::vector<cv::Point>* const& vec, size_t const& index, cv::Point const& val) {
#line 7887 "src/opencv/hub/types.rs"
                                                                                               
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_PointWrapper __cpp_closure_12600104484046824334_impl(const std::vector<PointWrapper>* const& vec, size_t const& index) {
#line 7896 "src/opencv/hub/types.rs"
                                                                                                                                                                  
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_PointWrapper)
        
}
extern "C" {
void __cpp_closure_12600104484046824334(const std::vector<PointWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_PointWrapper)(__cpp_closure_12600104484046824334_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline PointWrapper __cpp_closure_9533006340611913954_impl(const std::vector<PointWrapper>* const& vec, size_t const& index) {
#line 7906 "src/opencv/hub/types.rs"
                                                                                                                     
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_9533006340611913954(const std::vector<PointWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (PointWrapper)(__cpp_closure_9533006340611913954_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_5869189322349989879_impl(std::vector<cv::Point>* const& vec, size_t const& index, cv::Point const& val) {
#line 7914 "src/opencv/hub/types.rs"
                                                                                                                                                             
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_5869189322349989879(std::vector<cv::Point>* const& vec, size_t const& index, cv::Point const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_5869189322349989879_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4811537345658720637(std::vector<cv::Point>* const& vec, size_t const& index, cv::Point const& val) {
#line 7925 "src/opencv/hub/types.rs"
                                                                                               
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_13054136516908161917_impl(std::vector<cv::Point>* const& me) {
#line 7942 "src/opencv/hub/types.rs"
                                                                                                                        
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_13054136516908161917(std::vector<cv::Point>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_13054136516908161917_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_12528936146825516047_impl(std::vector<cv::Point>* const& me) {
#line 7962 "src/opencv/hub/types.rs"
                                                                                                                        
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_12528936146825516047(std::vector<cv::Point>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_12528936146825516047_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_3916005042708683518_impl(std::vector<cv::Point>* const& me) {
#line 7982 "src/opencv/hub/types.rs"
                                                                                                                        
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_3916005042708683518(std::vector<cv::Point>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_3916005042708683518_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_12899954413737594519_impl(std::vector<cv::Point2d>* const& vec) {
#line 8013 "src/opencv/hub/types.rs"
                                                                                                             
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_12899954413737594519(std::vector<cv::Point2d>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_12899954413737594519_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1925013709914666641(std::vector<cv::Point2d>* const& vec) {
#line 8025 "src/opencv/hub/types.rs"
                                                          
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9204881297672328742_impl() {
#line 8056 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::Point2d>();
        
}
extern "C" {
void __cpp_closure_9204881297672328742( void* __result) {
    ::new(__result) (void*)(__cpp_closure_9204881297672328742_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_7215352591383200281_impl(const std::vector<cv::Point2d>* const& vec) {
#line 8064 "src/opencv/hub/types.rs"
                                                                                      
            return vec->size();
        
}
extern "C" {
void __cpp_closure_7215352591383200281(const std::vector<cv::Point2d>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_7215352591383200281_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_17363058892557585324_impl(const std::vector<cv::Point2d>* const& vec) {
#line 8072 "src/opencv/hub/types.rs"
                                                                                  
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_17363058892557585324(const std::vector<cv::Point2d>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_17363058892557585324_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_9142766719015828928_impl(const std::vector<cv::Point2d>* const& vec) {
#line 8080 "src/opencv/hub/types.rs"
                                                                                      
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_9142766719015828928(const std::vector<cv::Point2d>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_9142766719015828928_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6708267945059595350(std::vector<cv::Point2d>* const& vec) {
#line 8088 "src/opencv/hub/types.rs"
                                                          
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4434955916422261490(std::vector<cv::Point2d>* const& vec, size_t const& additional) {
#line 8096 "src/opencv/hub/types.rs"
                                                                                  
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16432587579838645728(std::vector<cv::Point2d>* const& vec, size_t const& index) {
#line 8105 "src/opencv/hub/types.rs"
                                                                             
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17164859806426824744(std::vector<cv::Point2d>* const& vec, size_t const& index1, size_t const& index2) {
#line 8118 "src/opencv/hub/types.rs"
                                                                                                      
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2096496703231076038(std::vector<cv::Point2d>* const& vec) {
#line 8128 "src/opencv/hub/types.rs"
                                                          
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8807101850663106210(std::vector<cv::Point2d>* const& vec, cv::Point2d const& val) {
#line 8138 "src/opencv/hub/types.rs"
                                                                                
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6633138804190272196(std::vector<cv::Point2d>* const& vec, size_t const& index, cv::Point2d const& val) {
#line 8147 "src/opencv/hub/types.rs"
                                                                                                   
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_Point2dWrapper __cpp_closure_17798444042869996655_impl(const std::vector<Point2dWrapper>* const& vec, size_t const& index) {
#line 8156 "src/opencv/hub/types.rs"
                                                                                                                                                                        
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_Point2dWrapper)
        
}
extern "C" {
void __cpp_closure_17798444042869996655(const std::vector<Point2dWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_Point2dWrapper)(__cpp_closure_17798444042869996655_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline Point2dWrapper __cpp_closure_14062662719751766372_impl(const std::vector<Point2dWrapper>* const& vec, size_t const& index) {
#line 8166 "src/opencv/hub/types.rs"
                                                                                                                           
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_14062662719751766372(const std::vector<Point2dWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (Point2dWrapper)(__cpp_closure_14062662719751766372_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_11563247691525514163_impl(std::vector<cv::Point2d>* const& vec, size_t const& index, cv::Point2d const& val) {
#line 8174 "src/opencv/hub/types.rs"
                                                                                                                                                                 
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_11563247691525514163(std::vector<cv::Point2d>* const& vec, size_t const& index, cv::Point2d const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_11563247691525514163_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4583210165403378579(std::vector<cv::Point2d>* const& vec, size_t const& index, cv::Point2d const& val) {
#line 8185 "src/opencv/hub/types.rs"
                                                                                                   
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_12897955265653469626_impl(std::vector<cv::Point2d>* const& me) {
#line 8202 "src/opencv/hub/types.rs"
                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_12897955265653469626(std::vector<cv::Point2d>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_12897955265653469626_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_13834763541077351001_impl(std::vector<cv::Point2d>* const& me) {
#line 8222 "src/opencv/hub/types.rs"
                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_13834763541077351001(std::vector<cv::Point2d>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_13834763541077351001_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_12289774926082794030_impl(std::vector<cv::Point2d>* const& me) {
#line 8242 "src/opencv/hub/types.rs"
                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_12289774926082794030(std::vector<cv::Point2d>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_12289774926082794030_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_1749729371231946824_impl(std::vector<cv::Point2f>* const& vec) {
#line 8273 "src/opencv/hub/types.rs"
                                                                                                             
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_1749729371231946824(std::vector<cv::Point2f>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_1749729371231946824_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1027993501224281064(std::vector<cv::Point2f>* const& vec) {
#line 8285 "src/opencv/hub/types.rs"
                                                          
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6017554945182778551_impl() {
#line 8316 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::Point2f>();
        
}
extern "C" {
void __cpp_closure_6017554945182778551( void* __result) {
    ::new(__result) (void*)(__cpp_closure_6017554945182778551_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_6500533226428288564_impl(const std::vector<cv::Point2f>* const& vec) {
#line 8324 "src/opencv/hub/types.rs"
                                                                                      
            return vec->size();
        
}
extern "C" {
void __cpp_closure_6500533226428288564(const std::vector<cv::Point2f>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_6500533226428288564_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_9406104712564298758_impl(const std::vector<cv::Point2f>* const& vec) {
#line 8332 "src/opencv/hub/types.rs"
                                                                                  
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_9406104712564298758(const std::vector<cv::Point2f>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_9406104712564298758_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_1973651749324747342_impl(const std::vector<cv::Point2f>* const& vec) {
#line 8340 "src/opencv/hub/types.rs"
                                                                                      
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_1973651749324747342(const std::vector<cv::Point2f>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_1973651749324747342_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17345620041060455012(std::vector<cv::Point2f>* const& vec) {
#line 8348 "src/opencv/hub/types.rs"
                                                          
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17647222476551174519(std::vector<cv::Point2f>* const& vec, size_t const& additional) {
#line 8356 "src/opencv/hub/types.rs"
                                                                                  
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10277426571646665374(std::vector<cv::Point2f>* const& vec, size_t const& index) {
#line 8365 "src/opencv/hub/types.rs"
                                                                             
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16151829952712471657(std::vector<cv::Point2f>* const& vec, size_t const& index1, size_t const& index2) {
#line 8378 "src/opencv/hub/types.rs"
                                                                                                      
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12737672207277686482(std::vector<cv::Point2f>* const& vec) {
#line 8388 "src/opencv/hub/types.rs"
                                                          
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9996937147095397007(std::vector<cv::Point2f>* const& vec, cv::Point2f const& val) {
#line 8398 "src/opencv/hub/types.rs"
                                                                                
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13660462130579164954(std::vector<cv::Point2f>* const& vec, size_t const& index, cv::Point2f const& val) {
#line 8407 "src/opencv/hub/types.rs"
                                                                                                   
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_Point2fWrapper __cpp_closure_1485408643131030519_impl(const std::vector<Point2fWrapper>* const& vec, size_t const& index) {
#line 8416 "src/opencv/hub/types.rs"
                                                                                                                                                                        
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_Point2fWrapper)
        
}
extern "C" {
void __cpp_closure_1485408643131030519(const std::vector<Point2fWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_Point2fWrapper)(__cpp_closure_1485408643131030519_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline Point2fWrapper __cpp_closure_660535829859076390_impl(const std::vector<Point2fWrapper>* const& vec, size_t const& index) {
#line 8426 "src/opencv/hub/types.rs"
                                                                                                                           
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_660535829859076390(const std::vector<Point2fWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (Point2fWrapper)(__cpp_closure_660535829859076390_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_643908638804792405_impl(std::vector<cv::Point2f>* const& vec, size_t const& index, cv::Point2f const& val) {
#line 8434 "src/opencv/hub/types.rs"
                                                                                                                                                                 
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_643908638804792405(std::vector<cv::Point2f>* const& vec, size_t const& index, cv::Point2f const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_643908638804792405_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8937148540663579338(std::vector<cv::Point2f>* const& vec, size_t const& index, cv::Point2f const& val) {
#line 8445 "src/opencv/hub/types.rs"
                                                                                                   
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_6501306244844533061_impl(std::vector<cv::Point2f>* const& me) {
#line 8462 "src/opencv/hub/types.rs"
                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_6501306244844533061(std::vector<cv::Point2f>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_6501306244844533061_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_15625157317057707050_impl(std::vector<cv::Point2f>* const& me) {
#line 8482 "src/opencv/hub/types.rs"
                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_15625157317057707050(std::vector<cv::Point2f>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_15625157317057707050_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_15674960075915773156_impl(std::vector<cv::Point2f>* const& me) {
#line 8502 "src/opencv/hub/types.rs"
                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_15674960075915773156(std::vector<cv::Point2f>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_15674960075915773156_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11395106222305171108(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec) {
#line 8535 "src/opencv/hub/types.rs"
                                                                           
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9745933487529887107_impl() {
#line 8566 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<Ptr<cv::dnn::BackendWrapper>>();
        
}
extern "C" {
void __cpp_closure_9745933487529887107( void* __result) {
    ::new(__result) (void*)(__cpp_closure_9745933487529887107_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_10926176383685688393_impl(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec) {
#line 8574 "src/opencv/hub/types.rs"
                                                                                                       
            return vec->size();
        
}
extern "C" {
void __cpp_closure_10926176383685688393(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_10926176383685688393_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_12289786863829178469_impl(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec) {
#line 8582 "src/opencv/hub/types.rs"
                                                                                                   
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_12289786863829178469(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_12289786863829178469_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_1034021964870035599_impl(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec) {
#line 8590 "src/opencv/hub/types.rs"
                                                                                                       
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_1034021964870035599(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_1034021964870035599_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16178351654835463674(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec) {
#line 8598 "src/opencv/hub/types.rs"
                                                                           
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8849839264966944014(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& additional) {
#line 8606 "src/opencv/hub/types.rs"
                                                                                                   
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4007056540408517009(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index) {
#line 8615 "src/opencv/hub/types.rs"
                                                                                              
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4186636037479049958(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index1, size_t const& index2) {
#line 8628 "src/opencv/hub/types.rs"
                                                                                                                       
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17747140008867646479(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec) {
#line 8638 "src/opencv/hub/types.rs"
                                                                           
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1444989490158640056(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, Ptr<cv::dnn::BackendWrapper>* const& val) {
#line 8649 "src/opencv/hub/types.rs"
                                                                                                                   
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1691186043311835198(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index, Ptr<cv::dnn::BackendWrapper>* const& val) {
#line 8659 "src/opencv/hub/types.rs"
                                                                                                                                      
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_14896680639108245926_impl(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index) {
#line 8668 "src/opencv/hub/types.rs"
                                                                                                                                                                      
            try {
                return { Error::Code::StsOk, NULL, new Ptr<cv::dnn::BackendWrapper>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_14896680639108245926(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_14896680639108245926_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12834903050383879000_impl(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index) {
#line 8678 "src/opencv/hub/types.rs"
                                                                                                                                                                
            return new Ptr<cv::dnn::BackendWrapper>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_12834903050383879000(const std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12834903050383879000_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_1965537016258864855_impl(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index, Ptr<cv::dnn::BackendWrapper>* const& val) {
#line 8687 "src/opencv/hub/types.rs"
                                                                                                                                                                                                    
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_1965537016258864855(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index, Ptr<cv::dnn::BackendWrapper>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_1965537016258864855_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11935634816170607294(std::vector<Ptr<cv::dnn::BackendWrapper>>* const& vec, size_t const& index, Ptr<cv::dnn::BackendWrapper>* const& val) {
#line 8699 "src/opencv/hub/types.rs"
                                                                                                                                      
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11389512060058586430(std::vector<Ptr<cv::dnn::Layer>>* const& vec) {
#line 8724 "src/opencv/hub/types.rs"
                                                                  
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7934789091107660186_impl() {
#line 8755 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<Ptr<cv::dnn::Layer>>();
        
}
extern "C" {
void __cpp_closure_7934789091107660186( void* __result) {
    ::new(__result) (void*)(__cpp_closure_7934789091107660186_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_9113175116214191642_impl(const std::vector<Ptr<cv::dnn::Layer>>* const& vec) {
#line 8763 "src/opencv/hub/types.rs"
                                                                                              
            return vec->size();
        
}
extern "C" {
void __cpp_closure_9113175116214191642(const std::vector<Ptr<cv::dnn::Layer>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_9113175116214191642_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_13874362182199071435_impl(const std::vector<Ptr<cv::dnn::Layer>>* const& vec) {
#line 8771 "src/opencv/hub/types.rs"
                                                                                          
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_13874362182199071435(const std::vector<Ptr<cv::dnn::Layer>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_13874362182199071435_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_6018126179161832252_impl(const std::vector<Ptr<cv::dnn::Layer>>* const& vec) {
#line 8779 "src/opencv/hub/types.rs"
                                                                                              
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_6018126179161832252(const std::vector<Ptr<cv::dnn::Layer>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_6018126179161832252_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10001984156161543391(std::vector<Ptr<cv::dnn::Layer>>* const& vec) {
#line 8787 "src/opencv/hub/types.rs"
                                                                  
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5420389280725153164(std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& additional) {
#line 8795 "src/opencv/hub/types.rs"
                                                                                          
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4357831636087376914(std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index) {
#line 8804 "src/opencv/hub/types.rs"
                                                                                     
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16929738470936292174(std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index1, size_t const& index2) {
#line 8817 "src/opencv/hub/types.rs"
                                                                                                              
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17142639161577187836(std::vector<Ptr<cv::dnn::Layer>>* const& vec) {
#line 8827 "src/opencv/hub/types.rs"
                                                                  
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14502085412129700486(std::vector<Ptr<cv::dnn::Layer>>* const& vec, Ptr<cv::dnn::Layer>* const& val) {
#line 8838 "src/opencv/hub/types.rs"
                                                                                                 
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1804180953320539395(std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index, Ptr<cv::dnn::Layer>* const& val) {
#line 8848 "src/opencv/hub/types.rs"
                                                                                                                    
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_1370148101324567880_impl(const std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index) {
#line 8857 "src/opencv/hub/types.rs"
                                                                                                                                                             
            try {
                return { Error::Code::StsOk, NULL, new Ptr<cv::dnn::Layer>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_1370148101324567880(const std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_1370148101324567880_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12389557394583481240_impl(const std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index) {
#line 8867 "src/opencv/hub/types.rs"
                                                                                                                                              
            return new Ptr<cv::dnn::Layer>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_12389557394583481240(const std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12389557394583481240_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_16413673580868880525_impl(std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index, Ptr<cv::dnn::Layer>* const& val) {
#line 8876 "src/opencv/hub/types.rs"
                                                                                                                                                                                  
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_16413673580868880525(std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index, Ptr<cv::dnn::Layer>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_16413673580868880525_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14008432027827947235(std::vector<Ptr<cv::dnn::Layer>>* const& vec, size_t const& index, Ptr<cv::dnn::Layer>* const& val) {
#line 8888 "src/opencv/hub/types.rs"
                                                                                                                    
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13433143342724477536(std::vector<cv::Range>* const& vec) {
#line 8913 "src/opencv/hub/types.rs"
                                                        
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_17428453450227318276_impl() {
#line 8944 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::Range>();
        
}
extern "C" {
void __cpp_closure_17428453450227318276( void* __result) {
    ::new(__result) (void*)(__cpp_closure_17428453450227318276_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_2696409778385324919_impl(const std::vector<cv::Range>* const& vec) {
#line 8952 "src/opencv/hub/types.rs"
                                                                                    
            return vec->size();
        
}
extern "C" {
void __cpp_closure_2696409778385324919(const std::vector<cv::Range>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_2696409778385324919_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_12099548550174063593_impl(const std::vector<cv::Range>* const& vec) {
#line 8960 "src/opencv/hub/types.rs"
                                                                                
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_12099548550174063593(const std::vector<cv::Range>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_12099548550174063593_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_3534003152777170843_impl(const std::vector<cv::Range>* const& vec) {
#line 8968 "src/opencv/hub/types.rs"
                                                                                    
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_3534003152777170843(const std::vector<cv::Range>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_3534003152777170843_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14767301862022110970(std::vector<cv::Range>* const& vec) {
#line 8976 "src/opencv/hub/types.rs"
                                                        
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_909387419731652739(std::vector<cv::Range>* const& vec, size_t const& additional) {
#line 8984 "src/opencv/hub/types.rs"
                                                                                
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_916813890329713908(std::vector<cv::Range>* const& vec, size_t const& index) {
#line 8993 "src/opencv/hub/types.rs"
                                                                           
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12892681680293399075(std::vector<cv::Range>* const& vec, size_t const& index1, size_t const& index2) {
#line 9006 "src/opencv/hub/types.rs"
                                                                                                    
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13662239455161325975(std::vector<cv::Range>* const& vec) {
#line 9016 "src/opencv/hub/types.rs"
                                                        
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15953235023365269323(std::vector<cv::Range>* const& vec, cv::Range* const& val) {
#line 9027 "src/opencv/hub/types.rs"
                                                                             
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13722320996067643050(std::vector<cv::Range>* const& vec, size_t const& index, cv::Range* const& val) {
#line 9037 "src/opencv/hub/types.rs"
                                                                                                
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_14972091081427682479_impl(const std::vector<cv::Range>* const& vec, size_t const& index) {
#line 9046 "src/opencv/hub/types.rs"
                                                                                                                                                   
            try {
                return { Error::Code::StsOk, NULL, new cv::Range(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_14972091081427682479(const std::vector<cv::Range>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_14972091081427682479_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_13974589536686832444_impl(const std::vector<cv::Range>* const& vec, size_t const& index) {
#line 9056 "src/opencv/hub/types.rs"
                                                                                                                              
            return new cv::Range((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_13974589536686832444(const std::vector<cv::Range>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_13974589536686832444_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_3778325513203389249_impl(std::vector<cv::Range>* const& vec, size_t const& index, cv::Range* const& val) {
#line 9065 "src/opencv/hub/types.rs"
                                                                                                                                                              
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_3778325513203389249(std::vector<cv::Range>* const& vec, size_t const& index, cv::Range* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_3778325513203389249_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7151275484090319177(std::vector<cv::Range>* const& vec, size_t const& index, cv::Range* const& val) {
#line 9077 "src/opencv/hub/types.rs"
                                                                                                
            (*vec)[index] = *val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_11434930040139326697_impl(std::vector<cv::Rect>* const& vec) {
#line 9100 "src/opencv/hub/types.rs"
                                                                                                       
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_11434930040139326697(std::vector<cv::Rect>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_11434930040139326697_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6812614493966123624(std::vector<cv::Rect>* const& vec) {
#line 9112 "src/opencv/hub/types.rs"
                                                       
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6457203752720500281_impl() {
#line 9143 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::Rect>();
        
}
extern "C" {
void __cpp_closure_6457203752720500281( void* __result) {
    ::new(__result) (void*)(__cpp_closure_6457203752720500281_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_12928783689005363263_impl(const std::vector<cv::Rect>* const& vec) {
#line 9151 "src/opencv/hub/types.rs"
                                                                                   
            return vec->size();
        
}
extern "C" {
void __cpp_closure_12928783689005363263(const std::vector<cv::Rect>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_12928783689005363263_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_11155627531800914114_impl(const std::vector<cv::Rect>* const& vec) {
#line 9159 "src/opencv/hub/types.rs"
                                                                               
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_11155627531800914114(const std::vector<cv::Rect>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_11155627531800914114_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16629053117815024630_impl(const std::vector<cv::Rect>* const& vec) {
#line 9167 "src/opencv/hub/types.rs"
                                                                                   
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_16629053117815024630(const std::vector<cv::Rect>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16629053117815024630_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8535322523711682137(std::vector<cv::Rect>* const& vec) {
#line 9175 "src/opencv/hub/types.rs"
                                                       
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1034814929567427000(std::vector<cv::Rect>* const& vec, size_t const& additional) {
#line 9183 "src/opencv/hub/types.rs"
                                                                               
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15369183517468200993(std::vector<cv::Rect>* const& vec, size_t const& index) {
#line 9192 "src/opencv/hub/types.rs"
                                                                          
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10404008796021454729(std::vector<cv::Rect>* const& vec, size_t const& index1, size_t const& index2) {
#line 9205 "src/opencv/hub/types.rs"
                                                                                                   
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1259926786611202983(std::vector<cv::Rect>* const& vec) {
#line 9215 "src/opencv/hub/types.rs"
                                                       
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_264186808603400666(std::vector<cv::Rect>* const& vec, cv::Rect const& val) {
#line 9225 "src/opencv/hub/types.rs"
                                                                          
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15925325401229091487(std::vector<cv::Rect>* const& vec, size_t const& index, cv::Rect const& val) {
#line 9234 "src/opencv/hub/types.rs"
                                                                                             
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_RectWrapper __cpp_closure_3837930138998569530_impl(const std::vector<RectWrapper>* const& vec, size_t const& index) {
#line 9243 "src/opencv/hub/types.rs"
                                                                                                                                                               
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_RectWrapper)
        
}
extern "C" {
void __cpp_closure_3837930138998569530(const std::vector<RectWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_RectWrapper)(__cpp_closure_3837930138998569530_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline RectWrapper __cpp_closure_11886125742292251876_impl(const std::vector<RectWrapper>* const& vec, size_t const& index) {
#line 9253 "src/opencv/hub/types.rs"
                                                                                                                  
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_11886125742292251876(const std::vector<RectWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (RectWrapper)(__cpp_closure_11886125742292251876_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_11361758034698509239_impl(std::vector<cv::Rect>* const& vec, size_t const& index, cv::Rect const& val) {
#line 9261 "src/opencv/hub/types.rs"
                                                                                                                                                           
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_11361758034698509239(std::vector<cv::Rect>* const& vec, size_t const& index, cv::Rect const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_11361758034698509239_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12378616479128506132(std::vector<cv::Rect>* const& vec, size_t const& index, cv::Rect const& val) {
#line 9272 "src/opencv/hub/types.rs"
                                                                                             
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_14552182672254287737_impl(std::vector<cv::Rect>* const& me) {
#line 9289 "src/opencv/hub/types.rs"
                                                                                                                       
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_14552182672254287737(std::vector<cv::Rect>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_14552182672254287737_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_13737518422531892311_impl(std::vector<cv::Rect>* const& me) {
#line 9309 "src/opencv/hub/types.rs"
                                                                                                                       
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_13737518422531892311(std::vector<cv::Rect>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_13737518422531892311_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_13301379066570084156_impl(std::vector<cv::Rect>* const& me) {
#line 9329 "src/opencv/hub/types.rs"
                                                                                                                       
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_13301379066570084156(std::vector<cv::Rect>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_13301379066570084156_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_16519192794703949958_impl(std::vector<cv::Rect2d>* const& vec) {
#line 9360 "src/opencv/hub/types.rs"
                                                                                                           
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_16519192794703949958(std::vector<cv::Rect2d>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_16519192794703949958_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14909778594428921438(std::vector<cv::Rect2d>* const& vec) {
#line 9372 "src/opencv/hub/types.rs"
                                                         
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6288981157586266503_impl() {
#line 9403 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::Rect2d>();
        
}
extern "C" {
void __cpp_closure_6288981157586266503( void* __result) {
    ::new(__result) (void*)(__cpp_closure_6288981157586266503_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_7063978907145169538_impl(const std::vector<cv::Rect2d>* const& vec) {
#line 9411 "src/opencv/hub/types.rs"
                                                                                     
            return vec->size();
        
}
extern "C" {
void __cpp_closure_7063978907145169538(const std::vector<cv::Rect2d>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_7063978907145169538_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_15724219806246504704_impl(const std::vector<cv::Rect2d>* const& vec) {
#line 9419 "src/opencv/hub/types.rs"
                                                                                 
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_15724219806246504704(const std::vector<cv::Rect2d>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_15724219806246504704_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_14529692027047757831_impl(const std::vector<cv::Rect2d>* const& vec) {
#line 9427 "src/opencv/hub/types.rs"
                                                                                     
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_14529692027047757831(const std::vector<cv::Rect2d>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_14529692027047757831_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3162906424855102746(std::vector<cv::Rect2d>* const& vec) {
#line 9435 "src/opencv/hub/types.rs"
                                                         
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2395038745517377701(std::vector<cv::Rect2d>* const& vec, size_t const& additional) {
#line 9443 "src/opencv/hub/types.rs"
                                                                                 
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5049706281881163533(std::vector<cv::Rect2d>* const& vec, size_t const& index) {
#line 9452 "src/opencv/hub/types.rs"
                                                                            
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4169064010958578592(std::vector<cv::Rect2d>* const& vec, size_t const& index1, size_t const& index2) {
#line 9465 "src/opencv/hub/types.rs"
                                                                                                     
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14487934405220297021(std::vector<cv::Rect2d>* const& vec) {
#line 9475 "src/opencv/hub/types.rs"
                                                         
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15318015849231923861(std::vector<cv::Rect2d>* const& vec, cv::Rect2d const& val) {
#line 9485 "src/opencv/hub/types.rs"
                                                                              
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12530760749470658516(std::vector<cv::Rect2d>* const& vec, size_t const& index, cv::Rect2d const& val) {
#line 9494 "src/opencv/hub/types.rs"
                                                                                                 
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_Rect2dWrapper __cpp_closure_17079474018860622053_impl(const std::vector<Rect2dWrapper>* const& vec, size_t const& index) {
#line 9503 "src/opencv/hub/types.rs"
                                                                                                                                                                     
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_Rect2dWrapper)
        
}
extern "C" {
void __cpp_closure_17079474018860622053(const std::vector<Rect2dWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_Rect2dWrapper)(__cpp_closure_17079474018860622053_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline Rect2dWrapper __cpp_closure_262793490813687111_impl(const std::vector<Rect2dWrapper>* const& vec, size_t const& index) {
#line 9513 "src/opencv/hub/types.rs"
                                                                                                                        
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_262793490813687111(const std::vector<Rect2dWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (Rect2dWrapper)(__cpp_closure_262793490813687111_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_3053995220299493405_impl(std::vector<cv::Rect2d>* const& vec, size_t const& index, cv::Rect2d const& val) {
#line 9521 "src/opencv/hub/types.rs"
                                                                                                                                                               
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_3053995220299493405(std::vector<cv::Rect2d>* const& vec, size_t const& index, cv::Rect2d const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_3053995220299493405_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17688724565758848562(std::vector<cv::Rect2d>* const& vec, size_t const& index, cv::Rect2d const& val) {
#line 9532 "src/opencv/hub/types.rs"
                                                                                                 
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_12583969446794639962_impl(std::vector<cv::Rect2d>* const& me) {
#line 9549 "src/opencv/hub/types.rs"
                                                                                                                         
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_12583969446794639962(std::vector<cv::Rect2d>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_12583969446794639962_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_14799640012082541243_impl(std::vector<cv::Rect2d>* const& me) {
#line 9569 "src/opencv/hub/types.rs"
                                                                                                                         
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_14799640012082541243(std::vector<cv::Rect2d>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_14799640012082541243_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_1203804270310531134_impl(std::vector<cv::Rect2d>* const& me) {
#line 9589 "src/opencv/hub/types.rs"
                                                                                                                         
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_1203804270310531134(std::vector<cv::Rect2d>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_1203804270310531134_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1012399829130687101(std::vector<cv::RotatedRect>* const& vec) {
#line 9622 "src/opencv/hub/types.rs"
                                                              
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15309602264983100435_impl() {
#line 9653 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::RotatedRect>();
        
}
extern "C" {
void __cpp_closure_15309602264983100435( void* __result) {
    ::new(__result) (void*)(__cpp_closure_15309602264983100435_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_14939811076060210048_impl(const std::vector<cv::RotatedRect>* const& vec) {
#line 9661 "src/opencv/hub/types.rs"
                                                                                          
            return vec->size();
        
}
extern "C" {
void __cpp_closure_14939811076060210048(const std::vector<cv::RotatedRect>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_14939811076060210048_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_16448941599480803842_impl(const std::vector<cv::RotatedRect>* const& vec) {
#line 9669 "src/opencv/hub/types.rs"
                                                                                      
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_16448941599480803842(const std::vector<cv::RotatedRect>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_16448941599480803842_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_7348631561206075330_impl(const std::vector<cv::RotatedRect>* const& vec) {
#line 9677 "src/opencv/hub/types.rs"
                                                                                          
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_7348631561206075330(const std::vector<cv::RotatedRect>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_7348631561206075330_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10324053753819767065(std::vector<cv::RotatedRect>* const& vec) {
#line 9685 "src/opencv/hub/types.rs"
                                                              
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_102454344150746201(std::vector<cv::RotatedRect>* const& vec, size_t const& additional) {
#line 9693 "src/opencv/hub/types.rs"
                                                                                      
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11742046628370692556(std::vector<cv::RotatedRect>* const& vec, size_t const& index) {
#line 9702 "src/opencv/hub/types.rs"
                                                                                 
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4123590029229143487(std::vector<cv::RotatedRect>* const& vec, size_t const& index1, size_t const& index2) {
#line 9715 "src/opencv/hub/types.rs"
                                                                                                          
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8199512711806360130(std::vector<cv::RotatedRect>* const& vec) {
#line 9725 "src/opencv/hub/types.rs"
                                                              
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2884706173958341651(std::vector<cv::RotatedRect>* const& vec, cv::RotatedRect* const& val) {
#line 9736 "src/opencv/hub/types.rs"
                                                                                         
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15340675902796411274(std::vector<cv::RotatedRect>* const& vec, size_t const& index, cv::RotatedRect* const& val) {
#line 9746 "src/opencv/hub/types.rs"
                                                                                                            
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_6081485321105515719_impl(const std::vector<cv::RotatedRect>* const& vec, size_t const& index) {
#line 9755 "src/opencv/hub/types.rs"
                                                                                                                                                         
            try {
                return { Error::Code::StsOk, NULL, new cv::RotatedRect(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_6081485321105515719(const std::vector<cv::RotatedRect>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_6081485321105515719_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3684391241037659583_impl(const std::vector<cv::RotatedRect>* const& vec, size_t const& index) {
#line 9765 "src/opencv/hub/types.rs"
                                                                                                                                          
            return new cv::RotatedRect((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_3684391241037659583(const std::vector<cv::RotatedRect>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3684391241037659583_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_2494728691906045356_impl(std::vector<cv::RotatedRect>* const& vec, size_t const& index, cv::RotatedRect* const& val) {
#line 9774 "src/opencv/hub/types.rs"
                                                                                                                                                                          
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_2494728691906045356(std::vector<cv::RotatedRect>* const& vec, size_t const& index, cv::RotatedRect* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_2494728691906045356_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_35712634098607505(std::vector<cv::RotatedRect>* const& vec, size_t const& index, cv::RotatedRect* const& val) {
#line 9786 "src/opencv/hub/types.rs"
                                                                                                            
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_969881261307479769(std::vector<cv::ml::DTrees::Split>* const& vec) {
#line 9811 "src/opencv/hub/types.rs"
                                                                    
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11724963082178284383_impl() {
#line 9842 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::ml::DTrees::Split>();
        
}
extern "C" {
void __cpp_closure_11724963082178284383( void* __result) {
    ::new(__result) (void*)(__cpp_closure_11724963082178284383_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_9422587868917141771_impl(const std::vector<cv::ml::DTrees::Split>* const& vec) {
#line 9850 "src/opencv/hub/types.rs"
                                                                                                
            return vec->size();
        
}
extern "C" {
void __cpp_closure_9422587868917141771(const std::vector<cv::ml::DTrees::Split>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_9422587868917141771_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_3110359217436223331_impl(const std::vector<cv::ml::DTrees::Split>* const& vec) {
#line 9858 "src/opencv/hub/types.rs"
                                                                                            
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_3110359217436223331(const std::vector<cv::ml::DTrees::Split>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_3110359217436223331_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_3125754940443770540_impl(const std::vector<cv::ml::DTrees::Split>* const& vec) {
#line 9866 "src/opencv/hub/types.rs"
                                                                                                
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_3125754940443770540(const std::vector<cv::ml::DTrees::Split>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_3125754940443770540_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2863318340851540326(std::vector<cv::ml::DTrees::Split>* const& vec) {
#line 9874 "src/opencv/hub/types.rs"
                                                                    
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15069073141415578210(std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& additional) {
#line 9882 "src/opencv/hub/types.rs"
                                                                                            
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13978445043890045904(std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index) {
#line 9891 "src/opencv/hub/types.rs"
                                                                                       
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13489585154246197541(std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index1, size_t const& index2) {
#line 9904 "src/opencv/hub/types.rs"
                                                                                                                
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4320214320389843682(std::vector<cv::ml::DTrees::Split>* const& vec) {
#line 9914 "src/opencv/hub/types.rs"
                                                                    
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17591663123156522352(std::vector<cv::ml::DTrees::Split>* const& vec, cv::ml::DTrees::Split* const& val) {
#line 9925 "src/opencv/hub/types.rs"
                                                                                                     
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5560306246138625427(std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index, cv::ml::DTrees::Split* const& val) {
#line 9935 "src/opencv/hub/types.rs"
                                                                                                                        
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_7136712777248308495_impl(const std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index) {
#line 9944 "src/opencv/hub/types.rs"
                                                                                                                                                               
            try {
                return { Error::Code::StsOk, NULL, new cv::ml::DTrees::Split(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_7136712777248308495(const std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_7136712777248308495_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_4681915486676247474_impl(const std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index) {
#line 9954 "src/opencv/hub/types.rs"
                                                                                                                                                      
            return new cv::ml::DTrees::Split((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_4681915486676247474(const std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_4681915486676247474_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_3503935367860000440_impl(std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index, cv::ml::DTrees::Split* const& val) {
#line 9963 "src/opencv/hub/types.rs"
                                                                                                                                                                                      
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_3503935367860000440(std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index, cv::ml::DTrees::Split* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_3503935367860000440_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6126616559346312093(std::vector<cv::ml::DTrees::Split>* const& vec, size_t const& index, cv::ml::DTrees::Split* const& val) {
#line 9975 "src/opencv/hub/types.rs"
                                                                                                                        
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14743565144710452647(std::vector<String>* const& vec) {
#line 10000 "src/opencv/hub/types.rs"
                                                     
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_8473856571487173027_impl() {
#line 10031 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<String>();
        
}
extern "C" {
void __cpp_closure_8473856571487173027( void* __result) {
    ::new(__result) (void*)(__cpp_closure_8473856571487173027_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16777305012589039597_impl(const std::vector<String>* const& vec) {
#line 10039 "src/opencv/hub/types.rs"
                                                                                 
            return vec->size();
        
}
extern "C" {
void __cpp_closure_16777305012589039597(const std::vector<String>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16777305012589039597_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_3905768703171794432_impl(const std::vector<String>* const& vec) {
#line 10047 "src/opencv/hub/types.rs"
                                                                             
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_3905768703171794432(const std::vector<String>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_3905768703171794432_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_5491067930410938813_impl(const std::vector<String>* const& vec) {
#line 10055 "src/opencv/hub/types.rs"
                                                                                 
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_5491067930410938813(const std::vector<String>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_5491067930410938813_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4783622799100426322(std::vector<String>* const& vec) {
#line 10063 "src/opencv/hub/types.rs"
                                                     
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1514262001629049601(std::vector<String>* const& vec, size_t const& additional) {
#line 10071 "src/opencv/hub/types.rs"
                                                                             
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4365731492906444979(std::vector<String>* const& vec, size_t const& index) {
#line 10080 "src/opencv/hub/types.rs"
                                                                        
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9883839228113814579(std::vector<String>* const& vec, size_t const& index1, size_t const& index2) {
#line 10093 "src/opencv/hub/types.rs"
                                                                                                 
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16612165931204642516(std::vector<String>* const& vec) {
#line 10103 "src/opencv/hub/types.rs"
                                                     
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_239052484275020499(std::vector<String>* const& vec, const char* const& val) {
#line 10115 "src/opencv/hub/types.rs"
                                                                           
            vec->push_back(String(val));
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8042566519804652600(std::vector<String>* const& vec, size_t const& index, const char* const& val) {
#line 10126 "src/opencv/hub/types.rs"
                                                                                              
            vec->insert(vec->begin() + index, String(val));
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_char_X __cpp_closure_10368257039966701131_impl(const std::vector<String>* const& vec, size_t const& index) {
#line 10135 "src/opencv/hub/types.rs"
                                                                                                                                                
            try {
                return { Error::Code::StsOk, NULL, vec->at(index).c_str() };
            } VEC_CATCH(cv_return_value_char_X)
        
}
extern "C" {
void __cpp_closure_10368257039966701131(const std::vector<String>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_char_X)(__cpp_closure_10368257039966701131_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline const char* __cpp_closure_15326761911659535196_impl(const std::vector<String>* const& vec, size_t const& index) {
#line 10145 "src/opencv/hub/types.rs"
                                                                                                                                         
            return (*vec)[index].c_str();
        
}
extern "C" {
void __cpp_closure_15326761911659535196(const std::vector<String>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (const char*)(__cpp_closure_15326761911659535196_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_15001167523200360334_impl(std::vector<String>* const& vec, size_t const& index, const char* const& val) {
#line 10155 "src/opencv/hub/types.rs"
                                                                                                                                                            
            try {
                vec->at(index) = String(val);
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_15001167523200360334(std::vector<String>* const& vec, size_t const& index, const char* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_15001167523200360334_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16929610970363223007(std::vector<String>* const& vec, size_t const& index, const char* const& val) {
#line 10168 "src/opencv/hub/types.rs"
                                                                                              
            (*vec)[index] = String(val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_11729468018640902558_impl(std::vector<dnn::Target>* const& vec) {
#line 10191 "src/opencv/hub/types.rs"
                                                                                                                  
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_11729468018640902558(std::vector<dnn::Target>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_11729468018640902558_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_551607354963839144(std::vector<dnn::Target>* const& vec) {
#line 10203 "src/opencv/hub/types.rs"
                                                          
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_13489836703176393209_impl() {
#line 10234 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<dnn::Target>();
        
}
extern "C" {
void __cpp_closure_13489836703176393209( void* __result) {
    ::new(__result) (void*)(__cpp_closure_13489836703176393209_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_12041041678734501034_impl(const std::vector<dnn::Target>* const& vec) {
#line 10242 "src/opencv/hub/types.rs"
                                                                                      
            return vec->size();
        
}
extern "C" {
void __cpp_closure_12041041678734501034(const std::vector<dnn::Target>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_12041041678734501034_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_18157263581177638857_impl(const std::vector<dnn::Target>* const& vec) {
#line 10250 "src/opencv/hub/types.rs"
                                                                                  
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_18157263581177638857(const std::vector<dnn::Target>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_18157263581177638857_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_7145421920314450802_impl(const std::vector<dnn::Target>* const& vec) {
#line 10258 "src/opencv/hub/types.rs"
                                                                                      
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_7145421920314450802(const std::vector<dnn::Target>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_7145421920314450802_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8016178587669809781(std::vector<dnn::Target>* const& vec) {
#line 10266 "src/opencv/hub/types.rs"
                                                          
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_296946928113494406(std::vector<dnn::Target>* const& vec, size_t const& additional) {
#line 10274 "src/opencv/hub/types.rs"
                                                                                  
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4354054350227063662(std::vector<dnn::Target>* const& vec, size_t const& index) {
#line 10283 "src/opencv/hub/types.rs"
                                                                             
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11946546797054184756(std::vector<dnn::Target>* const& vec, size_t const& index1, size_t const& index2) {
#line 10296 "src/opencv/hub/types.rs"
                                                                                                      
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_360919040657760072(std::vector<dnn::Target>* const& vec) {
#line 10306 "src/opencv/hub/types.rs"
                                                          
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12982640760181859388(std::vector<dnn::Target>* const& vec, dnn::Target const& val) {
#line 10316 "src/opencv/hub/types.rs"
                                                                                
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7645443474772181829(std::vector<dnn::Target>* const& vec, size_t const& index, dnn::Target const& val) {
#line 10325 "src/opencv/hub/types.rs"
                                                                                                   
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_dnn_Target __cpp_closure_15039080861075795895_impl(const std::vector<dnn::Target>* const& vec, size_t const& index) {
#line 10334 "src/opencv/hub/types.rs"
                                                                                                                                                             
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_dnn_Target)
        
}
extern "C" {
void __cpp_closure_15039080861075795895(const std::vector<dnn::Target>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_dnn_Target)(__cpp_closure_15039080861075795895_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline dnn::Target __cpp_closure_8898480065428517093_impl(const std::vector<dnn::Target>* const& vec, size_t const& index) {
#line 10344 "src/opencv/hub/types.rs"
                                                                                                                          
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_8898480065428517093(const std::vector<dnn::Target>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (dnn::Target)(__cpp_closure_8898480065428517093_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_4453801335800421576_impl(std::vector<dnn::Target>* const& vec, size_t const& index, dnn::Target const& val) {
#line 10352 "src/opencv/hub/types.rs"
                                                                                                                                                                 
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_4453801335800421576(std::vector<dnn::Target>* const& vec, size_t const& index, dnn::Target const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_4453801335800421576_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4368305981663439456(std::vector<dnn::Target>* const& vec, size_t const& index, dnn::Target const& val) {
#line 10363 "src/opencv/hub/types.rs"
                                                                                                   
            (*vec)[index] = val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7559991640610905803(std::vector<cv::UMat>* const& vec) {
#line 10393 "src/opencv/hub/types.rs"
                                                       
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_4665633975307661029_impl() {
#line 10424 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::UMat>();
        
}
extern "C" {
void __cpp_closure_4665633975307661029( void* __result) {
    ::new(__result) (void*)(__cpp_closure_4665633975307661029_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_1679756378914043671_impl(const std::vector<cv::UMat>* const& vec) {
#line 10432 "src/opencv/hub/types.rs"
                                                                                   
            return vec->size();
        
}
extern "C" {
void __cpp_closure_1679756378914043671(const std::vector<cv::UMat>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_1679756378914043671_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_2561698872971623162_impl(const std::vector<cv::UMat>* const& vec) {
#line 10440 "src/opencv/hub/types.rs"
                                                                               
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_2561698872971623162(const std::vector<cv::UMat>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_2561698872971623162_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_7339532577011974412_impl(const std::vector<cv::UMat>* const& vec) {
#line 10448 "src/opencv/hub/types.rs"
                                                                                   
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_7339532577011974412(const std::vector<cv::UMat>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_7339532577011974412_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10996457000407292943(std::vector<cv::UMat>* const& vec) {
#line 10456 "src/opencv/hub/types.rs"
                                                       
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11130924115256697670(std::vector<cv::UMat>* const& vec, size_t const& additional) {
#line 10464 "src/opencv/hub/types.rs"
                                                                               
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1499935527583319848(std::vector<cv::UMat>* const& vec, size_t const& index) {
#line 10473 "src/opencv/hub/types.rs"
                                                                          
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13010982541866783911(std::vector<cv::UMat>* const& vec, size_t const& index1, size_t const& index2) {
#line 10486 "src/opencv/hub/types.rs"
                                                                                                   
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11874249073706985517(std::vector<cv::UMat>* const& vec) {
#line 10496 "src/opencv/hub/types.rs"
                                                       
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15915737154921562709(std::vector<cv::UMat>* const& vec, cv::UMat* const& val) {
#line 10507 "src/opencv/hub/types.rs"
                                                                           
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2280151568360639782(std::vector<cv::UMat>* const& vec, size_t const& index, cv::UMat* const& val) {
#line 10517 "src/opencv/hub/types.rs"
                                                                                              
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_15835898251417732692_impl(const std::vector<cv::UMat>* const& vec, size_t const& index) {
#line 10526 "src/opencv/hub/types.rs"
                                                                                                                                                  
            try {
                return { Error::Code::StsOk, NULL, new cv::UMat(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_15835898251417732692(const std::vector<cv::UMat>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_15835898251417732692_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_13012637039193182140_impl(const std::vector<cv::UMat>* const& vec, size_t const& index) {
#line 10536 "src/opencv/hub/types.rs"
                                                                                                                            
            return new cv::UMat((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_13012637039193182140(const std::vector<cv::UMat>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_13012637039193182140_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_7940144364121616532_impl(std::vector<cv::UMat>* const& vec, size_t const& index, cv::UMat* const& val) {
#line 10545 "src/opencv/hub/types.rs"
                                                                                                                                                            
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_7940144364121616532(std::vector<cv::UMat>* const& vec, size_t const& index, cv::UMat* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_7940144364121616532_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4512692779912656852(std::vector<cv::UMat>* const& vec, size_t const& index, cv::UMat* const& val) {
#line 10557 "src/opencv/hub/types.rs"
                                                                                              
            (*vec)[index] = *val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_10851781922148935046_impl(std::vector<cv::Vec4f>* const& vec) {
#line 10580 "src/opencv/hub/types.rs"
                                                                                                         
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_10851781922148935046(std::vector<cv::Vec4f>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_10851781922148935046_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13610251967610367466(std::vector<cv::Vec4f>* const& vec) {
#line 10592 "src/opencv/hub/types.rs"
                                                        
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7056261786042434927_impl() {
#line 10623 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::Vec4f>();
        
}
extern "C" {
void __cpp_closure_7056261786042434927( void* __result) {
    ::new(__result) (void*)(__cpp_closure_7056261786042434927_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11284398461446203933_impl(const std::vector<cv::Vec4f>* const& vec) {
#line 10631 "src/opencv/hub/types.rs"
                                                                                    
            return vec->size();
        
}
extern "C" {
void __cpp_closure_11284398461446203933(const std::vector<cv::Vec4f>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11284398461446203933_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_8646756046752481958_impl(const std::vector<cv::Vec4f>* const& vec) {
#line 10639 "src/opencv/hub/types.rs"
                                                                                
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_8646756046752481958(const std::vector<cv::Vec4f>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_8646756046752481958_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_6950404629948340288_impl(const std::vector<cv::Vec4f>* const& vec) {
#line 10647 "src/opencv/hub/types.rs"
                                                                                    
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_6950404629948340288(const std::vector<cv::Vec4f>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_6950404629948340288_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1350655085897525220(std::vector<cv::Vec4f>* const& vec) {
#line 10655 "src/opencv/hub/types.rs"
                                                        
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3400943889333706285(std::vector<cv::Vec4f>* const& vec, size_t const& additional) {
#line 10663 "src/opencv/hub/types.rs"
                                                                                
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17335424580194500091(std::vector<cv::Vec4f>* const& vec, size_t const& index) {
#line 10672 "src/opencv/hub/types.rs"
                                                                           
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13239936997721241181(std::vector<cv::Vec4f>* const& vec, size_t const& index1, size_t const& index2) {
#line 10685 "src/opencv/hub/types.rs"
                                                                                                    
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4642655918096952479(std::vector<cv::Vec4f>* const& vec) {
#line 10695 "src/opencv/hub/types.rs"
                                                        
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18154320617401879328(std::vector<cv::Vec4f>* const& vec, cv::Vec4f const& val) {
#line 10705 "src/opencv/hub/types.rs"
                                                                            
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5925902963928647241(std::vector<cv::Vec4f>* const& vec, size_t const& index, cv::Vec4f const& val) {
#line 10714 "src/opencv/hub/types.rs"
                                                                                               
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_Vec4fWrapper __cpp_closure_14136154484371068982_impl(const std::vector<Vec4fWrapper>* const& vec, size_t const& index) {
#line 10723 "src/opencv/hub/types.rs"
                                                                                                                                                                  
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_Vec4fWrapper)
        
}
extern "C" {
void __cpp_closure_14136154484371068982(const std::vector<Vec4fWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_Vec4fWrapper)(__cpp_closure_14136154484371068982_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline Vec4fWrapper __cpp_closure_1899094065051535602_impl(const std::vector<Vec4fWrapper>* const& vec, size_t const& index) {
#line 10733 "src/opencv/hub/types.rs"
                                                                                                                     
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_1899094065051535602(const std::vector<Vec4fWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (Vec4fWrapper)(__cpp_closure_1899094065051535602_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_17932719808655913526_impl(std::vector<cv::Vec4f>* const& vec, size_t const& index, cv::Vec4f const& val) {
#line 10741 "src/opencv/hub/types.rs"
                                                                                                                                                             
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_17932719808655913526(std::vector<cv::Vec4f>* const& vec, size_t const& index, cv::Vec4f const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_17932719808655913526_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_276009431145939540(std::vector<cv::Vec4f>* const& vec, size_t const& index, cv::Vec4f const& val) {
#line 10752 "src/opencv/hub/types.rs"
                                                                                               
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_8154387389607306868_impl(std::vector<cv::Vec4f>* const& me) {
#line 10769 "src/opencv/hub/types.rs"
                                                                                                                        
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_8154387389607306868(std::vector<cv::Vec4f>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_8154387389607306868_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_16726372485777908782_impl(std::vector<cv::Vec4f>* const& me) {
#line 10789 "src/opencv/hub/types.rs"
                                                                                                                        
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_16726372485777908782(std::vector<cv::Vec4f>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_16726372485777908782_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_16177957556070122413_impl(std::vector<cv::Vec4f>* const& me) {
#line 10809 "src/opencv/hub/types.rs"
                                                                                                                        
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_16177957556070122413(std::vector<cv::Vec4f>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_16177957556070122413_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_1344203729578324343_impl(std::vector<cv::Vec6f>* const& vec) {
#line 10840 "src/opencv/hub/types.rs"
                                                                                                         
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_1344203729578324343(std::vector<cv::Vec6f>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_1344203729578324343_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6111356685072919965(std::vector<cv::Vec6f>* const& vec) {
#line 10852 "src/opencv/hub/types.rs"
                                                        
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7310374095290468031_impl() {
#line 10883 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<cv::Vec6f>();
        
}
extern "C" {
void __cpp_closure_7310374095290468031( void* __result) {
    ::new(__result) (void*)(__cpp_closure_7310374095290468031_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_14750051941090020561_impl(const std::vector<cv::Vec6f>* const& vec) {
#line 10891 "src/opencv/hub/types.rs"
                                                                                    
            return vec->size();
        
}
extern "C" {
void __cpp_closure_14750051941090020561(const std::vector<cv::Vec6f>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_14750051941090020561_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_11103967190792501028_impl(const std::vector<cv::Vec6f>* const& vec) {
#line 10899 "src/opencv/hub/types.rs"
                                                                                
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_11103967190792501028(const std::vector<cv::Vec6f>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_11103967190792501028_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_17805377398967298091_impl(const std::vector<cv::Vec6f>* const& vec) {
#line 10907 "src/opencv/hub/types.rs"
                                                                                    
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_17805377398967298091(const std::vector<cv::Vec6f>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_17805377398967298091_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12108190308940749692(std::vector<cv::Vec6f>* const& vec) {
#line 10915 "src/opencv/hub/types.rs"
                                                        
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3295401302797818557(std::vector<cv::Vec6f>* const& vec, size_t const& additional) {
#line 10923 "src/opencv/hub/types.rs"
                                                                                
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5840254523100320555(std::vector<cv::Vec6f>* const& vec, size_t const& index) {
#line 10932 "src/opencv/hub/types.rs"
                                                                           
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16658865889096080920(std::vector<cv::Vec6f>* const& vec, size_t const& index1, size_t const& index2) {
#line 10945 "src/opencv/hub/types.rs"
                                                                                                    
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7418956590939464407(std::vector<cv::Vec6f>* const& vec) {
#line 10955 "src/opencv/hub/types.rs"
                                                        
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10705417659538963804(std::vector<cv::Vec6f>* const& vec, cv::Vec6f const& val) {
#line 10965 "src/opencv/hub/types.rs"
                                                                            
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13657543422748294178(std::vector<cv::Vec6f>* const& vec, size_t const& index, cv::Vec6f const& val) {
#line 10974 "src/opencv/hub/types.rs"
                                                                                               
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_Vec6fWrapper __cpp_closure_10205099180192590728_impl(const std::vector<Vec6fWrapper>* const& vec, size_t const& index) {
#line 10983 "src/opencv/hub/types.rs"
                                                                                                                                                                  
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_Vec6fWrapper)
        
}
extern "C" {
void __cpp_closure_10205099180192590728(const std::vector<Vec6fWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_Vec6fWrapper)(__cpp_closure_10205099180192590728_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline Vec6fWrapper __cpp_closure_2346177523135714134_impl(const std::vector<Vec6fWrapper>* const& vec, size_t const& index) {
#line 10993 "src/opencv/hub/types.rs"
                                                                                                                     
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_2346177523135714134(const std::vector<Vec6fWrapper>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (Vec6fWrapper)(__cpp_closure_2346177523135714134_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_13885024370647719943_impl(std::vector<cv::Vec6f>* const& vec, size_t const& index, cv::Vec6f const& val) {
#line 11001 "src/opencv/hub/types.rs"
                                                                                                                                                             
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_13885024370647719943(std::vector<cv::Vec6f>* const& vec, size_t const& index, cv::Vec6f const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_13885024370647719943_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4476998809783152482(std::vector<cv::Vec6f>* const& vec, size_t const& index, cv::Vec6f const& val) {
#line 11012 "src/opencv/hub/types.rs"
                                                                                               
            (*vec)[index] = val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11532742342365288017(std::vector<std::vector<cv::DMatch>>* const& vec) {
#line 11042 "src/opencv/hub/types.rs"
                                                                      
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_17998652974492741196_impl() {
#line 11073 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<cv::DMatch>>();
        
}
extern "C" {
void __cpp_closure_17998652974492741196( void* __result) {
    ::new(__result) (void*)(__cpp_closure_17998652974492741196_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_8025101635679905174_impl(const std::vector<std::vector<cv::DMatch>>* const& vec) {
#line 11081 "src/opencv/hub/types.rs"
                                                                                                  
            return vec->size();
        
}
extern "C" {
void __cpp_closure_8025101635679905174(const std::vector<std::vector<cv::DMatch>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_8025101635679905174_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_13289951269542050704_impl(const std::vector<std::vector<cv::DMatch>>* const& vec) {
#line 11089 "src/opencv/hub/types.rs"
                                                                                              
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_13289951269542050704(const std::vector<std::vector<cv::DMatch>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_13289951269542050704_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_1669791252694444298_impl(const std::vector<std::vector<cv::DMatch>>* const& vec) {
#line 11097 "src/opencv/hub/types.rs"
                                                                                                  
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_1669791252694444298(const std::vector<std::vector<cv::DMatch>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_1669791252694444298_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14635678412115429170(std::vector<std::vector<cv::DMatch>>* const& vec) {
#line 11105 "src/opencv/hub/types.rs"
                                                                      
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2199019073055345245(std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& additional) {
#line 11113 "src/opencv/hub/types.rs"
                                                                                              
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2632016848349157012(std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index) {
#line 11122 "src/opencv/hub/types.rs"
                                                                                         
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17935568950200032487(std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index1, size_t const& index2) {
#line 11135 "src/opencv/hub/types.rs"
                                                                                                                  
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16562466242569515218(std::vector<std::vector<cv::DMatch>>* const& vec) {
#line 11145 "src/opencv/hub/types.rs"
                                                                      
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18364150811496930537(std::vector<std::vector<cv::DMatch>>* const& vec, std::vector<cv::DMatch>* const& val) {
#line 11156 "src/opencv/hub/types.rs"
                                                                                                         
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6487154664727786478(std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index, std::vector<cv::DMatch>* const& val) {
#line 11166 "src/opencv/hub/types.rs"
                                                                                                                            
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_9057182193870866996_impl(const std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index) {
#line 11175 "src/opencv/hub/types.rs"
                                                                                                                                                                 
            try {
                return { Error::Code::StsOk, NULL, new std::vector<cv::DMatch>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_9057182193870866996(const std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_9057182193870866996_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3142341498861915597_impl(const std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index) {
#line 11185 "src/opencv/hub/types.rs"
                                                                                                                                                      
            return new std::vector<cv::DMatch>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_3142341498861915597(const std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_3142341498861915597_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_17615504423471637632_impl(std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index, std::vector<cv::DMatch>* const& val) {
#line 11194 "src/opencv/hub/types.rs"
                                                                                                                                                                                          
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_17615504423471637632(std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index, std::vector<cv::DMatch>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_17615504423471637632_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9277828087015364702(std::vector<std::vector<cv::DMatch>>* const& vec, size_t const& index, std::vector<cv::DMatch>* const& val) {
#line 11206 "src/opencv/hub/types.rs"
                                                                                                                            
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13752733283059308099(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec) {
#line 11231 "src/opencv/hub/types.rs"
                                                                                        
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_5480800167482921162_impl() {
#line 11262 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<cv::line_descriptor::KeyLine>>();
        
}
extern "C" {
void __cpp_closure_5480800167482921162( void* __result) {
    ::new(__result) (void*)(__cpp_closure_5480800167482921162_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_13507158865787427430_impl(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec) {
#line 11270 "src/opencv/hub/types.rs"
                                                                                                                    
            return vec->size();
        
}
extern "C" {
void __cpp_closure_13507158865787427430(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_13507158865787427430_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_3910218355542014324_impl(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec) {
#line 11278 "src/opencv/hub/types.rs"
                                                                                                                
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_3910218355542014324(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_3910218355542014324_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16643780898838882379_impl(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec) {
#line 11286 "src/opencv/hub/types.rs"
                                                                                                                    
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_16643780898838882379(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16643780898838882379_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9246464701927877743(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec) {
#line 11294 "src/opencv/hub/types.rs"
                                                                                        
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4703314471623289583(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& additional) {
#line 11302 "src/opencv/hub/types.rs"
                                                                                                                
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6536433758023167456(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index) {
#line 11311 "src/opencv/hub/types.rs"
                                                                                                           
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4850457681450877375(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index1, size_t const& index2) {
#line 11324 "src/opencv/hub/types.rs"
                                                                                                                                    
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1817177911201412396(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec) {
#line 11334 "src/opencv/hub/types.rs"
                                                                                        
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16990570470948370580(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, std::vector<cv::line_descriptor::KeyLine>* const& val) {
#line 11345 "src/opencv/hub/types.rs"
                                                                                                                                             
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2485127766745226313(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index, std::vector<cv::line_descriptor::KeyLine>* const& val) {
#line 11355 "src/opencv/hub/types.rs"
                                                                                                                                                                
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_6985628458612628659_impl(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index) {
#line 11364 "src/opencv/hub/types.rs"
                                                                                                                                                                                   
            try {
                return { Error::Code::StsOk, NULL, new std::vector<cv::line_descriptor::KeyLine>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_6985628458612628659(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_6985628458612628659_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1769078382909343600_impl(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index) {
#line 11374 "src/opencv/hub/types.rs"
                                                                                                                                                                         
            return new std::vector<cv::line_descriptor::KeyLine>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_1769078382909343600(const std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_1769078382909343600_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_17988815866973939410_impl(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index, std::vector<cv::line_descriptor::KeyLine>* const& val) {
#line 11383 "src/opencv/hub/types.rs"
                                                                                                                                                                                                                              
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_17988815866973939410(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index, std::vector<cv::line_descriptor::KeyLine>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_17988815866973939410_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4617933466765428084(std::vector<std::vector<cv::line_descriptor::KeyLine>>* const& vec, size_t const& index, std::vector<cv::line_descriptor::KeyLine>* const& val) {
#line 11395 "src/opencv/hub/types.rs"
                                                                                                                                                                
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8868049060017414722(std::vector<std::vector<cv::KeyPoint>>* const& vec) {
#line 11420 "src/opencv/hub/types.rs"
                                                                        
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_611373306907571374_impl() {
#line 11451 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<cv::KeyPoint>>();
        
}
extern "C" {
void __cpp_closure_611373306907571374( void* __result) {
    ::new(__result) (void*)(__cpp_closure_611373306907571374_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_14052110682802843317_impl(const std::vector<std::vector<cv::KeyPoint>>* const& vec) {
#line 11459 "src/opencv/hub/types.rs"
                                                                                                    
            return vec->size();
        
}
extern "C" {
void __cpp_closure_14052110682802843317(const std::vector<std::vector<cv::KeyPoint>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_14052110682802843317_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_2062646915844154036_impl(const std::vector<std::vector<cv::KeyPoint>>* const& vec) {
#line 11467 "src/opencv/hub/types.rs"
                                                                                                
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_2062646915844154036(const std::vector<std::vector<cv::KeyPoint>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_2062646915844154036_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_9649694367984080672_impl(const std::vector<std::vector<cv::KeyPoint>>* const& vec) {
#line 11475 "src/opencv/hub/types.rs"
                                                                                                    
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_9649694367984080672(const std::vector<std::vector<cv::KeyPoint>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_9649694367984080672_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10461174959780139848(std::vector<std::vector<cv::KeyPoint>>* const& vec) {
#line 11483 "src/opencv/hub/types.rs"
                                                                        
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4214764128098981335(std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& additional) {
#line 11491 "src/opencv/hub/types.rs"
                                                                                                
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14644314008587033501(std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index) {
#line 11500 "src/opencv/hub/types.rs"
                                                                                           
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8237589438193600021(std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index1, size_t const& index2) {
#line 11513 "src/opencv/hub/types.rs"
                                                                                                                    
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11708168205278921966(std::vector<std::vector<cv::KeyPoint>>* const& vec) {
#line 11523 "src/opencv/hub/types.rs"
                                                                        
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4523505230666681903(std::vector<std::vector<cv::KeyPoint>>* const& vec, std::vector<cv::KeyPoint>* const& val) {
#line 11534 "src/opencv/hub/types.rs"
                                                                                                             
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17360827497260508022(std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index, std::vector<cv::KeyPoint>* const& val) {
#line 11544 "src/opencv/hub/types.rs"
                                                                                                                                
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_17426208703723307819_impl(const std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index) {
#line 11553 "src/opencv/hub/types.rs"
                                                                                                                                                                   
            try {
                return { Error::Code::StsOk, NULL, new std::vector<cv::KeyPoint>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_17426208703723307819(const std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_17426208703723307819_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12568221429195346925_impl(const std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index) {
#line 11563 "src/opencv/hub/types.rs"
                                                                                                                                                          
            return new std::vector<cv::KeyPoint>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_12568221429195346925(const std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12568221429195346925_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_1875998588314569859_impl(std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index, std::vector<cv::KeyPoint>* const& val) {
#line 11572 "src/opencv/hub/types.rs"
                                                                                                                                                                                              
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_1875998588314569859(std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index, std::vector<cv::KeyPoint>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_1875998588314569859_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6075397722724404043(std::vector<std::vector<cv::KeyPoint>>* const& vec, size_t const& index, std::vector<cv::KeyPoint>* const& val) {
#line 11584 "src/opencv/hub/types.rs"
                                                                                                                                
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14336238473212118885(std::vector<std::vector<cv::Mat>>* const& vec) {
#line 11609 "src/opencv/hub/types.rs"
                                                                   
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11736102866147295191_impl() {
#line 11640 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<cv::Mat>>();
        
}
extern "C" {
void __cpp_closure_11736102866147295191( void* __result) {
    ::new(__result) (void*)(__cpp_closure_11736102866147295191_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_2795016571494035652_impl(const std::vector<std::vector<cv::Mat>>* const& vec) {
#line 11648 "src/opencv/hub/types.rs"
                                                                                               
            return vec->size();
        
}
extern "C" {
void __cpp_closure_2795016571494035652(const std::vector<std::vector<cv::Mat>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_2795016571494035652_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_14216902679062597554_impl(const std::vector<std::vector<cv::Mat>>* const& vec) {
#line 11656 "src/opencv/hub/types.rs"
                                                                                           
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_14216902679062597554(const std::vector<std::vector<cv::Mat>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_14216902679062597554_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16512361326797629161_impl(const std::vector<std::vector<cv::Mat>>* const& vec) {
#line 11664 "src/opencv/hub/types.rs"
                                                                                               
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_16512361326797629161(const std::vector<std::vector<cv::Mat>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16512361326797629161_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3071376899725011395(std::vector<std::vector<cv::Mat>>* const& vec) {
#line 11672 "src/opencv/hub/types.rs"
                                                                   
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17714787281942427577(std::vector<std::vector<cv::Mat>>* const& vec, size_t const& additional) {
#line 11680 "src/opencv/hub/types.rs"
                                                                                           
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4766701697078330718(std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index) {
#line 11689 "src/opencv/hub/types.rs"
                                                                                      
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18013333432757956279(std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index1, size_t const& index2) {
#line 11702 "src/opencv/hub/types.rs"
                                                                                                               
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1402886479436045392(std::vector<std::vector<cv::Mat>>* const& vec) {
#line 11712 "src/opencv/hub/types.rs"
                                                                   
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7012868523101811506(std::vector<std::vector<cv::Mat>>* const& vec, std::vector<cv::Mat>* const& val) {
#line 11723 "src/opencv/hub/types.rs"
                                                                                                   
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14142366852552898659(std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index, std::vector<cv::Mat>* const& val) {
#line 11733 "src/opencv/hub/types.rs"
                                                                                                                      
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_6882188495518518733_impl(const std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index) {
#line 11742 "src/opencv/hub/types.rs"
                                                                                                                                                              
            try {
                return { Error::Code::StsOk, NULL, new std::vector<cv::Mat>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_6882188495518518733(const std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_6882188495518518733_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_11025622401151680034_impl(const std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index) {
#line 11752 "src/opencv/hub/types.rs"
                                                                                                                                                
            return new std::vector<cv::Mat>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_11025622401151680034(const std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_11025622401151680034_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_8944061264183478461_impl(std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index, std::vector<cv::Mat>* const& val) {
#line 11761 "src/opencv/hub/types.rs"
                                                                                                                                                                                    
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_8944061264183478461(std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index, std::vector<cv::Mat>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_8944061264183478461_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1354792137580099437(std::vector<std::vector<cv::Mat>>* const& vec, size_t const& index, std::vector<cv::Mat>* const& val) {
#line 11773 "src/opencv/hub/types.rs"
                                                                                                                      
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2911328278725927089(std::vector<std::vector<cv::Point>>* const& vec) {
#line 11798 "src/opencv/hub/types.rs"
                                                                     
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_3014246472189686692_impl() {
#line 11829 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<cv::Point>>();
        
}
extern "C" {
void __cpp_closure_3014246472189686692( void* __result) {
    ::new(__result) (void*)(__cpp_closure_3014246472189686692_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_17922509130020882396_impl(const std::vector<std::vector<cv::Point>>* const& vec) {
#line 11837 "src/opencv/hub/types.rs"
                                                                                                 
            return vec->size();
        
}
extern "C" {
void __cpp_closure_17922509130020882396(const std::vector<std::vector<cv::Point>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_17922509130020882396_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_3983860141491529233_impl(const std::vector<std::vector<cv::Point>>* const& vec) {
#line 11845 "src/opencv/hub/types.rs"
                                                                                             
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_3983860141491529233(const std::vector<std::vector<cv::Point>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_3983860141491529233_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_5875217022573856199_impl(const std::vector<std::vector<cv::Point>>* const& vec) {
#line 11853 "src/opencv/hub/types.rs"
                                                                                                 
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_5875217022573856199(const std::vector<std::vector<cv::Point>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_5875217022573856199_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4841501983383229016(std::vector<std::vector<cv::Point>>* const& vec) {
#line 11861 "src/opencv/hub/types.rs"
                                                                     
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17024537167804162990(std::vector<std::vector<cv::Point>>* const& vec, size_t const& additional) {
#line 11869 "src/opencv/hub/types.rs"
                                                                                             
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5789025688827788927(std::vector<std::vector<cv::Point>>* const& vec, size_t const& index) {
#line 11878 "src/opencv/hub/types.rs"
                                                                                        
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16976908749889347736(std::vector<std::vector<cv::Point>>* const& vec, size_t const& index1, size_t const& index2) {
#line 11891 "src/opencv/hub/types.rs"
                                                                                                                 
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12464553888873812989(std::vector<std::vector<cv::Point>>* const& vec) {
#line 11901 "src/opencv/hub/types.rs"
                                                                     
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12301522110637285940(std::vector<std::vector<cv::Point>>* const& vec, std::vector<cv::Point>* const& val) {
#line 11912 "src/opencv/hub/types.rs"
                                                                                                       
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1312504183411758490(std::vector<std::vector<cv::Point>>* const& vec, size_t const& index, std::vector<cv::Point>* const& val) {
#line 11922 "src/opencv/hub/types.rs"
                                                                                                                          
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_14248917739248139791_impl(const std::vector<std::vector<cv::Point>>* const& vec, size_t const& index) {
#line 11931 "src/opencv/hub/types.rs"
                                                                                                                                                                
            try {
                return { Error::Code::StsOk, NULL, new std::vector<cv::Point>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_14248917739248139791(const std::vector<std::vector<cv::Point>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_14248917739248139791_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_17012814822835425020_impl(const std::vector<std::vector<cv::Point>>* const& vec, size_t const& index) {
#line 11941 "src/opencv/hub/types.rs"
                                                                                                                                                    
            return new std::vector<cv::Point>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_17012814822835425020(const std::vector<std::vector<cv::Point>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_17012814822835425020_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_1130956171981060131_impl(std::vector<std::vector<cv::Point>>* const& vec, size_t const& index, std::vector<cv::Point>* const& val) {
#line 11950 "src/opencv/hub/types.rs"
                                                                                                                                                                                        
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_1130956171981060131(std::vector<std::vector<cv::Point>>* const& vec, size_t const& index, std::vector<cv::Point>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_1130956171981060131_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6230526592804556780(std::vector<std::vector<cv::Point>>* const& vec, size_t const& index, std::vector<cv::Point>* const& val) {
#line 11962 "src/opencv/hub/types.rs"
                                                                                                                          
            (*vec)[index] = *val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_2948701854991586711_impl(std::vector<std::vector<cv::Point>>* const& me) {
#line 11974 "src/opencv/hub/types.rs"
                                                                                                                                     
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_2948701854991586711(std::vector<std::vector<cv::Point>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_2948701854991586711_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_13929318785666429979_impl(std::vector<std::vector<cv::Point>>* const& me) {
#line 11994 "src/opencv/hub/types.rs"
                                                                                                                                     
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_13929318785666429979(std::vector<std::vector<cv::Point>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_13929318785666429979_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_522743076360903223_impl(std::vector<std::vector<cv::Point>>* const& me) {
#line 12014 "src/opencv/hub/types.rs"
                                                                                                                                     
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_522743076360903223(std::vector<std::vector<cv::Point>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_522743076360903223_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10716310628301357831(std::vector<std::vector<cv::Point2f>>* const& vec) {
#line 12047 "src/opencv/hub/types.rs"
                                                                       
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_14313768623665554445_impl() {
#line 12078 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<cv::Point2f>>();
        
}
extern "C" {
void __cpp_closure_14313768623665554445( void* __result) {
    ::new(__result) (void*)(__cpp_closure_14313768623665554445_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_13398487891510513793_impl(const std::vector<std::vector<cv::Point2f>>* const& vec) {
#line 12086 "src/opencv/hub/types.rs"
                                                                                                   
            return vec->size();
        
}
extern "C" {
void __cpp_closure_13398487891510513793(const std::vector<std::vector<cv::Point2f>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_13398487891510513793_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_5787280628165082870_impl(const std::vector<std::vector<cv::Point2f>>* const& vec) {
#line 12094 "src/opencv/hub/types.rs"
                                                                                               
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_5787280628165082870(const std::vector<std::vector<cv::Point2f>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_5787280628165082870_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_9942703125939120187_impl(const std::vector<std::vector<cv::Point2f>>* const& vec) {
#line 12102 "src/opencv/hub/types.rs"
                                                                                                   
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_9942703125939120187(const std::vector<std::vector<cv::Point2f>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_9942703125939120187_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12619118209052791509(std::vector<std::vector<cv::Point2f>>* const& vec) {
#line 12110 "src/opencv/hub/types.rs"
                                                                       
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13220172532518024060(std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& additional) {
#line 12118 "src/opencv/hub/types.rs"
                                                                                               
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16409351753115531884(std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index) {
#line 12127 "src/opencv/hub/types.rs"
                                                                                          
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5491295875309973813(std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index1, size_t const& index2) {
#line 12140 "src/opencv/hub/types.rs"
                                                                                                                   
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10081682154075233293(std::vector<std::vector<cv::Point2f>>* const& vec) {
#line 12150 "src/opencv/hub/types.rs"
                                                                       
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9389172211553219363(std::vector<std::vector<cv::Point2f>>* const& vec, std::vector<cv::Point2f>* const& val) {
#line 12161 "src/opencv/hub/types.rs"
                                                                                                           
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7761556774699626019(std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index, std::vector<cv::Point2f>* const& val) {
#line 12171 "src/opencv/hub/types.rs"
                                                                                                                              
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_11401051825784019972_impl(const std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index) {
#line 12180 "src/opencv/hub/types.rs"
                                                                                                                                                                  
            try {
                return { Error::Code::StsOk, NULL, new std::vector<cv::Point2f>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_11401051825784019972(const std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_11401051825784019972_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6503085165057878391_impl(const std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index) {
#line 12190 "src/opencv/hub/types.rs"
                                                                                                                                                        
            return new std::vector<cv::Point2f>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_6503085165057878391(const std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_6503085165057878391_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_9840630269532967480_impl(std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index, std::vector<cv::Point2f>* const& val) {
#line 12199 "src/opencv/hub/types.rs"
                                                                                                                                                                                            
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_9840630269532967480(std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index, std::vector<cv::Point2f>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_9840630269532967480_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11184544241033640610(std::vector<std::vector<cv::Point2f>>* const& vec, size_t const& index, std::vector<cv::Point2f>* const& val) {
#line 12211 "src/opencv/hub/types.rs"
                                                                                                                              
            (*vec)[index] = *val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_17144745175213033435_impl(std::vector<std::vector<cv::Point2f>>* const& me) {
#line 12223 "src/opencv/hub/types.rs"
                                                                                                                                       
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_17144745175213033435(std::vector<std::vector<cv::Point2f>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_17144745175213033435_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_7449645254771026421_impl(std::vector<std::vector<cv::Point2f>>* const& me) {
#line 12243 "src/opencv/hub/types.rs"
                                                                                                                                       
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_7449645254771026421(std::vector<std::vector<cv::Point2f>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_7449645254771026421_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_3570624110094400993_impl(std::vector<std::vector<cv::Point2f>>* const& me) {
#line 12263 "src/opencv/hub/types.rs"
                                                                                                                                       
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_3570624110094400993(std::vector<std::vector<cv::Point2f>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_3570624110094400993_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17695024569925792525(std::vector<std::vector<std::vector<int>>>* const& vec) {
#line 12296 "src/opencv/hub/types.rs"
                                                                            
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_18220309501434857569_impl() {
#line 12327 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<std::vector<int>>>();
        
}
extern "C" {
void __cpp_closure_18220309501434857569( void* __result) {
    ::new(__result) (void*)(__cpp_closure_18220309501434857569_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_14778774788111120426_impl(const std::vector<std::vector<std::vector<int>>>* const& vec) {
#line 12335 "src/opencv/hub/types.rs"
                                                                                                        
            return vec->size();
        
}
extern "C" {
void __cpp_closure_14778774788111120426(const std::vector<std::vector<std::vector<int>>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_14778774788111120426_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_11089388719009420096_impl(const std::vector<std::vector<std::vector<int>>>* const& vec) {
#line 12343 "src/opencv/hub/types.rs"
                                                                                                    
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_11089388719009420096(const std::vector<std::vector<std::vector<int>>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_11089388719009420096_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_7329716630709299243_impl(const std::vector<std::vector<std::vector<int>>>* const& vec) {
#line 12351 "src/opencv/hub/types.rs"
                                                                                                        
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_7329716630709299243(const std::vector<std::vector<std::vector<int>>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_7329716630709299243_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9873225035207539241(std::vector<std::vector<std::vector<int>>>* const& vec) {
#line 12359 "src/opencv/hub/types.rs"
                                                                            
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15369578066143214715(std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& additional) {
#line 12367 "src/opencv/hub/types.rs"
                                                                                                    
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_18385721531949209798(std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index) {
#line 12376 "src/opencv/hub/types.rs"
                                                                                               
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16028828200236066644(std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index1, size_t const& index2) {
#line 12389 "src/opencv/hub/types.rs"
                                                                                                                        
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17560984626780679843(std::vector<std::vector<std::vector<int>>>* const& vec) {
#line 12399 "src/opencv/hub/types.rs"
                                                                            
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10045448826225132366(std::vector<std::vector<std::vector<int>>>* const& vec, std::vector<std::vector<int>>* const& val) {
#line 12410 "src/opencv/hub/types.rs"
                                                                                                                     
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11462196132353043906(std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index, std::vector<std::vector<int>>* const& val) {
#line 12420 "src/opencv/hub/types.rs"
                                                                                                                                        
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_12793430214509532067_impl(const std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index) {
#line 12429 "src/opencv/hub/types.rs"
                                                                                                                                                                       
            try {
                return { Error::Code::StsOk, NULL, new std::vector<std::vector<int>>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_12793430214509532067(const std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_12793430214509532067_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_15997792884742411092_impl(const std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index) {
#line 12439 "src/opencv/hub/types.rs"
                                                                                                                                                                 
            return new std::vector<std::vector<int>>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_15997792884742411092(const std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_15997792884742411092_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_11055460491847653286_impl(std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index, std::vector<std::vector<int>>* const& val) {
#line 12448 "src/opencv/hub/types.rs"
                                                                                                                                                                                                      
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_11055460491847653286(std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index, std::vector<std::vector<int>>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_11055460491847653286_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13311437566789150822(std::vector<std::vector<std::vector<int>>>* const& vec, size_t const& index, std::vector<std::vector<int>>* const& val) {
#line 12460 "src/opencv/hub/types.rs"
                                                                                                                                        
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10525961685656380741(std::vector<std::vector<bool>>* const& vec) {
#line 12485 "src/opencv/hub/types.rs"
                                                                
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_5535360529059511875_impl() {
#line 12516 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<bool>>();
        
}
extern "C" {
void __cpp_closure_5535360529059511875( void* __result) {
    ::new(__result) (void*)(__cpp_closure_5535360529059511875_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_7299589840625411921_impl(const std::vector<std::vector<bool>>* const& vec) {
#line 12524 "src/opencv/hub/types.rs"
                                                                                            
            return vec->size();
        
}
extern "C" {
void __cpp_closure_7299589840625411921(const std::vector<std::vector<bool>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_7299589840625411921_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_11928562943995783817_impl(const std::vector<std::vector<bool>>* const& vec) {
#line 12532 "src/opencv/hub/types.rs"
                                                                                        
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_11928562943995783817(const std::vector<std::vector<bool>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_11928562943995783817_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16547562528512011489_impl(const std::vector<std::vector<bool>>* const& vec) {
#line 12540 "src/opencv/hub/types.rs"
                                                                                            
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_16547562528512011489(const std::vector<std::vector<bool>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16547562528512011489_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14347613777395337472(std::vector<std::vector<bool>>* const& vec) {
#line 12548 "src/opencv/hub/types.rs"
                                                                
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6586030410415619616(std::vector<std::vector<bool>>* const& vec, size_t const& additional) {
#line 12556 "src/opencv/hub/types.rs"
                                                                                        
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17745419171844274878(std::vector<std::vector<bool>>* const& vec, size_t const& index) {
#line 12565 "src/opencv/hub/types.rs"
                                                                                   
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8676121459214893039(std::vector<std::vector<bool>>* const& vec, size_t const& index1, size_t const& index2) {
#line 12578 "src/opencv/hub/types.rs"
                                                                                                            
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16192406215520527291(std::vector<std::vector<bool>>* const& vec) {
#line 12588 "src/opencv/hub/types.rs"
                                                                
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8416217357509011081(std::vector<std::vector<bool>>* const& vec, std::vector<bool>* const& val) {
#line 12599 "src/opencv/hub/types.rs"
                                                                                             
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1223890793457162085(std::vector<std::vector<bool>>* const& vec, size_t const& index, std::vector<bool>* const& val) {
#line 12609 "src/opencv/hub/types.rs"
                                                                                                                
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_5204740064063438028_impl(const std::vector<std::vector<bool>>* const& vec, size_t const& index) {
#line 12618 "src/opencv/hub/types.rs"
                                                                                                                                                           
            try {
                return { Error::Code::StsOk, NULL, new std::vector<bool>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_5204740064063438028(const std::vector<std::vector<bool>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_5204740064063438028_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12300747401961905062_impl(const std::vector<std::vector<bool>>* const& vec, size_t const& index) {
#line 12628 "src/opencv/hub/types.rs"
                                                                                                                                              
            return new std::vector<bool>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_12300747401961905062(const std::vector<std::vector<bool>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_12300747401961905062_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_17213979097755796304_impl(std::vector<std::vector<bool>>* const& vec, size_t const& index, std::vector<bool>* const& val) {
#line 12637 "src/opencv/hub/types.rs"
                                                                                                                                                                              
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_17213979097755796304(std::vector<std::vector<bool>>* const& vec, size_t const& index, std::vector<bool>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_17213979097755796304_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7880024284793600488(std::vector<std::vector<bool>>* const& vec, size_t const& index, std::vector<bool>* const& val) {
#line 12649 "src/opencv/hub/types.rs"
                                                                                                                
            (*vec)[index] = *val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15184227397237357839(std::vector<std::vector<char>>* const& vec) {
#line 12674 "src/opencv/hub/types.rs"
                                                                
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_68222625726416620_impl() {
#line 12705 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<char>>();
        
}
extern "C" {
void __cpp_closure_68222625726416620( void* __result) {
    ::new(__result) (void*)(__cpp_closure_68222625726416620_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_14636044605322447769_impl(const std::vector<std::vector<char>>* const& vec) {
#line 12713 "src/opencv/hub/types.rs"
                                                                                            
            return vec->size();
        
}
extern "C" {
void __cpp_closure_14636044605322447769(const std::vector<std::vector<char>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_14636044605322447769_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_541476679330626671_impl(const std::vector<std::vector<char>>* const& vec) {
#line 12721 "src/opencv/hub/types.rs"
                                                                                        
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_541476679330626671(const std::vector<std::vector<char>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_541476679330626671_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_4752119420984164759_impl(const std::vector<std::vector<char>>* const& vec) {
#line 12729 "src/opencv/hub/types.rs"
                                                                                            
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_4752119420984164759(const std::vector<std::vector<char>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_4752119420984164759_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17140795816081042654(std::vector<std::vector<char>>* const& vec) {
#line 12737 "src/opencv/hub/types.rs"
                                                                
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13732285595359785121(std::vector<std::vector<char>>* const& vec, size_t const& additional) {
#line 12745 "src/opencv/hub/types.rs"
                                                                                        
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7567095029738967452(std::vector<std::vector<char>>* const& vec, size_t const& index) {
#line 12754 "src/opencv/hub/types.rs"
                                                                                   
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15193883698264988443(std::vector<std::vector<char>>* const& vec, size_t const& index1, size_t const& index2) {
#line 12767 "src/opencv/hub/types.rs"
                                                                                                            
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12817398127223636091(std::vector<std::vector<char>>* const& vec) {
#line 12777 "src/opencv/hub/types.rs"
                                                                
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3074018029764695539(std::vector<std::vector<char>>* const& vec, std::vector<char>* const& val) {
#line 12788 "src/opencv/hub/types.rs"
                                                                                             
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4633320814421419028(std::vector<std::vector<char>>* const& vec, size_t const& index, std::vector<char>* const& val) {
#line 12798 "src/opencv/hub/types.rs"
                                                                                                                
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_15559464860101589009_impl(const std::vector<std::vector<char>>* const& vec, size_t const& index) {
#line 12807 "src/opencv/hub/types.rs"
                                                                                                                                                           
            try {
                return { Error::Code::StsOk, NULL, new std::vector<char>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_15559464860101589009(const std::vector<std::vector<char>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_15559464860101589009_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_6607921191182443450_impl(const std::vector<std::vector<char>>* const& vec, size_t const& index) {
#line 12817 "src/opencv/hub/types.rs"
                                                                                                                                              
            return new std::vector<char>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_6607921191182443450(const std::vector<std::vector<char>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_6607921191182443450_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_3619410800946483810_impl(std::vector<std::vector<char>>* const& vec, size_t const& index, std::vector<char>* const& val) {
#line 12826 "src/opencv/hub/types.rs"
                                                                                                                                                                              
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_3619410800946483810(std::vector<std::vector<char>>* const& vec, size_t const& index, std::vector<char>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_3619410800946483810_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11322546023640708799(std::vector<std::vector<char>>* const& vec, size_t const& index, std::vector<char>* const& val) {
#line 12838 "src/opencv/hub/types.rs"
                                                                                                                
            (*vec)[index] = *val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_3061562178707438421_impl(std::vector<std::vector<char>>* const& me) {
#line 12850 "src/opencv/hub/types.rs"
                                                                                                                                
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_3061562178707438421(std::vector<std::vector<char>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_3061562178707438421_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_1364287544892816855_impl(std::vector<std::vector<char>>* const& me) {
#line 12870 "src/opencv/hub/types.rs"
                                                                                                                                
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_1364287544892816855(std::vector<std::vector<char>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_1364287544892816855_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_7396008553986760968_impl(std::vector<std::vector<char>>* const& me) {
#line 12890 "src/opencv/hub/types.rs"
                                                                                                                                
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_7396008553986760968(std::vector<std::vector<char>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_7396008553986760968_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13200923691941164942(std::vector<std::vector<int>>* const& vec) {
#line 12923 "src/opencv/hub/types.rs"
                                                               
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_16242834845579799128_impl() {
#line 12954 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<int>>();
        
}
extern "C" {
void __cpp_closure_16242834845579799128( void* __result) {
    ::new(__result) (void*)(__cpp_closure_16242834845579799128_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_13164579972304138906_impl(const std::vector<std::vector<int>>* const& vec) {
#line 12962 "src/opencv/hub/types.rs"
                                                                                           
            return vec->size();
        
}
extern "C" {
void __cpp_closure_13164579972304138906(const std::vector<std::vector<int>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_13164579972304138906_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_17107867150432904802_impl(const std::vector<std::vector<int>>* const& vec) {
#line 12970 "src/opencv/hub/types.rs"
                                                                                       
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_17107867150432904802(const std::vector<std::vector<int>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_17107867150432904802_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11849829358417433038_impl(const std::vector<std::vector<int>>* const& vec) {
#line 12978 "src/opencv/hub/types.rs"
                                                                                           
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_11849829358417433038(const std::vector<std::vector<int>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11849829358417433038_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14346171485912132689(std::vector<std::vector<int>>* const& vec) {
#line 12986 "src/opencv/hub/types.rs"
                                                               
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5381342983774808461(std::vector<std::vector<int>>* const& vec, size_t const& additional) {
#line 12994 "src/opencv/hub/types.rs"
                                                                                       
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7378725587654496758(std::vector<std::vector<int>>* const& vec, size_t const& index) {
#line 13003 "src/opencv/hub/types.rs"
                                                                                  
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2818790875255093335(std::vector<std::vector<int>>* const& vec, size_t const& index1, size_t const& index2) {
#line 13016 "src/opencv/hub/types.rs"
                                                                                                           
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4299998260840564844(std::vector<std::vector<int>>* const& vec) {
#line 13026 "src/opencv/hub/types.rs"
                                                               
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13386889480518126579(std::vector<std::vector<int>>* const& vec, std::vector<int>* const& val) {
#line 13037 "src/opencv/hub/types.rs"
                                                                                           
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11909875511398040435(std::vector<std::vector<int>>* const& vec, size_t const& index, std::vector<int>* const& val) {
#line 13047 "src/opencv/hub/types.rs"
                                                                                                              
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_8338689236704080973_impl(const std::vector<std::vector<int>>* const& vec, size_t const& index) {
#line 13056 "src/opencv/hub/types.rs"
                                                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, new std::vector<int>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_8338689236704080973(const std::vector<std::vector<int>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_8338689236704080973_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9306860201382363265_impl(const std::vector<std::vector<int>>* const& vec, size_t const& index) {
#line 13066 "src/opencv/hub/types.rs"
                                                                                                                                            
            return new std::vector<int>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_9306860201382363265(const std::vector<std::vector<int>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_9306860201382363265_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_11933296201697474819_impl(std::vector<std::vector<int>>* const& vec, size_t const& index, std::vector<int>* const& val) {
#line 13075 "src/opencv/hub/types.rs"
                                                                                                                                                                            
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_11933296201697474819(std::vector<std::vector<int>>* const& vec, size_t const& index, std::vector<int>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_11933296201697474819_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7444810314280863367(std::vector<std::vector<int>>* const& vec, size_t const& index, std::vector<int>* const& val) {
#line 13087 "src/opencv/hub/types.rs"
                                                                                                              
            (*vec)[index] = *val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_1722744913841887176_impl(std::vector<std::vector<int>>* const& me) {
#line 13099 "src/opencv/hub/types.rs"
                                                                                                                               
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_1722744913841887176(std::vector<std::vector<int>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_1722744913841887176_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_10005505092304413168_impl(std::vector<std::vector<int>>* const& me) {
#line 13119 "src/opencv/hub/types.rs"
                                                                                                                               
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_10005505092304413168(std::vector<std::vector<int>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_10005505092304413168_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_2393934868636941254_impl(std::vector<std::vector<int>>* const& me) {
#line 13139 "src/opencv/hub/types.rs"
                                                                                                                               
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_2393934868636941254(std::vector<std::vector<int>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_2393934868636941254_impl(me));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9026148894262204321(std::vector<std::vector<uchar>>* const& vec) {
#line 13172 "src/opencv/hub/types.rs"
                                                                 
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_1632242716976963550_impl() {
#line 13203 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<std::vector<uchar>>();
        
}
extern "C" {
void __cpp_closure_1632242716976963550( void* __result) {
    ::new(__result) (void*)(__cpp_closure_1632242716976963550_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_8189653899579717458_impl(const std::vector<std::vector<uchar>>* const& vec) {
#line 13211 "src/opencv/hub/types.rs"
                                                                                             
            return vec->size();
        
}
extern "C" {
void __cpp_closure_8189653899579717458(const std::vector<std::vector<uchar>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_8189653899579717458_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_5727396240087027947_impl(const std::vector<std::vector<uchar>>* const& vec) {
#line 13219 "src/opencv/hub/types.rs"
                                                                                         
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_5727396240087027947(const std::vector<std::vector<uchar>>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_5727396240087027947_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16009748320376457305_impl(const std::vector<std::vector<uchar>>* const& vec) {
#line 13227 "src/opencv/hub/types.rs"
                                                                                             
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_16009748320376457305(const std::vector<std::vector<uchar>>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16009748320376457305_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15434307351463707796(std::vector<std::vector<uchar>>* const& vec) {
#line 13235 "src/opencv/hub/types.rs"
                                                                 
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_317503560472926664(std::vector<std::vector<uchar>>* const& vec, size_t const& additional) {
#line 13243 "src/opencv/hub/types.rs"
                                                                                         
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12416499180749373243(std::vector<std::vector<uchar>>* const& vec, size_t const& index) {
#line 13252 "src/opencv/hub/types.rs"
                                                                                    
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9321615055611886314(std::vector<std::vector<uchar>>* const& vec, size_t const& index1, size_t const& index2) {
#line 13265 "src/opencv/hub/types.rs"
                                                                                                             
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11140409154982233025(std::vector<std::vector<uchar>>* const& vec) {
#line 13275 "src/opencv/hub/types.rs"
                                                                 
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3666168471886255843(std::vector<std::vector<uchar>>* const& vec, std::vector<uchar>* const& val) {
#line 13286 "src/opencv/hub/types.rs"
                                                                                               
            vec->push_back(*val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16244781568803344646(std::vector<std::vector<uchar>>* const& vec, size_t const& index, std::vector<uchar>* const& val) {
#line 13296 "src/opencv/hub/types.rs"
                                                                                                                  
            vec->insert(vec->begin() + index, *val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_10563353058291148766_impl(const std::vector<std::vector<uchar>>* const& vec, size_t const& index) {
#line 13305 "src/opencv/hub/types.rs"
                                                                                                                                                            
            try {
                return { Error::Code::StsOk, NULL, new std::vector<uchar>(vec->at(index)) };
            } VEC_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_10563353058291148766(const std::vector<std::vector<uchar>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_10563353058291148766_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_493832455310845835_impl(const std::vector<std::vector<uchar>>* const& vec, size_t const& index) {
#line 13315 "src/opencv/hub/types.rs"
                                                                                                                                                
            return new std::vector<uchar>((*vec)[index]);
        
}
extern "C" {
void __cpp_closure_493832455310845835(const std::vector<std::vector<uchar>>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (void*)(__cpp_closure_493832455310845835_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_7082612025675886779_impl(std::vector<std::vector<uchar>>* const& vec, size_t const& index, std::vector<uchar>* const& val) {
#line 13324 "src/opencv/hub/types.rs"
                                                                                                                                                                                
            try {
                vec->at(index) = *val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_7082612025675886779(std::vector<std::vector<uchar>>* const& vec, size_t const& index, std::vector<uchar>* const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_7082612025675886779_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11118111994194984557(std::vector<std::vector<uchar>>* const& vec, size_t const& index, std::vector<uchar>* const& val) {
#line 13336 "src/opencv/hub/types.rs"
                                                                                                                  
            (*vec)[index] = *val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_11523600940993031520_impl(std::vector<std::vector<uchar>>* const& me) {
#line 13348 "src/opencv/hub/types.rs"
                                                                                                                                 
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_11523600940993031520(std::vector<std::vector<uchar>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_11523600940993031520_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_5258226242418661567_impl(std::vector<std::vector<uchar>>* const& me) {
#line 13368 "src/opencv/hub/types.rs"
                                                                                                                                 
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_5258226242418661567(std::vector<std::vector<uchar>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_5258226242418661567_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_16548317954887804518_impl(std::vector<std::vector<uchar>>* const& me) {
#line 13388 "src/opencv/hub/types.rs"
                                                                                                                                 
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_16548317954887804518(std::vector<std::vector<uchar>>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_16548317954887804518_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_791673932402181376_impl(std::vector<VideoCaptureAPIs>* const& vec) {
#line 13419 "src/opencv/hub/types.rs"
                                                                                                                                     
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_791673932402181376(std::vector<VideoCaptureAPIs>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_791673932402181376_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3178221834443740021(std::vector<VideoCaptureAPIs>* const& vec) {
#line 13431 "src/opencv/hub/types.rs"
                                                               
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_8467155713073038972_impl() {
#line 13462 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<VideoCaptureAPIs>();
        
}
extern "C" {
void __cpp_closure_8467155713073038972( void* __result) {
    ::new(__result) (void*)(__cpp_closure_8467155713073038972_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16962428076296809047_impl(const std::vector<VideoCaptureAPIs>* const& vec) {
#line 13470 "src/opencv/hub/types.rs"
                                                                                           
            return vec->size();
        
}
extern "C" {
void __cpp_closure_16962428076296809047(const std::vector<VideoCaptureAPIs>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16962428076296809047_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_2602391759265797023_impl(const std::vector<VideoCaptureAPIs>* const& vec) {
#line 13478 "src/opencv/hub/types.rs"
                                                                                       
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_2602391759265797023(const std::vector<VideoCaptureAPIs>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_2602391759265797023_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_5993969431271853013_impl(const std::vector<VideoCaptureAPIs>* const& vec) {
#line 13486 "src/opencv/hub/types.rs"
                                                                                           
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_5993969431271853013(const std::vector<VideoCaptureAPIs>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_5993969431271853013_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5489659817645120383(std::vector<VideoCaptureAPIs>* const& vec) {
#line 13494 "src/opencv/hub/types.rs"
                                                               
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7515256864488917855(std::vector<VideoCaptureAPIs>* const& vec, size_t const& additional) {
#line 13502 "src/opencv/hub/types.rs"
                                                                                       
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2368929354221447533(std::vector<VideoCaptureAPIs>* const& vec, size_t const& index) {
#line 13511 "src/opencv/hub/types.rs"
                                                                                  
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5192460367128536607(std::vector<VideoCaptureAPIs>* const& vec, size_t const& index1, size_t const& index2) {
#line 13524 "src/opencv/hub/types.rs"
                                                                                                           
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11845504331698887628(std::vector<VideoCaptureAPIs>* const& vec) {
#line 13534 "src/opencv/hub/types.rs"
                                                               
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12451535751553793774(std::vector<VideoCaptureAPIs>* const& vec, VideoCaptureAPIs const& val) {
#line 13544 "src/opencv/hub/types.rs"
                                                                                          
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12156108752720398002(std::vector<VideoCaptureAPIs>* const& vec, size_t const& index, VideoCaptureAPIs const& val) {
#line 13553 "src/opencv/hub/types.rs"
                                                                                                             
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_VideoCaptureAPIs __cpp_closure_10281989740489373828_impl(const std::vector<VideoCaptureAPIs>* const& vec, size_t const& index) {
#line 13562 "src/opencv/hub/types.rs"
                                                                                                                                                                              
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_VideoCaptureAPIs)
        
}
extern "C" {
void __cpp_closure_10281989740489373828(const std::vector<VideoCaptureAPIs>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_VideoCaptureAPIs)(__cpp_closure_10281989740489373828_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline VideoCaptureAPIs __cpp_closure_11803687939751537315_impl(const std::vector<VideoCaptureAPIs>* const& vec, size_t const& index) {
#line 13572 "src/opencv/hub/types.rs"
                                                                                                                                                  
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_11803687939751537315(const std::vector<VideoCaptureAPIs>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (VideoCaptureAPIs)(__cpp_closure_11803687939751537315_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_430270381456973286_impl(std::vector<VideoCaptureAPIs>* const& vec, size_t const& index, VideoCaptureAPIs const& val) {
#line 13580 "src/opencv/hub/types.rs"
                                                                                                                                                                           
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_430270381456973286(std::vector<VideoCaptureAPIs>* const& vec, size_t const& index, VideoCaptureAPIs const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_430270381456973286_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6815287561356190621(std::vector<VideoCaptureAPIs>* const& vec, size_t const& index, VideoCaptureAPIs const& val) {
#line 13591 "src/opencv/hub/types.rs"
                                                                                                             
            (*vec)[index] = val;
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_7680557983670084455(std::vector<bool>* const& vec) {
#line 13621 "src/opencv/hub/types.rs"
                                                   
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7004544697271255020_impl() {
#line 13652 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<bool>();
        
}
extern "C" {
void __cpp_closure_7004544697271255020( void* __result) {
    ::new(__result) (void*)(__cpp_closure_7004544697271255020_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_15004593992513929980_impl(const std::vector<bool>* const& vec) {
#line 13660 "src/opencv/hub/types.rs"
                                                                               
            return vec->size();
        
}
extern "C" {
void __cpp_closure_15004593992513929980(const std::vector<bool>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_15004593992513929980_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_17327198488214745622_impl(const std::vector<bool>* const& vec) {
#line 13668 "src/opencv/hub/types.rs"
                                                                           
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_17327198488214745622(const std::vector<bool>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_17327198488214745622_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16056567257092599215_impl(const std::vector<bool>* const& vec) {
#line 13676 "src/opencv/hub/types.rs"
                                                                               
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_16056567257092599215(const std::vector<bool>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16056567257092599215_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16722246676674103490(std::vector<bool>* const& vec) {
#line 13684 "src/opencv/hub/types.rs"
                                                   
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_81215631196010935(std::vector<bool>* const& vec, size_t const& additional) {
#line 13692 "src/opencv/hub/types.rs"
                                                                           
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13587513110281780216(std::vector<bool>* const& vec, size_t const& index) {
#line 13701 "src/opencv/hub/types.rs"
                                                                      
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5502766680889592946(std::vector<bool>* const& vec, size_t const& index1, size_t const& index2) {
#line 13714 "src/opencv/hub/types.rs"
                                                                                               
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_8080610137997008144(std::vector<bool>* const& vec) {
#line 13724 "src/opencv/hub/types.rs"
                                                   
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16709587503425465842(std::vector<bool>* const& vec, bool const& val) {
#line 13734 "src/opencv/hub/types.rs"
                                                                  
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14695512266750728376(std::vector<bool>* const& vec, size_t const& index, bool const& val) {
#line 13743 "src/opencv/hub/types.rs"
                                                                                     
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_bool __cpp_closure_15782268564406704158_impl(const std::vector<bool>* const& vec, size_t const& index) {
#line 13752 "src/opencv/hub/types.rs"
                                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_bool)
        
}
extern "C" {
void __cpp_closure_15782268564406704158(const std::vector<bool>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_bool)(__cpp_closure_15782268564406704158_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_11499083246384148170_impl(const std::vector<bool>* const& vec, size_t const& index) {
#line 13762 "src/opencv/hub/types.rs"
                                                                                              
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_11499083246384148170(const std::vector<bool>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (bool)(__cpp_closure_11499083246384148170_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_9576202085401998275_impl(std::vector<bool>* const& vec, size_t const& index, bool const& val) {
#line 13770 "src/opencv/hub/types.rs"
                                                                                                                                                   
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_9576202085401998275(std::vector<bool>* const& vec, size_t const& index, bool const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_9576202085401998275_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2106629954918574704(std::vector<bool>* const& vec, size_t const& index, bool const& val) {
#line 13781 "src/opencv/hub/types.rs"
                                                                                     
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_7207636657531480413_impl(std::vector<char>* const& vec) {
#line 13804 "src/opencv/hub/types.rs"
                                                                                           
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_7207636657531480413(std::vector<char>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_7207636657531480413_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1802241705346948257(std::vector<char>* const& vec) {
#line 13816 "src/opencv/hub/types.rs"
                                                   
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_2775395275616944542_impl() {
#line 13847 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<char>();
        
}
extern "C" {
void __cpp_closure_2775395275616944542( void* __result) {
    ::new(__result) (void*)(__cpp_closure_2775395275616944542_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_12861170847392063244_impl(const std::vector<char>* const& vec) {
#line 13855 "src/opencv/hub/types.rs"
                                                                               
            return vec->size();
        
}
extern "C" {
void __cpp_closure_12861170847392063244(const std::vector<char>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_12861170847392063244_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_5070942591364374531_impl(const std::vector<char>* const& vec) {
#line 13863 "src/opencv/hub/types.rs"
                                                                           
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_5070942591364374531(const std::vector<char>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_5070942591364374531_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_13411887371174896298_impl(const std::vector<char>* const& vec) {
#line 13871 "src/opencv/hub/types.rs"
                                                                               
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_13411887371174896298(const std::vector<char>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_13411887371174896298_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3328803152866770948(std::vector<char>* const& vec) {
#line 13879 "src/opencv/hub/types.rs"
                                                   
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6363155120045174375(std::vector<char>* const& vec, size_t const& additional) {
#line 13887 "src/opencv/hub/types.rs"
                                                                           
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17288443068549491961(std::vector<char>* const& vec, size_t const& index) {
#line 13896 "src/opencv/hub/types.rs"
                                                                      
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5963968172261715016(std::vector<char>* const& vec, size_t const& index1, size_t const& index2) {
#line 13909 "src/opencv/hub/types.rs"
                                                                                               
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_12334985474951699276(std::vector<char>* const& vec) {
#line 13919 "src/opencv/hub/types.rs"
                                                   
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16644907581149672943(std::vector<char>* const& vec, char const& val) {
#line 13929 "src/opencv/hub/types.rs"
                                                                  
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2050930992903056236(std::vector<char>* const& vec, size_t const& index, char const& val) {
#line 13938 "src/opencv/hub/types.rs"
                                                                                     
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_char __cpp_closure_9748202317866119140_impl(const std::vector<char>* const& vec, size_t const& index) {
#line 13947 "src/opencv/hub/types.rs"
                                                                                                                                          
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_char)
        
}
extern "C" {
void __cpp_closure_9748202317866119140(const std::vector<char>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_char)(__cpp_closure_9748202317866119140_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline char __cpp_closure_3135047660660413210_impl(const std::vector<char>* const& vec, size_t const& index) {
#line 13957 "src/opencv/hub/types.rs"
                                                                                            
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_3135047660660413210(const std::vector<char>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (char)(__cpp_closure_3135047660660413210_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_2027044894594819505_impl(std::vector<char>* const& vec, size_t const& index, char const& val) {
#line 13965 "src/opencv/hub/types.rs"
                                                                                                                                                   
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_2027044894594819505(std::vector<char>* const& vec, size_t const& index, char const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_2027044894594819505_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16801502178212680446(std::vector<char>* const& vec, size_t const& index, char const& val) {
#line 13976 "src/opencv/hub/types.rs"
                                                                                     
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_12353449638894517807_impl(std::vector<char>* const& me) {
#line 13993 "src/opencv/hub/types.rs"
                                                                                                                   
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_12353449638894517807(std::vector<char>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_12353449638894517807_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_1521229585598757136_impl(std::vector<char>* const& me) {
#line 14013 "src/opencv/hub/types.rs"
                                                                                                                   
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_1521229585598757136(std::vector<char>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_1521229585598757136_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_15698612187084219801_impl(std::vector<char>* const& me) {
#line 14033 "src/opencv/hub/types.rs"
                                                                                                                   
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_15698612187084219801(std::vector<char>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_15698612187084219801_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_9038273325449511849_impl(std::vector<double>* const& vec) {
#line 14064 "src/opencv/hub/types.rs"
                                                                                              
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_9038273325449511849(std::vector<double>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_9038273325449511849_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15275775679331883419(std::vector<double>* const& vec) {
#line 14076 "src/opencv/hub/types.rs"
                                                     
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_12220541611156879411_impl() {
#line 14107 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<double>();
        
}
extern "C" {
void __cpp_closure_12220541611156879411( void* __result) {
    ::new(__result) (void*)(__cpp_closure_12220541611156879411_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11267422671129471093_impl(const std::vector<double>* const& vec) {
#line 14115 "src/opencv/hub/types.rs"
                                                                                 
            return vec->size();
        
}
extern "C" {
void __cpp_closure_11267422671129471093(const std::vector<double>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11267422671129471093_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_2556054811046261065_impl(const std::vector<double>* const& vec) {
#line 14123 "src/opencv/hub/types.rs"
                                                                             
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_2556054811046261065(const std::vector<double>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_2556054811046261065_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_8891690477421903543_impl(const std::vector<double>* const& vec) {
#line 14131 "src/opencv/hub/types.rs"
                                                                                 
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_8891690477421903543(const std::vector<double>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_8891690477421903543_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17110719008536657052(std::vector<double>* const& vec) {
#line 14139 "src/opencv/hub/types.rs"
                                                     
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14563198771711454956(std::vector<double>* const& vec, size_t const& additional) {
#line 14147 "src/opencv/hub/types.rs"
                                                                             
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2286246304981493720(std::vector<double>* const& vec, size_t const& index) {
#line 14156 "src/opencv/hub/types.rs"
                                                                        
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3362440357276032396(std::vector<double>* const& vec, size_t const& index1, size_t const& index2) {
#line 14169 "src/opencv/hub/types.rs"
                                                                                                 
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2275813519711178534(std::vector<double>* const& vec) {
#line 14179 "src/opencv/hub/types.rs"
                                                     
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14628931732789424007(std::vector<double>* const& vec, double const& val) {
#line 14189 "src/opencv/hub/types.rs"
                                                                      
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14418041519159457325(std::vector<double>* const& vec, size_t const& index, double const& val) {
#line 14198 "src/opencv/hub/types.rs"
                                                                                         
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_double __cpp_closure_2342028852560666799_impl(const std::vector<double>* const& vec, size_t const& index) {
#line 14207 "src/opencv/hub/types.rs"
                                                                                                                                                
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_double)
        
}
extern "C" {
void __cpp_closure_2342028852560666799(const std::vector<double>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_double)(__cpp_closure_2342028852560666799_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline double __cpp_closure_1393579072439005874_impl(const std::vector<double>* const& vec, size_t const& index) {
#line 14217 "src/opencv/hub/types.rs"
                                                                                                 
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_1393579072439005874(const std::vector<double>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (double)(__cpp_closure_1393579072439005874_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_4348600947328908447_impl(std::vector<double>* const& vec, size_t const& index, double const& val) {
#line 14225 "src/opencv/hub/types.rs"
                                                                                                                                                       
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_4348600947328908447(std::vector<double>* const& vec, size_t const& index, double const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_4348600947328908447_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5568747771060774357(std::vector<double>* const& vec, size_t const& index, double const& val) {
#line 14236 "src/opencv/hub/types.rs"
                                                                                         
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_14346173460160139773_impl(std::vector<double>* const& me) {
#line 14253 "src/opencv/hub/types.rs"
                                                                                                                     
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_14346173460160139773(std::vector<double>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_14346173460160139773_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_7383893735973570063_impl(std::vector<double>* const& me) {
#line 14273 "src/opencv/hub/types.rs"
                                                                                                                     
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_7383893735973570063(std::vector<double>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_7383893735973570063_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_8324678660439730615_impl(std::vector<double>* const& me) {
#line 14293 "src/opencv/hub/types.rs"
                                                                                                                     
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_8324678660439730615(std::vector<double>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_8324678660439730615_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_3235244654576794811_impl(std::vector<float>* const& vec) {
#line 14324 "src/opencv/hub/types.rs"
                                                                                             
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_3235244654576794811(std::vector<float>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_3235244654576794811_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4500242342960182091(std::vector<float>* const& vec) {
#line 14336 "src/opencv/hub/types.rs"
                                                    
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_2607565952003448314_impl() {
#line 14367 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<float>();
        
}
extern "C" {
void __cpp_closure_2607565952003448314( void* __result) {
    ::new(__result) (void*)(__cpp_closure_2607565952003448314_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11361889547061345766_impl(const std::vector<float>* const& vec) {
#line 14375 "src/opencv/hub/types.rs"
                                                                                
            return vec->size();
        
}
extern "C" {
void __cpp_closure_11361889547061345766(const std::vector<float>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11361889547061345766_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_6294544620288412947_impl(const std::vector<float>* const& vec) {
#line 14383 "src/opencv/hub/types.rs"
                                                                            
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_6294544620288412947(const std::vector<float>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_6294544620288412947_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_12411044917523570770_impl(const std::vector<float>* const& vec) {
#line 14391 "src/opencv/hub/types.rs"
                                                                                
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_12411044917523570770(const std::vector<float>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_12411044917523570770_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_17739170696145630312(std::vector<float>* const& vec) {
#line 14399 "src/opencv/hub/types.rs"
                                                    
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14466765927435028625(std::vector<float>* const& vec, size_t const& additional) {
#line 14407 "src/opencv/hub/types.rs"
                                                                            
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5717998601482480899(std::vector<float>* const& vec, size_t const& index) {
#line 14416 "src/opencv/hub/types.rs"
                                                                       
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13023583183350489084(std::vector<float>* const& vec, size_t const& index1, size_t const& index2) {
#line 14429 "src/opencv/hub/types.rs"
                                                                                                
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15354867040902800757(std::vector<float>* const& vec) {
#line 14439 "src/opencv/hub/types.rs"
                                                    
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1658995635258318900(std::vector<float>* const& vec, float const& val) {
#line 14449 "src/opencv/hub/types.rs"
                                                                    
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10793439297917335550(std::vector<float>* const& vec, size_t const& index, float const& val) {
#line 14458 "src/opencv/hub/types.rs"
                                                                                       
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_float __cpp_closure_11262040897650221267_impl(const std::vector<float>* const& vec, size_t const& index) {
#line 14467 "src/opencv/hub/types.rs"
                                                                                                                                             
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_float)
        
}
extern "C" {
void __cpp_closure_11262040897650221267(const std::vector<float>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_float)(__cpp_closure_11262040897650221267_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline float __cpp_closure_7732588252419036850_impl(const std::vector<float>* const& vec, size_t const& index) {
#line 14477 "src/opencv/hub/types.rs"
                                                                                               
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_7732588252419036850(const std::vector<float>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (float)(__cpp_closure_7732588252419036850_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_1225232659811169419_impl(std::vector<float>* const& vec, size_t const& index, float const& val) {
#line 14485 "src/opencv/hub/types.rs"
                                                                                                                                                     
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_1225232659811169419(std::vector<float>* const& vec, size_t const& index, float const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_1225232659811169419_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5185690119109117511(std::vector<float>* const& vec, size_t const& index, float const& val) {
#line 14496 "src/opencv/hub/types.rs"
                                                                                       
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_9802297775506011743_impl(std::vector<float>* const& me) {
#line 14513 "src/opencv/hub/types.rs"
                                                                                                                    
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_9802297775506011743(std::vector<float>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_9802297775506011743_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_642908917187010659_impl(std::vector<float>* const& me) {
#line 14533 "src/opencv/hub/types.rs"
                                                                                                                    
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_642908917187010659(std::vector<float>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_642908917187010659_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_13901830270936609889_impl(std::vector<float>* const& me) {
#line 14553 "src/opencv/hub/types.rs"
                                                                                                                    
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_13901830270936609889(std::vector<float>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_13901830270936609889_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_13113764192898854333_impl(std::vector<int>* const& vec) {
#line 14584 "src/opencv/hub/types.rs"
                                                                                           
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_13113764192898854333(std::vector<int>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_13113764192898854333_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_245177084160959536(std::vector<int>* const& vec) {
#line 14596 "src/opencv/hub/types.rs"
                                                  
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_7228951401631190757_impl() {
#line 14627 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<int>();
        
}
extern "C" {
void __cpp_closure_7228951401631190757( void* __result) {
    ::new(__result) (void*)(__cpp_closure_7228951401631190757_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_2003852843491137584_impl(const std::vector<int>* const& vec) {
#line 14635 "src/opencv/hub/types.rs"
                                                                              
            return vec->size();
        
}
extern "C" {
void __cpp_closure_2003852843491137584(const std::vector<int>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_2003852843491137584_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_12984527251973068684_impl(const std::vector<int>* const& vec) {
#line 14643 "src/opencv/hub/types.rs"
                                                                          
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_12984527251973068684(const std::vector<int>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_12984527251973068684_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_14122966068245613639_impl(const std::vector<int>* const& vec) {
#line 14651 "src/opencv/hub/types.rs"
                                                                              
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_14122966068245613639(const std::vector<int>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_14122966068245613639_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5437769831944023564(std::vector<int>* const& vec) {
#line 14659 "src/opencv/hub/types.rs"
                                                  
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4040862740235519126(std::vector<int>* const& vec, size_t const& additional) {
#line 14667 "src/opencv/hub/types.rs"
                                                                          
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15577577327670062602(std::vector<int>* const& vec, size_t const& index) {
#line 14676 "src/opencv/hub/types.rs"
                                                                     
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10416158897434234093(std::vector<int>* const& vec, size_t const& index1, size_t const& index2) {
#line 14689 "src/opencv/hub/types.rs"
                                                                                              
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_13829889086830906443(std::vector<int>* const& vec) {
#line 14699 "src/opencv/hub/types.rs"
                                                  
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4325044969902101265(std::vector<int>* const& vec, int const& val) {
#line 14709 "src/opencv/hub/types.rs"
                                                                
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9810391079563474272(std::vector<int>* const& vec, size_t const& index, int const& val) {
#line 14718 "src/opencv/hub/types.rs"
                                                                                   
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_int __cpp_closure_18364162262637498265_impl(const std::vector<int>* const& vec, size_t const& index) {
#line 14727 "src/opencv/hub/types.rs"
                                                                                                                                       
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_int)
        
}
extern "C" {
void __cpp_closure_18364162262637498265(const std::vector<int>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_int)(__cpp_closure_18364162262637498265_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline int __cpp_closure_16615582174278975443_impl(const std::vector<int>* const& vec, size_t const& index) {
#line 14737 "src/opencv/hub/types.rs"
                                                                                           
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_16615582174278975443(const std::vector<int>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (int)(__cpp_closure_16615582174278975443_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_2459922955420785104_impl(std::vector<int>* const& vec, size_t const& index, int const& val) {
#line 14745 "src/opencv/hub/types.rs"
                                                                                                                                                 
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_2459922955420785104(std::vector<int>* const& vec, size_t const& index, int const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_2459922955420785104_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_470110153206198044(std::vector<int>* const& vec, size_t const& index, int const& val) {
#line 14756 "src/opencv/hub/types.rs"
                                                                                   
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_8721822241632648431_impl(std::vector<int>* const& me) {
#line 14773 "src/opencv/hub/types.rs"
                                                                                                                  
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_8721822241632648431(std::vector<int>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_8721822241632648431_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_3635981173187908995_impl(std::vector<int>* const& me) {
#line 14793 "src/opencv/hub/types.rs"
                                                                                                                  
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_3635981173187908995(std::vector<int>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_3635981173187908995_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_1860326715308388698_impl(std::vector<int>* const& me) {
#line 14813 "src/opencv/hub/types.rs"
                                                                                                                  
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_1860326715308388698(std::vector<int>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_1860326715308388698_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_4395606701057974283_impl(std::vector<size_t>* const& vec) {
#line 14844 "src/opencv/hub/types.rs"
                                                                                                 
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_4395606701057974283(std::vector<size_t>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_4395606701057974283_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1419178005768458683(std::vector<size_t>* const& vec) {
#line 14856 "src/opencv/hub/types.rs"
                                                     
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_9394920082368779808_impl() {
#line 14887 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<size_t>();
        
}
extern "C" {
void __cpp_closure_9394920082368779808( void* __result) {
    ::new(__result) (void*)(__cpp_closure_9394920082368779808_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_16944045976943877997_impl(const std::vector<size_t>* const& vec) {
#line 14895 "src/opencv/hub/types.rs"
                                                                                 
            return vec->size();
        
}
extern "C" {
void __cpp_closure_16944045976943877997(const std::vector<size_t>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_16944045976943877997_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_4793511438892857707_impl(const std::vector<size_t>* const& vec) {
#line 14903 "src/opencv/hub/types.rs"
                                                                             
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_4793511438892857707(const std::vector<size_t>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_4793511438892857707_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_12310930667543990030_impl(const std::vector<size_t>* const& vec) {
#line 14911 "src/opencv/hub/types.rs"
                                                                                 
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_12310930667543990030(const std::vector<size_t>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_12310930667543990030_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_11593187728374352773(std::vector<size_t>* const& vec) {
#line 14919 "src/opencv/hub/types.rs"
                                                     
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14142223446743964770(std::vector<size_t>* const& vec, size_t const& additional) {
#line 14927 "src/opencv/hub/types.rs"
                                                                             
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9236544207061673607(std::vector<size_t>* const& vec, size_t const& index) {
#line 14936 "src/opencv/hub/types.rs"
                                                                        
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_5860658103292337984(std::vector<size_t>* const& vec, size_t const& index1, size_t const& index2) {
#line 14949 "src/opencv/hub/types.rs"
                                                                                                 
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14861761876687144842(std::vector<size_t>* const& vec) {
#line 14959 "src/opencv/hub/types.rs"
                                                     
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_2189466097692613248(std::vector<size_t>* const& vec, size_t const& val) {
#line 14969 "src/opencv/hub/types.rs"
                                                                      
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_14572229209394601895(std::vector<size_t>* const& vec, size_t const& index, size_t const& val) {
#line 14978 "src/opencv/hub/types.rs"
                                                                                         
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_std_size_t __cpp_closure_8140740235682223645_impl(const std::vector<std::size_t>* const& vec, size_t const& index) {
#line 14987 "src/opencv/hub/types.rs"
                                                                                                                                                             
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_std_size_t)
        
}
extern "C" {
void __cpp_closure_8140740235682223645(const std::vector<std::size_t>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_std_size_t)(__cpp_closure_8140740235682223645_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline std::size_t __cpp_closure_16405401921038157845_impl(const std::vector<std::size_t>* const& vec, size_t const& index) {
#line 14997 "src/opencv/hub/types.rs"
                                                                                                              
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_16405401921038157845(const std::vector<std::size_t>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (std::size_t)(__cpp_closure_16405401921038157845_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_7842733662480004305_impl(std::vector<size_t>* const& vec, size_t const& index, size_t const& val) {
#line 15005 "src/opencv/hub/types.rs"
                                                                                                                                                       
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_7842733662480004305(std::vector<size_t>* const& vec, size_t const& index, size_t const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_7842733662480004305_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_3392729523700378570(std::vector<size_t>* const& vec, size_t const& index, size_t const& val) {
#line 15016 "src/opencv/hub/types.rs"
                                                                                         
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void** __cpp_closure_18082678938575754954_impl(std::vector<uchar>* const& vec) {
#line 15044 "src/opencv/hub/types.rs"
                                                                                            
                return reinterpret_cast<void**>(vec->data());
            
}
extern "C" {
void __cpp_closure_18082678938575754954(std::vector<uchar>* const& vec, void* __result) {
    ::new(__result) (void**)(__cpp_closure_18082678938575754954_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16500133354355392389(std::vector<uchar>* const& vec) {
#line 15056 "src/opencv/hub/types.rs"
                                                    
            delete vec;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline void* __cpp_closure_5526555487993604232_impl() {
#line 15087 "src/opencv/hub/types.rs"
                                                              
            return new std::vector<uchar>();
        
}
extern "C" {
void __cpp_closure_5526555487993604232( void* __result) {
    ::new(__result) (void*)(__cpp_closure_5526555487993604232_impl());
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_11468507450077904322_impl(const std::vector<uchar>* const& vec) {
#line 15095 "src/opencv/hub/types.rs"
                                                                                
            return vec->size();
        
}
extern "C" {
void __cpp_closure_11468507450077904322(const std::vector<uchar>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_11468507450077904322_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_15913227847144965803_impl(const std::vector<uchar>* const& vec) {
#line 15103 "src/opencv/hub/types.rs"
                                                                            
            return vec->empty();
        
}
extern "C" {
void __cpp_closure_15913227847144965803(const std::vector<uchar>* const& vec, void* __result) {
    ::new(__result) (bool)(__cpp_closure_15913227847144965803_impl(vec));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline size_t __cpp_closure_1550469926855928711_impl(const std::vector<uchar>* const& vec) {
#line 15111 "src/opencv/hub/types.rs"
                                                                                
            return vec->capacity();
        
}
extern "C" {
void __cpp_closure_1550469926855928711(const std::vector<uchar>* const& vec, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_1550469926855928711_impl(vec));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_6285348216536267505(std::vector<uchar>* const& vec) {
#line 15119 "src/opencv/hub/types.rs"
                                                    
            vec->shrink_to_fit();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_4836859866880223641(std::vector<uchar>* const& vec, size_t const& additional) {
#line 15127 "src/opencv/hub/types.rs"
                                                                            
            vec->reserve(vec->size() + additional);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9431047498065997654(std::vector<uchar>* const& vec, size_t const& index) {
#line 15136 "src/opencv/hub/types.rs"
                                                                       
            vec->erase(vec->begin() + index);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_16661289644482411698(std::vector<uchar>* const& vec, size_t const& index1, size_t const& index2) {
#line 15149 "src/opencv/hub/types.rs"
                                                                                                
                swap((*vec)[index1], (*vec)[index2]);
            
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_1702699316627748188(std::vector<uchar>* const& vec) {
#line 15159 "src/opencv/hub/types.rs"
                                                    
            vec->clear();
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_9753560978990666836(std::vector<uchar>* const& vec, uchar const& val) {
#line 15169 "src/opencv/hub/types.rs"
                                                                    
            vec->push_back(val);
        
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_10007434961133374053(std::vector<uchar>* const& vec, size_t const& index, uchar const& val) {
#line 15178 "src/opencv/hub/types.rs"
                                                                                       
            vec->insert(vec->begin() + index, val);
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_unsigned_char __cpp_closure_10957798246104013533_impl(const std::vector<unsigned char>* const& vec, size_t const& index) {
#line 15187 "src/opencv/hub/types.rs"
                                                                                                                                                                     
            try {
                return { Error::Code::StsOk, NULL, vec->at(index) };
            } VEC_CATCH(cv_return_value_unsigned_char)
        
}
extern "C" {
void __cpp_closure_10957798246104013533(const std::vector<unsigned char>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (cv_return_value_unsigned_char)(__cpp_closure_10957798246104013533_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline unsigned char __cpp_closure_15069241458837643450_impl(const std::vector<unsigned char>* const& vec, size_t const& index) {
#line 15197 "src/opencv/hub/types.rs"
                                                                                                              
            return (*vec)[index];
        
}
extern "C" {
void __cpp_closure_15069241458837643450(const std::vector<unsigned char>* const& vec, size_t const& index, void* __result) {
    ::new(__result) (unsigned char)(__cpp_closure_15069241458837643450_impl(vec, index));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_13354650520644699168_impl(std::vector<uchar>* const& vec, size_t const& index, uchar const& val) {
#line 15205 "src/opencv/hub/types.rs"
                                                                                                                                                     
            try {
                vec->at(index) = val;
                return { Error::Code::StsOk, NULL };
            } VEC_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_13354650520644699168(std::vector<uchar>* const& vec, size_t const& index, uchar const& val, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_13354650520644699168_impl(vec, index, val));
}
}
#line 246 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

extern "C" {
void __cpp_closure_15900390952518978096(std::vector<uchar>* const& vec, size_t const& index, uchar const& val) {
#line 15216 "src/opencv/hub/types.rs"
                                                                                       
            (*vec)[index] = val;
        
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_1199557107347195625_impl(std::vector<uchar>* const& me) {
#line 15233 "src/opencv/hub/types.rs"
                                                                                                                    
            try {
                return { Error::Code::StsOk, NULL, new _InputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_1199557107347195625(std::vector<uchar>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_1199557107347195625_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_16269938422188794276_impl(std::vector<uchar>* const& me) {
#line 15253 "src/opencv/hub/types.rs"
                                                                                                                    
            try {
                return { Error::Code::StsOk, NULL, new _OutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_16269938422188794276(std::vector<uchar>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_16269938422188794276_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void_X __cpp_closure_571162502909006350_impl(std::vector<uchar>* const& me) {
#line 15273 "src/opencv/hub/types.rs"
                                                                                                                    
            try {
                return { Error::Code::StsOk, NULL, new _InputOutputArray(*me) };
            } CVRS_CATCH(cv_return_value_void_X)
        
}
extern "C" {
void __cpp_closure_571162502909006350(std::vector<uchar>* const& me, void* __result) {
    ::new(__result) (cv_return_value_void_X)(__cpp_closure_571162502909006350_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_SizeWrapper __cpp_closure_4783089580828736585_impl(const cv::Mat* const& me) {
#line 361 "src/manual/core/mat.rs"
                                                                                                                   
            try {
                cv::Size ret = me->size();
                return { Error::Code::StsOk, NULL, *reinterpret_cast<SizeWrapper*>(&ret) };
            } CVRS_CATCH(cv_return_value_SizeWrapper)
        
}
extern "C" {
void __cpp_closure_4783089580828736585(const cv::Mat* const& me, void* __result) {
    ::new(__result) (cv_return_value_SizeWrapper)(__cpp_closure_4783089580828736585_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_16879280470320812282_impl(const cv::Mat* const& me) {
#line 371 "src/manual/core/mat.rs"
                                                                
            return me->data != NULL;
        
}
extern "C" {
void __cpp_closure_16879280470320812282(const cv::Mat* const& me, void* __result) {
    ::new(__result) (bool)(__cpp_closure_16879280470320812282_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_void __cpp_closure_14334612166453191995_impl(cv::Mat* const& me, cv::Scalar const& s) {
#line 382 "src/manual/core/mat.rs"
                                                                                                                  
            try {
                *me = s;
                return { Error::Code::StsOk, NULL };
            } CVRS_CATCH(cv_return_value_void)
        
}
extern "C" {
void __cpp_closure_14334612166453191995(cv::Mat* const& me, cv::Scalar const& s, void* __result) {
    ::new(__result) (cv_return_value_void)(__cpp_closure_14334612166453191995_impl(me, s));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_const_unsigned_char_X __cpp_closure_11450809558309983733_impl(const cv::Mat* const& me) {
#line 392 "src/manual/core/mat.rs"
                                                                                                                                       
            try {
                return { Error::Code::StsOk, NULL, me->data };
            } CVRS_CATCH(cv_return_value_const_unsigned_char_X)
        
}
extern "C" {
void __cpp_closure_11450809558309983733(const cv::Mat* const& me, void* __result) {
    ::new(__result) (cv_return_value_const_unsigned_char_X)(__cpp_closure_11450809558309983733_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_SizeWrapper __cpp_closure_9073289811546179039_impl(const cv::UMat* const& me) {
#line 515 "src/manual/core/mat.rs"
                                                                                                                    
            try {
                cv::Size ret = me->size();
                return { Error::Code::StsOk, NULL, *reinterpret_cast<SizeWrapper*>(&ret) };
            } CVRS_CATCH(cv_return_value_SizeWrapper)
        
}
extern "C" {
void __cpp_closure_9073289811546179039(const cv::UMat* const& me, void* __result) {
    ::new(__result) (cv_return_value_SizeWrapper)(__cpp_closure_9073289811546179039_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline const int __cpp_closure_3266162192642869096_impl(const MatSize* const& me) {
#line 571 "src/manual/core/mat.rs"
                                                                       
            return *(me->p - 1);
        
}
extern "C" {
void __cpp_closure_3266162192642869096(const MatSize* const& me, void* __result) {
    ::new(__result) (const int)(__cpp_closure_3266162192642869096_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline const int* __cpp_closure_4745874806522039116_impl(const MatSize* const& me) {
#line 582 "src/manual/core/mat.rs"
                                                                                
            return me->p;
        
}
extern "C" {
void __cpp_closure_4745874806522039116(const MatSize* const& me, void* __result) {
    ::new(__result) (const int*)(__cpp_closure_4745874806522039116_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline const size_t* __cpp_closure_10006807773349951923_impl(const MatStep* const& me) {
#line 600 "src/manual/core/mat.rs"
                                                                                      
            return me->p;
        
}
extern "C" {
void __cpp_closure_10006807773349951923(const MatStep* const& me, void* __result) {
    ::new(__result) (const size_t*)(__cpp_closure_10006807773349951923_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline int __cpp_closure_13766700964491288281_impl(const MatConstIterator* const& me) {
#line 622 "src/manual/core/mat.rs"
                                                                       
            return me->m->type();
        
}
extern "C" {
void __cpp_closure_13766700964491288281(const MatConstIterator* const& me, void* __result) {
    ::new(__result) (int)(__cpp_closure_13766700964491288281_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline bool __cpp_closure_10722979542502500384_impl(const MatConstIterator* const& me) {
#line 630 "src/manual/core/mat.rs"
                                                                         
            return me->ptr != me->sliceEnd;
        
}
extern "C" {
void __cpp_closure_10722979542502500384(const MatConstIterator* const& me, void* __result) {
    ::new(__result) (bool)(__cpp_closure_10722979542502500384_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline const uchar* __cpp_closure_521370466056887834_impl(const MatConstIterator* const& me) {
#line 647 "src/manual/core/mat.rs"
                                                                                    
            return me->ptr;
        
}
extern "C" {
void __cpp_closure_521370466056887834(const MatConstIterator* const& me, void* __result) {
    ::new(__result) (const uchar*)(__cpp_closure_521370466056887834_impl(me));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_double __cpp_closure_5406660396885533778_impl(const dnn::DictValue* const& me, int const& idx) {
#line 13 "src/manual/dnn.rs"
                                                                                                                              
            try {
                return { Error::Code::StsOk, NULL, me->get<double>(idx) };
            } CVRS_CATCH(cv_return_value_double)
        
}
extern "C" {
void __cpp_closure_5406660396885533778(const dnn::DictValue* const& me, int const& idx, void* __result) {
    ::new(__result) (cv_return_value_double)(__cpp_closure_5406660396885533778_impl(me, idx));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_int64 __cpp_closure_16742548704627009861_impl(const dnn::DictValue* const& me, int const& idx) {
#line 23 "src/manual/dnn.rs"
                                                                                                                            
            try {
                return { Error::Code::StsOk, NULL, me->get<int64>(idx) };
            } CVRS_CATCH(cv_return_value_int64)
        
}
extern "C" {
void __cpp_closure_16742548704627009861(const dnn::DictValue* const& me, int const& idx, void* __result) {
    ::new(__result) (cv_return_value_int64)(__cpp_closure_16742548704627009861_impl(me, idx));
}
}
#line 265 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"

static inline cv_return_value_char_X __cpp_closure_15041122553148099353_impl(const dnn::DictValue* const& me, int const& idx) {
#line 33 "src/manual/dnn.rs"
                                                                                                                              
            try {
                return { Error::Code::StsOk, NULL, strdup(me->get<String>(idx).c_str()) };
            } CVRS_CATCH(cv_return_value_char_X)
        
}
extern "C" {
void __cpp_closure_15041122553148099353(const dnn::DictValue* const& me, int const& idx, void* __result) {
    ::new(__result) (cv_return_value_char_X)(__cpp_closure_15041122553148099353_impl(me, idx));
}
}
#line 326 "/Users/ianlum/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.4/src/lib.rs"


namespace rustcpp {

template<typename T>
struct AlignOf {
    struct Inner {
        char a;
        T b;
    };
    static const uintptr_t value = sizeof(Inner) - sizeof(T);
};

template<typename T>
struct Flags {
    static const uintptr_t value =
        (std::is_copy_constructible<T>::value << 0) |
        (std::is_default_constructible<T>::value << 1) |
#if !defined(__GNUC__) || (__GNUC__ + 0 >= 5) || defined(__clang__)
        (std::is_trivially_destructible<T>::value << 2) |
        (std::is_trivially_copyable<T>::value << 3) |
        (std::is_trivially_default_constructible<T>::value << 4) |
#endif
        0;
};

struct SizeAlign {
    uint64_t hash;
    uint64_t size;
    uint64_t align;
    uint64_t flags;
};

struct MetaData {
    uint8_t magic[128];
    uint8_t version[16];
    uint64_t length;
    SizeAlign data[2650];
};

MetaData
#ifdef _WIN32
    __declspec (selectany)
#elif __GNUC__
    __attribute__((weak))
#endif
    metadata = {
    { 114, 117, 115, 116, 99, 112, 112, 126, 109, 101, 116, 97, 100, 97, 116, 97, 92, 74, 112, 213, 165, 185, 214, 120, 179, 17, 185, 25, 182, 253, 82, 118, 148, 29, 139, 208, 59, 153, 78, 137, 230, 54, 26, 177, 232, 121, 132, 166, 44, 106, 218, 57, 158, 33, 69, 32, 54, 204, 123, 226, 99, 117, 60, 173, 112, 61, 56, 174, 117, 141, 126, 249, 79, 159, 6, 119, 2, 129, 147, 66, 135, 136, 212, 252, 231, 105, 239, 91, 96, 232, 113, 94, 164, 255, 152, 144, 64, 207, 192, 90, 225, 171, 59, 154, 60, 2, 0, 191, 114, 182, 38, 134, 134, 183, 212, 227, 31, 217, 12, 5, 65, 221, 150, 59, 230, 96, 73, 62 },
    "0.5.4",
    2650,
    { {9807135835043904657ull, 0, 1, 0ull << 32}, {
                9807135835043904657ull,
                sizeof(Ptr<cv::AKAZE>*),
                rustcpp::AlignOf<Ptr<cv::AKAZE>*>::value,
                rustcpp::Flags<Ptr<cv::AKAZE>*>::value
            }, {
                16454064900438198650ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16454064900438198650ull,
                sizeof(cv::Ptr<cv::AKAZE>*),
                rustcpp::AlignOf<cv::Ptr<cv::AKAZE>*>::value,
                rustcpp::Flags<cv::Ptr<cv::AKAZE>*>::value
            }, {
                3376917103512685534ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3376917103512685534ull,
                sizeof(cv::Ptr<cv::Algorithm>*),
                rustcpp::AlignOf<cv::Ptr<cv::Algorithm>*>::value,
                rustcpp::Flags<cv::Ptr<cv::Algorithm>*>::value
            }, {
                9513500868794336285ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9513500868794336285ull,
                sizeof(cv::Ptr<cv::Feature2D>*),
                rustcpp::AlignOf<cv::Ptr<cv::Feature2D>*>::value,
                rustcpp::Flags<cv::Ptr<cv::Feature2D>*>::value
            }, {10284837212841116777ull, 0, 1, 0ull << 32}, {
                10284837212841116777ull,
                sizeof(Ptr<cv::ml::ANN_MLP>*),
                rustcpp::AlignOf<Ptr<cv::ml::ANN_MLP>*>::value,
                rustcpp::Flags<Ptr<cv::ml::ANN_MLP>*>::value
            }, {
                17443669151092803430ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                17443669151092803430ull,
                sizeof(cv::Ptr<cv::ml::ANN_MLP>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::ANN_MLP>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::ANN_MLP>*>::value
            }, {
                11963775357768202618ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11963775357768202618ull,
                sizeof(cv::Ptr<cv::ml::StatModel>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::StatModel>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::StatModel>*>::value
            }, {16811988349157225888ull, 0, 1, 0ull << 32}, {
                16811988349157225888ull,
                sizeof(Ptr<cv::dnn::AbsLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::AbsLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::AbsLayer>*>::value
            }, {16489992396853819645ull, 0, 1, 0ull << 32}, {
                16489992396853819645ull,
                sizeof(Ptr<cv::dnn::ActivationLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ActivationLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ActivationLayer>*>::value
            }, {
                14676194032732400547ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14676194032732400547ull,
                sizeof(cv::Ptr<cv::dnn::ActivationLayer>*),
                rustcpp::AlignOf<cv::Ptr<cv::dnn::ActivationLayer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::dnn::ActivationLayer>*>::value
            }, {
                14868388515153303827ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14868388515153303827ull,
                sizeof(cv::Ptr<cv::dnn::Layer>*),
                rustcpp::AlignOf<cv::Ptr<cv::dnn::Layer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::dnn::Layer>*>::value
            }, {3366240138574606371ull, 0, 1, 0ull << 32}, {
                3366240138574606371ull,
                sizeof(Ptr<cv::xfeatures2d::AffineFeature2D>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::AffineFeature2D>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::AffineFeature2D>*>::value
            }, {
                3092795778535571570ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3092795778535571570ull,
                sizeof(cv::Ptr<cv::xfeatures2d::AffineFeature2D>*),
                rustcpp::AlignOf<cv::Ptr<cv::xfeatures2d::AffineFeature2D>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xfeatures2d::AffineFeature2D>*>::value
            }, {18342467862633862957ull, 0, 1, 0ull << 32}, {
                18342467862633862957ull,
                sizeof(Ptr<cv::AffineTransformer>*),
                rustcpp::AlignOf<Ptr<cv::AffineTransformer>*>::value,
                rustcpp::Flags<Ptr<cv::AffineTransformer>*>::value
            }, {
                5511267017033849999ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                5511267017033849999ull,
                sizeof(cv::Ptr<cv::AffineTransformer>*),
                rustcpp::AlignOf<cv::Ptr<cv::AffineTransformer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::AffineTransformer>*>::value
            }, {
                1284239448781233148ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1284239448781233148ull,
                sizeof(cv::Ptr<cv::ShapeTransformer>*),
                rustcpp::AlignOf<cv::Ptr<cv::ShapeTransformer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ShapeTransformer>*>::value
            }, {14125615602265827950ull, 0, 1, 0ull << 32}, {
                14125615602265827950ull,
                sizeof(Ptr<cv::AgastFeatureDetector>*),
                rustcpp::AlignOf<Ptr<cv::AgastFeatureDetector>*>::value,
                rustcpp::Flags<Ptr<cv::AgastFeatureDetector>*>::value
            }, {
                9369788081664874238ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9369788081664874238ull,
                sizeof(cv::Ptr<cv::AgastFeatureDetector>*),
                rustcpp::AlignOf<cv::Ptr<cv::AgastFeatureDetector>*>::value,
                rustcpp::Flags<cv::Ptr<cv::AgastFeatureDetector>*>::value
            }, {7045595508298671278ull, 0, 1, 0ull << 32}, {
                7045595508298671278ull,
                sizeof(Ptr<cv::AlignMTB>*),
                rustcpp::AlignOf<Ptr<cv::AlignMTB>*>::value,
                rustcpp::Flags<Ptr<cv::AlignMTB>*>::value
            }, {
                4650491127679299308ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                4650491127679299308ull,
                sizeof(cv::Ptr<cv::AlignExposures>*),
                rustcpp::AlignOf<cv::Ptr<cv::AlignExposures>*>::value,
                rustcpp::Flags<cv::Ptr<cv::AlignExposures>*>::value
            }, {
                12588941391952929537ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12588941391952929537ull,
                sizeof(cv::Ptr<cv::AlignMTB>*),
                rustcpp::AlignOf<cv::Ptr<cv::AlignMTB>*>::value,
                rustcpp::Flags<cv::Ptr<cv::AlignMTB>*>::value
            }, {1543033383346634583ull, 0, 1, 0ull << 32}, {
                1543033383346634583ull,
                sizeof(Ptr<cv::img_hash::AverageHash>*),
                rustcpp::AlignOf<Ptr<cv::img_hash::AverageHash>*>::value,
                rustcpp::Flags<Ptr<cv::img_hash::AverageHash>*>::value
            }, {14416048477817568123ull, 0, 1, 0ull << 32}, {
                14416048477817568123ull,
                sizeof(Ptr<cv::BFMatcher>*),
                rustcpp::AlignOf<Ptr<cv::BFMatcher>*>::value,
                rustcpp::Flags<Ptr<cv::BFMatcher>*>::value
            }, {4293957868168666564ull, 0, 1, 0ull << 32}, {
                4293957868168666564ull,
                sizeof(Ptr<cv::dnn::BNLLLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::BNLLLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::BNLLLayer>*>::value
            }, {4228649784178912015ull, 0, 1, 0ull << 32}, {
                4228649784178912015ull,
                sizeof(Ptr<cv::BRISK>*),
                rustcpp::AlignOf<Ptr<cv::BRISK>*>::value,
                rustcpp::Flags<Ptr<cv::BRISK>*>::value
            }, {12532978743003785526ull, 0, 1, 0ull << 32}, {
                12532978743003785526ull,
                sizeof(Ptr<cv::dnn::BackendNode>*),
                rustcpp::AlignOf<Ptr<cv::dnn::BackendNode>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::BackendNode>*>::value
            }, {16591784146531144562ull, 0, 1, 0ull << 32}, {
                16591784146531144562ull,
                sizeof(Ptr<cv::dnn::BackendWrapper>*),
                rustcpp::AlignOf<Ptr<cv::dnn::BackendWrapper>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::BackendWrapper>*>::value
            }, {
                2075048322786229265ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                2075048322786229265ull,
                sizeof(cv::Ptr<cv::dnn::BackendWrapper>*),
                rustcpp::AlignOf<cv::Ptr<cv::dnn::BackendWrapper>*>::value,
                rustcpp::Flags<cv::Ptr<cv::dnn::BackendWrapper>*>::value
            }, {10603400295610324010ull, 0, 1, 0ull << 32}, {
                10603400295610324010ull,
                sizeof(Ptr<cv::bgsegm::BackgroundSubtractorCNT>*),
                rustcpp::AlignOf<Ptr<cv::bgsegm::BackgroundSubtractorCNT>*>::value,
                rustcpp::Flags<Ptr<cv::bgsegm::BackgroundSubtractorCNT>*>::value
            }, {
                2050427191734240398ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                2050427191734240398ull,
                sizeof(cv::Ptr<cv::bgsegm::BackgroundSubtractorCNT>*),
                rustcpp::AlignOf<cv::Ptr<cv::bgsegm::BackgroundSubtractorCNT>*>::value,
                rustcpp::Flags<cv::Ptr<cv::bgsegm::BackgroundSubtractorCNT>*>::value
            }, {1463098344417728280ull, 0, 1, 0ull << 32}, {
                1463098344417728280ull,
                sizeof(Ptr<cv::bgsegm::BackgroundSubtractorGMG>*),
                rustcpp::AlignOf<Ptr<cv::bgsegm::BackgroundSubtractorGMG>*>::value,
                rustcpp::Flags<Ptr<cv::bgsegm::BackgroundSubtractorGMG>*>::value
            }, {
                5933273850473935435ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                5933273850473935435ull,
                sizeof(cv::Ptr<cv::bgsegm::BackgroundSubtractorGMG>*),
                rustcpp::AlignOf<cv::Ptr<cv::bgsegm::BackgroundSubtractorGMG>*>::value,
                rustcpp::Flags<cv::Ptr<cv::bgsegm::BackgroundSubtractorGMG>*>::value
            }, {8437012461300310879ull, 0, 1, 0ull << 32}, {
                8437012461300310879ull,
                sizeof(Ptr<cv::bgsegm::BackgroundSubtractorGSOC>*),
                rustcpp::AlignOf<Ptr<cv::bgsegm::BackgroundSubtractorGSOC>*>::value,
                rustcpp::Flags<Ptr<cv::bgsegm::BackgroundSubtractorGSOC>*>::value
            }, {6788468514983912977ull, 0, 1, 0ull << 32}, {
                6788468514983912977ull,
                sizeof(Ptr<cv::BackgroundSubtractorKNN>*),
                rustcpp::AlignOf<Ptr<cv::BackgroundSubtractorKNN>*>::value,
                rustcpp::Flags<Ptr<cv::BackgroundSubtractorKNN>*>::value
            }, {
                848206346270670123ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                848206346270670123ull,
                sizeof(cv::Ptr<cv::BackgroundSubtractor>*),
                rustcpp::AlignOf<cv::Ptr<cv::BackgroundSubtractor>*>::value,
                rustcpp::Flags<cv::Ptr<cv::BackgroundSubtractor>*>::value
            }, {
                10086887530630251358ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                10086887530630251358ull,
                sizeof(cv::Ptr<cv::BackgroundSubtractorKNN>*),
                rustcpp::AlignOf<cv::Ptr<cv::BackgroundSubtractorKNN>*>::value,
                rustcpp::Flags<cv::Ptr<cv::BackgroundSubtractorKNN>*>::value
            }, {15078683086943225257ull, 0, 1, 0ull << 32}, {
                15078683086943225257ull,
                sizeof(Ptr<cv::bgsegm::BackgroundSubtractorLSBP>*),
                rustcpp::AlignOf<Ptr<cv::bgsegm::BackgroundSubtractorLSBP>*>::value,
                rustcpp::Flags<Ptr<cv::bgsegm::BackgroundSubtractorLSBP>*>::value
            }, {646522027994128855ull, 0, 1, 0ull << 32}, {
                646522027994128855ull,
                sizeof(Ptr<cv::bgsegm::BackgroundSubtractorMOG>*),
                rustcpp::AlignOf<Ptr<cv::bgsegm::BackgroundSubtractorMOG>*>::value,
                rustcpp::Flags<Ptr<cv::bgsegm::BackgroundSubtractorMOG>*>::value
            }, {
                14215879216818690466ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14215879216818690466ull,
                sizeof(cv::Ptr<cv::bgsegm::BackgroundSubtractorMOG>*),
                rustcpp::AlignOf<cv::Ptr<cv::bgsegm::BackgroundSubtractorMOG>*>::value,
                rustcpp::Flags<cv::Ptr<cv::bgsegm::BackgroundSubtractorMOG>*>::value
            }, {7838883806697164729ull, 0, 1, 0ull << 32}, {
                7838883806697164729ull,
                sizeof(Ptr<cv::BackgroundSubtractorMOG2>*),
                rustcpp::AlignOf<Ptr<cv::BackgroundSubtractorMOG2>*>::value,
                rustcpp::Flags<Ptr<cv::BackgroundSubtractorMOG2>*>::value
            }, {
                5806742838044442948ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                5806742838044442948ull,
                sizeof(cv::Ptr<cv::BackgroundSubtractorMOG2>*),
                rustcpp::AlignOf<cv::Ptr<cv::BackgroundSubtractorMOG2>*>::value,
                rustcpp::Flags<cv::Ptr<cv::BackgroundSubtractorMOG2>*>::value
            }, {8717824783334214367ull, 0, 1, 0ull << 32}, {
                8717824783334214367ull,
                sizeof(Ptr<cv::dnn::BaseConvolutionLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::BaseConvolutionLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::BaseConvolutionLayer>*>::value
            }, {
                4956957443879093068ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                4956957443879093068ull,
                sizeof(cv::Ptr<cv::dnn::BaseConvolutionLayer>*),
                rustcpp::AlignOf<cv::Ptr<cv::dnn::BaseConvolutionLayer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::dnn::BaseConvolutionLayer>*>::value
            }, {13012256406258165110ull, 0, 1, 0ull << 32}, {
                13012256406258165110ull,
                sizeof(Ptr<cv::dnn::BatchNormLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::BatchNormLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::BatchNormLayer>*>::value
            }, {13930744764063686775ull, 0, 1, 0ull << 32}, {
                13930744764063686775ull,
                sizeof(Ptr<cv::line_descriptor::BinaryDescriptor>*),
                rustcpp::AlignOf<Ptr<cv::line_descriptor::BinaryDescriptor>*>::value,
                rustcpp::Flags<Ptr<cv::line_descriptor::BinaryDescriptor>*>::value
            }, {13485900154834644057ull, 0, 1, 0ull << 32}, {
                13485900154834644057ull,
                sizeof(Ptr<cv::line_descriptor::BinaryDescriptorMatcher>*),
                rustcpp::AlignOf<Ptr<cv::line_descriptor::BinaryDescriptorMatcher>*>::value,
                rustcpp::Flags<Ptr<cv::line_descriptor::BinaryDescriptorMatcher>*>::value
            }, {16351496603725601421ull, 0, 1, 0ull << 32}, {
                16351496603725601421ull,
                sizeof(Ptr<cv::img_hash::BlockMeanHash>*),
                rustcpp::AlignOf<Ptr<cv::img_hash::BlockMeanHash>*>::value,
                rustcpp::Flags<Ptr<cv::img_hash::BlockMeanHash>*>::value
            }, {16726784135925458194ull, 0, 1, 0ull << 32}, {
                16726784135925458194ull,
                sizeof(Ptr<cv::aruco::Board>*),
                rustcpp::AlignOf<Ptr<cv::aruco::Board>*>::value,
                rustcpp::Flags<Ptr<cv::aruco::Board>*>::value
            }, {
                9601957938915154375ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9601957938915154375ull,
                sizeof(cv::Ptr<cv::aruco::Board>*),
                rustcpp::AlignOf<cv::Ptr<cv::aruco::Board>*>::value,
                rustcpp::Flags<cv::Ptr<cv::aruco::Board>*>::value
            }, {9014197072775018538ull, 0, 1, 0ull << 32}, {
                9014197072775018538ull,
                sizeof(Ptr<cv::ml::Boost>*),
                rustcpp::AlignOf<Ptr<cv::ml::Boost>*>::value,
                rustcpp::Flags<Ptr<cv::ml::Boost>*>::value
            }, {
                7134163245275726417ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                7134163245275726417ull,
                sizeof(cv::Ptr<cv::ml::Boost>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::Boost>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::Boost>*>::value
            }, {
                5071434219656396027ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                5071434219656396027ull,
                sizeof(cv::Ptr<cv::ml::DTrees>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::DTrees>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::DTrees>*>::value
            }, {17315054814873549244ull, 0, 1, 0ull << 32}, {
                17315054814873549244ull,
                sizeof(Ptr<cv::xfeatures2d::BoostDesc>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::BoostDesc>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::BoostDesc>*>::value
            }, {
                10835523475753682116ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                10835523475753682116ull,
                sizeof(cv::Ptr<cv::xfeatures2d::BoostDesc>*),
                rustcpp::AlignOf<cv::Ptr<cv::xfeatures2d::BoostDesc>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xfeatures2d::BoostDesc>*>::value
            }, {11959862157579248462ull, 0, 1, 0ull << 32}, {
                11959862157579248462ull,
                sizeof(Ptr<cv::xfeatures2d::BriefDescriptorExtractor>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::BriefDescriptorExtractor>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::BriefDescriptorExtractor>*>::value
            }, {14566177014746565504ull, 0, 1, 0ull << 32}, {
                14566177014746565504ull,
                sizeof(Ptr<cv::CLAHE>*),
                rustcpp::AlignOf<Ptr<cv::CLAHE>*>::value,
                rustcpp::Flags<Ptr<cv::CLAHE>*>::value
            }, {
                7852777603034946679ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                7852777603034946679ull,
                sizeof(cv::Ptr<cv::CLAHE>*),
                rustcpp::AlignOf<cv::Ptr<cv::CLAHE>*>::value,
                rustcpp::Flags<cv::Ptr<cv::CLAHE>*>::value
            }, {17361725195240803070ull, 0, 1, 0ull << 32}, {
                17361725195240803070ull,
                sizeof(Ptr<cv::CalibrateDebevec>*),
                rustcpp::AlignOf<Ptr<cv::CalibrateDebevec>*>::value,
                rustcpp::Flags<Ptr<cv::CalibrateDebevec>*>::value
            }, {
                111479494351288106ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                111479494351288106ull,
                sizeof(cv::Ptr<cv::CalibrateCRF>*),
                rustcpp::AlignOf<cv::Ptr<cv::CalibrateCRF>*>::value,
                rustcpp::Flags<cv::Ptr<cv::CalibrateCRF>*>::value
            }, {
                15995202137495465797ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15995202137495465797ull,
                sizeof(cv::Ptr<cv::CalibrateDebevec>*),
                rustcpp::AlignOf<cv::Ptr<cv::CalibrateDebevec>*>::value,
                rustcpp::Flags<cv::Ptr<cv::CalibrateDebevec>*>::value
            }, {11896892673579509051ull, 0, 1, 0ull << 32}, {
                11896892673579509051ull,
                sizeof(Ptr<cv::CalibrateRobertson>*),
                rustcpp::AlignOf<Ptr<cv::CalibrateRobertson>*>::value,
                rustcpp::Flags<Ptr<cv::CalibrateRobertson>*>::value
            }, {
                14990064460016258682ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14990064460016258682ull,
                sizeof(cv::Ptr<cv::CalibrateRobertson>*),
                rustcpp::AlignOf<cv::Ptr<cv::CalibrateRobertson>*>::value,
                rustcpp::Flags<cv::Ptr<cv::CalibrateRobertson>*>::value
            }, {17080185157781260270ull, 0, 1, 0ull << 32}, {
                17080185157781260270ull,
                sizeof(Ptr<cv::LMSolver::Callback>*),
                rustcpp::AlignOf<Ptr<cv::LMSolver::Callback>*>::value,
                rustcpp::Flags<Ptr<cv::LMSolver::Callback>*>::value
            }, {
                16167358790253032223ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16167358790253032223ull,
                sizeof(cv::Ptr<cv::LMSolver::Callback>*),
                rustcpp::AlignOf<cv::Ptr<cv::LMSolver::Callback>*>::value,
                rustcpp::Flags<cv::Ptr<cv::LMSolver::Callback>*>::value
            }, {5260750722674350680ull, 0, 1, 0ull << 32}, {
                5260750722674350680ull,
                sizeof(Ptr<cv::aruco::CharucoBoard>*),
                rustcpp::AlignOf<Ptr<cv::aruco::CharucoBoard>*>::value,
                rustcpp::Flags<Ptr<cv::aruco::CharucoBoard>*>::value
            }, {708700911227832861ull, 0, 1, 0ull << 32}, {
                708700911227832861ull,
                sizeof(Ptr<cv::img_hash::ColorMomentHash>*),
                rustcpp::AlignOf<Ptr<cv::img_hash::ColorMomentHash>*>::value,
                rustcpp::Flags<Ptr<cv::img_hash::ColorMomentHash>*>::value
            }, {1456924569743261443ull, 0, 1, 0ull << 32}, {
                1456924569743261443ull,
                sizeof(Ptr<cv::dnn::ConcatLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ConcatLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ConcatLayer>*>::value
            }, {18389673630908919517ull, 0, 1, 0ull << 32}, {
                18389673630908919517ull,
                sizeof(Ptr<cv::ConjGradSolver>*),
                rustcpp::AlignOf<Ptr<cv::ConjGradSolver>*>::value,
                rustcpp::Flags<Ptr<cv::ConjGradSolver>*>::value
            }, {11459570283899766502ull, 0, 1, 0ull << 32}, {
                11459570283899766502ull,
                sizeof(Ptr<cv::xfeatures2d::DAISY>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::DAISY>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::DAISY>*>::value
            }, {
                3026078291209560761ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3026078291209560761ull,
                sizeof(cv::Ptr<cv::xfeatures2d::DAISY>*),
                rustcpp::AlignOf<cv::Ptr<cv::xfeatures2d::DAISY>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xfeatures2d::DAISY>*>::value
            }, {12704745601201063092ull, 0, 1, 0ull << 32}, {
                12704745601201063092ull,
                sizeof(Ptr<cv::DISOpticalFlow>*),
                rustcpp::AlignOf<Ptr<cv::DISOpticalFlow>*>::value,
                rustcpp::Flags<Ptr<cv::DISOpticalFlow>*>::value
            }, {
                13678305679052972487ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13678305679052972487ull,
                sizeof(cv::Ptr<cv::DISOpticalFlow>*),
                rustcpp::AlignOf<cv::Ptr<cv::DISOpticalFlow>*>::value,
                rustcpp::Flags<cv::Ptr<cv::DISOpticalFlow>*>::value
            }, {
                10913314667101694061ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                10913314667101694061ull,
                sizeof(cv::Ptr<cv::DenseOpticalFlow>*),
                rustcpp::AlignOf<cv::Ptr<cv::DenseOpticalFlow>*>::value,
                rustcpp::Flags<cv::Ptr<cv::DenseOpticalFlow>*>::value
            }, {17037799757485092612ull, 0, 1, 0ull << 32}, {
                17037799757485092612ull,
                sizeof(Ptr<cv::ml::DTrees>*),
                rustcpp::AlignOf<Ptr<cv::ml::DTrees>*>::value,
                rustcpp::Flags<Ptr<cv::ml::DTrees>*>::value
            }, {4038971355852386368ull, 0, 1, 0ull << 32}, {
                4038971355852386368ull,
                sizeof(Ptr<cv::videostab::DeblurerBase>*),
                rustcpp::AlignOf<Ptr<cv::videostab::DeblurerBase>*>::value,
                rustcpp::Flags<Ptr<cv::videostab::DeblurerBase>*>::value
            }, {
                11426881203793370532ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11426881203793370532ull,
                sizeof(cv::Ptr<cv::videostab::DeblurerBase>*),
                rustcpp::AlignOf<cv::Ptr<cv::videostab::DeblurerBase>*>::value,
                rustcpp::Flags<cv::Ptr<cv::videostab::DeblurerBase>*>::value
            }, {12648739659550556057ull, 0, 1, 0ull << 32}, {
                12648739659550556057ull,
                sizeof(Ptr<cv::DescriptorMatcher>*),
                rustcpp::AlignOf<Ptr<cv::DescriptorMatcher>*>::value,
                rustcpp::Flags<Ptr<cv::DescriptorMatcher>*>::value
            }, {
                15657197567174628329ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15657197567174628329ull,
                sizeof(cv::Ptr<cv::DescriptorMatcher>*),
                rustcpp::AlignOf<cv::Ptr<cv::DescriptorMatcher>*>::value,
                rustcpp::Flags<cv::Ptr<cv::DescriptorMatcher>*>::value
            }, {1512837650214014377ull, 0, 1, 0ull << 32}, {
                1512837650214014377ull,
                sizeof(Ptr<cv::dnn::DetectionOutputLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::DetectionOutputLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::DetectionOutputLayer>*>::value
            }, {917280752245236036ull, 0, 1, 0ull << 32}, {
                917280752245236036ull,
                sizeof(Ptr<cv::aruco::DetectorParameters>*),
                rustcpp::AlignOf<Ptr<cv::aruco::DetectorParameters>*>::value,
                rustcpp::Flags<Ptr<cv::aruco::DetectorParameters>*>::value
            }, {15865281641909424876ull, 0, 1, 0ull << 32}, {
                15865281641909424876ull,
                sizeof(Ptr<cv::aruco::Dictionary>*),
                rustcpp::AlignOf<Ptr<cv::aruco::Dictionary>*>::value,
                rustcpp::Flags<Ptr<cv::aruco::Dictionary>*>::value
            }, {1803507780298305868ull, 0, 1, 0ull << 32}, {
                1803507780298305868ull,
                sizeof(Ptr<cv::DownhillSolver>*),
                rustcpp::AlignOf<Ptr<cv::DownhillSolver>*>::value,
                rustcpp::Flags<Ptr<cv::DownhillSolver>*>::value
            }, {
                7238598112189246965ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                7238598112189246965ull,
                sizeof(cv::Ptr<cv::DownhillSolver>*),
                rustcpp::AlignOf<cv::Ptr<cv::DownhillSolver>*>::value,
                rustcpp::Flags<cv::Ptr<cv::DownhillSolver>*>::value
            }, {
                11558937410409068832ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11558937410409068832ull,
                sizeof(cv::Ptr<cv::MinProblemSolver>*),
                rustcpp::AlignOf<cv::Ptr<cv::MinProblemSolver>*>::value,
                rustcpp::Flags<cv::Ptr<cv::MinProblemSolver>*>::value
            }, {1194584806435165400ull, 0, 1, 0ull << 32}, {
                1194584806435165400ull,
                sizeof(Ptr<cv::dnn::ELULayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ELULayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ELULayer>*>::value
            }, {1932817228206934892ull, 0, 1, 0ull << 32}, {
                1932817228206934892ull,
                sizeof(Ptr<cv::ml::EM>*),
                rustcpp::AlignOf<Ptr<cv::ml::EM>*>::value,
                rustcpp::Flags<Ptr<cv::ml::EM>*>::value
            }, {
                5827495019965121130ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                5827495019965121130ull,
                sizeof(cv::Ptr<cv::ml::EM>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::EM>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::EM>*>::value
            }, {10580763766230926777ull, 0, 1, 0ull << 32}, {
                10580763766230926777ull,
                sizeof(Ptr<cv::dnn::EltwiseLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::EltwiseLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::EltwiseLayer>*>::value
            }, {17652912444344820493ull, 0, 1, 0ull << 32}, {
                17652912444344820493ull,
                sizeof(Ptr<cv::xfeatures2d::FREAK>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::FREAK>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::FREAK>*>::value
            }, {12905903205074140578ull, 0, 1, 0ull << 32}, {
                12905903205074140578ull,
                sizeof(Ptr<cv::FarnebackOpticalFlow>*),
                rustcpp::AlignOf<Ptr<cv::FarnebackOpticalFlow>*>::value,
                rustcpp::Flags<Ptr<cv::FarnebackOpticalFlow>*>::value
            }, {
                10254981884414891658ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                10254981884414891658ull,
                sizeof(cv::Ptr<cv::FarnebackOpticalFlow>*),
                rustcpp::AlignOf<cv::Ptr<cv::FarnebackOpticalFlow>*>::value,
                rustcpp::Flags<cv::Ptr<cv::FarnebackOpticalFlow>*>::value
            }, {4994600514380875859ull, 0, 1, 0ull << 32}, {
                4994600514380875859ull,
                sizeof(Ptr<cv::FastFeatureDetector>*),
                rustcpp::AlignOf<Ptr<cv::FastFeatureDetector>*>::value,
                rustcpp::Flags<Ptr<cv::FastFeatureDetector>*>::value
            }, {
                1701476710353979550ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1701476710353979550ull,
                sizeof(cv::Ptr<cv::FastFeatureDetector>*),
                rustcpp::AlignOf<cv::Ptr<cv::FastFeatureDetector>*>::value,
                rustcpp::Flags<cv::Ptr<cv::FastFeatureDetector>*>::value
            }, {12945237782997784387ull, 0, 1, 0ull << 32}, {
                12945237782997784387ull,
                sizeof(Ptr<cv::Feature2D>*),
                rustcpp::AlignOf<Ptr<cv::Feature2D>*>::value,
                rustcpp::Flags<Ptr<cv::Feature2D>*>::value
            }, {8527303846788533519ull, 0, 1, 0ull << 32}, {
                8527303846788533519ull,
                sizeof(Ptr<cv::FileStorage>*),
                rustcpp::AlignOf<Ptr<cv::FileStorage>*>::value,
                rustcpp::Flags<Ptr<cv::FileStorage>*>::value
            }, {9358353970515498209ull, 0, 1, 0ull << 32}, {
                9358353970515498209ull,
                sizeof(Ptr<cv::FlannBasedMatcher>*),
                rustcpp::AlignOf<Ptr<cv::FlannBasedMatcher>*>::value,
                rustcpp::Flags<Ptr<cv::FlannBasedMatcher>*>::value
            }, {10568076079019357740ull, 0, 1, 0ull << 32}, {
                10568076079019357740ull,
                sizeof(Ptr<cv::dnn::FlattenLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::FlattenLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::FlattenLayer>*>::value
            }, {2779772228196529343ull, 0, 1, 0ull << 32}, {
                2779772228196529343ull,
                sizeof(Ptr<cv::Formatted>*),
                rustcpp::AlignOf<Ptr<cv::Formatted>*>::value,
                rustcpp::Flags<Ptr<cv::Formatted>*>::value
            }, {
                1187805095696925115ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1187805095696925115ull,
                sizeof(cv::Ptr<cv::Formatted>*),
                rustcpp::AlignOf<cv::Ptr<cv::Formatted>*>::value,
                rustcpp::Flags<cv::Ptr<cv::Formatted>*>::value
            }, {6974318899053638844ull, 0, 1, 0ull << 32}, {
                6974318899053638844ull,
                sizeof(Ptr<cv::Formatter>*),
                rustcpp::AlignOf<Ptr<cv::Formatter>*>::value,
                rustcpp::Flags<Ptr<cv::Formatter>*>::value
            }, {
                4363025779663942226ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                4363025779663942226ull,
                sizeof(cv::Ptr<cv::Formatter>*),
                rustcpp::AlignOf<cv::Ptr<cv::Formatter>*>::value,
                rustcpp::Flags<cv::Ptr<cv::Formatter>*>::value
            }, {5534920100499391335ull, 0, 1, 0ull << 32}, {
                5534920100499391335ull,
                sizeof(Ptr<cv::superres::FrameSource>*),
                rustcpp::AlignOf<Ptr<cv::superres::FrameSource>*>::value,
                rustcpp::Flags<Ptr<cv::superres::FrameSource>*>::value
            }, {
                16347695555636434857ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16347695555636434857ull,
                sizeof(cv::Ptr<cv::superres::FrameSource>*),
                rustcpp::AlignOf<cv::Ptr<cv::superres::FrameSource>*>::value,
                rustcpp::Flags<cv::Ptr<cv::superres::FrameSource>*>::value
            }, {7313954701530667486ull, 0, 1, 0ull << 32}, {
                7313954701530667486ull,
                sizeof(Ptr<cv::freetype::FreeType2>*),
                rustcpp::AlignOf<Ptr<cv::freetype::FreeType2>*>::value,
                rustcpp::Flags<Ptr<cv::freetype::FreeType2>*>::value
            }, {
                16786750653085655820ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16786750653085655820ull,
                sizeof(cv::Ptr<cv::freetype::FreeType2>*),
                rustcpp::AlignOf<cv::Ptr<cv::freetype::FreeType2>*>::value,
                rustcpp::Flags<cv::Ptr<cv::freetype::FreeType2>*>::value
            }, {4859817104263064919ull, 0, 1, 0ull << 32}, {
                4859817104263064919ull,
                sizeof(Ptr<cv::MinProblemSolver::Function>*),
                rustcpp::AlignOf<Ptr<cv::MinProblemSolver::Function>*>::value,
                rustcpp::Flags<Ptr<cv::MinProblemSolver::Function>*>::value
            }, {
                6575744793744336839ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                6575744793744336839ull,
                sizeof(cv::Ptr<cv::MinProblemSolver::Function>*),
                rustcpp::AlignOf<cv::Ptr<cv::MinProblemSolver::Function>*>::value,
                rustcpp::Flags<cv::Ptr<cv::MinProblemSolver::Function>*>::value
            }, {2687659788960907383ull, 0, 1, 0ull << 32}, {
                2687659788960907383ull,
                sizeof(Ptr<cv::GFTTDetector>*),
                rustcpp::AlignOf<Ptr<cv::GFTTDetector>*>::value,
                rustcpp::Flags<Ptr<cv::GFTTDetector>*>::value
            }, {
                16670120514955206924ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16670120514955206924ull,
                sizeof(cv::Ptr<cv::GFTTDetector>*),
                rustcpp::AlignOf<cv::Ptr<cv::GFTTDetector>*>::value,
                rustcpp::Flags<cv::Ptr<cv::GFTTDetector>*>::value
            }, {14501572238806016697ull, 0, 1, 0ull << 32}, {
                14501572238806016697ull,
                sizeof(Ptr<cv::GeneralizedHoughBallard>*),
                rustcpp::AlignOf<Ptr<cv::GeneralizedHoughBallard>*>::value,
                rustcpp::Flags<Ptr<cv::GeneralizedHoughBallard>*>::value
            }, {
                47499928488781705ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                47499928488781705ull,
                sizeof(cv::Ptr<cv::GeneralizedHough>*),
                rustcpp::AlignOf<cv::Ptr<cv::GeneralizedHough>*>::value,
                rustcpp::Flags<cv::Ptr<cv::GeneralizedHough>*>::value
            }, {
                18259325500962736677ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                18259325500962736677ull,
                sizeof(cv::Ptr<cv::GeneralizedHoughBallard>*),
                rustcpp::AlignOf<cv::Ptr<cv::GeneralizedHoughBallard>*>::value,
                rustcpp::Flags<cv::Ptr<cv::GeneralizedHoughBallard>*>::value
            }, {8766360211800019497ull, 0, 1, 0ull << 32}, {
                8766360211800019497ull,
                sizeof(Ptr<cv::GeneralizedHoughGuil>*),
                rustcpp::AlignOf<Ptr<cv::GeneralizedHoughGuil>*>::value,
                rustcpp::Flags<Ptr<cv::GeneralizedHoughGuil>*>::value
            }, {
                14541910598181036309ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14541910598181036309ull,
                sizeof(cv::Ptr<cv::GeneralizedHoughGuil>*),
                rustcpp::AlignOf<cv::Ptr<cv::GeneralizedHoughGuil>*>::value,
                rustcpp::Flags<cv::Ptr<cv::GeneralizedHoughGuil>*>::value
            }, {1859567857402064665ull, 0, 1, 0ull << 32}, {
                1859567857402064665ull,
                sizeof(Ptr<cv::structured_light::GrayCodePattern>*),
                rustcpp::AlignOf<Ptr<cv::structured_light::GrayCodePattern>*>::value,
                rustcpp::Flags<Ptr<cv::structured_light::GrayCodePattern>*>::value
            }, {
                6467726163601840928ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                6467726163601840928ull,
                sizeof(cv::Ptr<cv::structured_light::GrayCodePattern>*),
                rustcpp::AlignOf<cv::Ptr<cv::structured_light::GrayCodePattern>*>::value,
                rustcpp::Flags<cv::Ptr<cv::structured_light::GrayCodePattern>*>::value
            }, {
                9130416839771370419ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9130416839771370419ull,
                sizeof(cv::Ptr<cv::structured_light::StructuredLightPattern>*),
                rustcpp::AlignOf<cv::Ptr<cv::structured_light::StructuredLightPattern>*>::value,
                rustcpp::Flags<cv::Ptr<cv::structured_light::StructuredLightPattern>*>::value
            }, {5638078283461906005ull, 0, 1, 0ull << 32}, {
                5638078283461906005ull,
                sizeof(Ptr<cv::xphoto::GrayworldWB>*),
                rustcpp::AlignOf<Ptr<cv::xphoto::GrayworldWB>*>::value,
                rustcpp::Flags<Ptr<cv::xphoto::GrayworldWB>*>::value
            }, {
                18444813753570817619ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                18444813753570817619ull,
                sizeof(cv::Ptr<cv::xphoto::GrayworldWB>*),
                rustcpp::AlignOf<cv::Ptr<cv::xphoto::GrayworldWB>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xphoto::GrayworldWB>*>::value
            }, {
                16845646395359195684ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16845646395359195684ull,
                sizeof(cv::Ptr<cv::xphoto::WhiteBalancer>*),
                rustcpp::AlignOf<cv::Ptr<cv::xphoto::WhiteBalancer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xphoto::WhiteBalancer>*>::value
            }, {7205755423865247123ull, 0, 1, 0ull << 32}, {
                7205755423865247123ull,
                sizeof(Ptr<cv::aruco::GridBoard>*),
                rustcpp::AlignOf<Ptr<cv::aruco::GridBoard>*>::value,
                rustcpp::Flags<Ptr<cv::aruco::GridBoard>*>::value
            }, {6187548737082091375ull, 0, 1, 0ull << 32}, {
                6187548737082091375ull,
                sizeof(Ptr<cv::hdf::HDF5>*),
                rustcpp::AlignOf<Ptr<cv::hdf::HDF5>*>::value,
                rustcpp::Flags<Ptr<cv::hdf::HDF5>*>::value
            }, {
                4940119900363673307ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                4940119900363673307ull,
                sizeof(cv::Ptr<cv::hdf::HDF5>*),
                rustcpp::AlignOf<cv::Ptr<cv::hdf::HDF5>*>::value,
                rustcpp::Flags<cv::Ptr<cv::hdf::HDF5>*>::value
            }, {8942793532951586774ull, 0, 1, 0ull << 32}, {
                8942793532951586774ull,
                sizeof(Ptr<cv::xfeatures2d::HarrisLaplaceFeatureDetector>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::HarrisLaplaceFeatureDetector>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::HarrisLaplaceFeatureDetector>*>::value
            }, {17424072278128639222ull, 0, 1, 0ull << 32}, {
                17424072278128639222ull,
                sizeof(Ptr<cv::HausdorffDistanceExtractor>*),
                rustcpp::AlignOf<Ptr<cv::HausdorffDistanceExtractor>*>::value,
                rustcpp::Flags<Ptr<cv::HausdorffDistanceExtractor>*>::value
            }, {
                15360530466563111170ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15360530466563111170ull,
                sizeof(cv::Ptr<cv::HausdorffDistanceExtractor>*),
                rustcpp::AlignOf<cv::Ptr<cv::HausdorffDistanceExtractor>*>::value,
                rustcpp::Flags<cv::Ptr<cv::HausdorffDistanceExtractor>*>::value
            }, {
                7657572951958577014ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                7657572951958577014ull,
                sizeof(cv::Ptr<cv::ShapeDistanceExtractor>*),
                rustcpp::AlignOf<cv::Ptr<cv::ShapeDistanceExtractor>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ShapeDistanceExtractor>*>::value
            }, {2483398474520152550ull, 0, 1, 0ull << 32}, {
                2483398474520152550ull,
                sizeof(Ptr<cv::HistogramCostExtractor>*),
                rustcpp::AlignOf<Ptr<cv::HistogramCostExtractor>*>::value,
                rustcpp::Flags<Ptr<cv::HistogramCostExtractor>*>::value
            }, {
                13542162339573349925ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13542162339573349925ull,
                sizeof(cv::Ptr<cv::HistogramCostExtractor>*),
                rustcpp::AlignOf<cv::Ptr<cv::HistogramCostExtractor>*>::value,
                rustcpp::Flags<cv::Ptr<cv::HistogramCostExtractor>*>::value
            }, {9356249463999177603ull, 0, 1, 0ull << 32}, {
                9356249463999177603ull,
                sizeof(Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>*),
                rustcpp::AlignOf<Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>*>::value,
                rustcpp::Flags<Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>*>::value
            }, {
                16273705479179792459ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16273705479179792459ull,
                sizeof(cv::Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>*),
                rustcpp::AlignOf<cv::Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>*>::value,
                rustcpp::Flags<cv::Ptr<cv::phase_unwrapping::HistogramPhaseUnwrapping>*>::value
            }, {
                9739853428975830285ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9739853428975830285ull,
                sizeof(cv::Ptr<cv::phase_unwrapping::PhaseUnwrapping>*),
                rustcpp::AlignOf<cv::Ptr<cv::phase_unwrapping::PhaseUnwrapping>*>::value,
                rustcpp::Flags<cv::Ptr<cv::phase_unwrapping::PhaseUnwrapping>*>::value
            }, {1339623399333785548ull, 0, 1, 0ull << 32}, {
                1339623399333785548ull,
                sizeof(Ptr<cv::videostab::IFrameSource>*),
                rustcpp::AlignOf<Ptr<cv::videostab::IFrameSource>*>::value,
                rustcpp::Flags<Ptr<cv::videostab::IFrameSource>*>::value
            }, {
                14561939575263394982ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14561939575263394982ull,
                sizeof(cv::Ptr<cv::videostab::IFrameSource>*),
                rustcpp::AlignOf<cv::Ptr<cv::videostab::IFrameSource>*>::value,
                rustcpp::Flags<cv::Ptr<cv::videostab::IFrameSource>*>::value
            }, {18198237692712979612ull, 0, 1, 0ull << 32}, {
                18198237692712979612ull,
                sizeof(Ptr<cv::videostab::ILog>*),
                rustcpp::AlignOf<Ptr<cv::videostab::ILog>*>::value,
                rustcpp::Flags<Ptr<cv::videostab::ILog>*>::value
            }, {
                9361312242683319322ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9361312242683319322ull,
                sizeof(cv::Ptr<cv::videostab::ILog>*),
                rustcpp::AlignOf<cv::Ptr<cv::videostab::ILog>*>::value,
                rustcpp::Flags<cv::Ptr<cv::videostab::ILog>*>::value
            }, {10303895632629502866ull, 0, 1, 0ull << 32}, {
                10303895632629502866ull,
                sizeof(Ptr<cv::videostab::IMotionStabilizer>*),
                rustcpp::AlignOf<Ptr<cv::videostab::IMotionStabilizer>*>::value,
                rustcpp::Flags<Ptr<cv::videostab::IMotionStabilizer>*>::value
            }, {
                17537165542402289872ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                17537165542402289872ull,
                sizeof(cv::Ptr<cv::videostab::IMotionStabilizer>*),
                rustcpp::AlignOf<cv::Ptr<cv::videostab::IMotionStabilizer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::videostab::IMotionStabilizer>*>::value
            }, {7587352115276004024ull, 0, 1, 0ull << 32}, {
                7587352115276004024ull,
                sizeof(Ptr<cv::videostab::ImageMotionEstimatorBase>*),
                rustcpp::AlignOf<Ptr<cv::videostab::ImageMotionEstimatorBase>*>::value,
                rustcpp::Flags<Ptr<cv::videostab::ImageMotionEstimatorBase>*>::value
            }, {
                12593287579734816640ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12593287579734816640ull,
                sizeof(cv::Ptr<cv::videostab::ImageMotionEstimatorBase>*),
                rustcpp::AlignOf<cv::Ptr<cv::videostab::ImageMotionEstimatorBase>*>::value,
                rustcpp::Flags<cv::Ptr<cv::videostab::ImageMotionEstimatorBase>*>::value
            }, {9502312929427979317ull, 0, 1, 0ull << 32}, {
                9502312929427979317ull,
                sizeof(Ptr<cv::dnn::InnerProductLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::InnerProductLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::InnerProductLayer>*>::value
            }, {5082851792357966868ull, 0, 1, 0ull << 32}, {
                5082851792357966868ull,
                sizeof(Ptr<cv::videostab::InpainterBase>*),
                rustcpp::AlignOf<Ptr<cv::videostab::InpainterBase>*>::value,
                rustcpp::Flags<Ptr<cv::videostab::InpainterBase>*>::value
            }, {
                2524036501072473108ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                2524036501072473108ull,
                sizeof(cv::Ptr<cv::videostab::InpainterBase>*),
                rustcpp::AlignOf<cv::Ptr<cv::videostab::InpainterBase>*>::value,
                rustcpp::Flags<cv::Ptr<cv::videostab::InpainterBase>*>::value
            }, {16049892126422532870ull, 0, 1, 0ull << 32}, {
                16049892126422532870ull,
                sizeof(Ptr<cv::KAZE>*),
                rustcpp::AlignOf<Ptr<cv::KAZE>*>::value,
                rustcpp::Flags<Ptr<cv::KAZE>*>::value
            }, {
                7230897292932647643ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                7230897292932647643ull,
                sizeof(cv::Ptr<cv::KAZE>*),
                rustcpp::AlignOf<cv::Ptr<cv::KAZE>*>::value,
                rustcpp::Flags<cv::Ptr<cv::KAZE>*>::value
            }, {5991407856556358424ull, 0, 1, 0ull << 32}, {
                5991407856556358424ull,
                sizeof(Ptr<cv::ml::KNearest>*),
                rustcpp::AlignOf<Ptr<cv::ml::KNearest>*>::value,
                rustcpp::Flags<Ptr<cv::ml::KNearest>*>::value
            }, {
                9380110218057111234ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9380110218057111234ull,
                sizeof(cv::Ptr<cv::ml::KNearest>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::KNearest>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::KNearest>*>::value
            }, {5069235347220625259ull, 0, 1, 0ull << 32}, {
                5069235347220625259ull,
                sizeof(Ptr<cv::ml::SVM::Kernel>*),
                rustcpp::AlignOf<Ptr<cv::ml::SVM::Kernel>*>::value,
                rustcpp::Flags<Ptr<cv::ml::SVM::Kernel>*>::value
            }, {
                11220371491790837283ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11220371491790837283ull,
                sizeof(cv::Ptr<cv::ml::SVM::Kernel>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::SVM::Kernel>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::SVM::Kernel>*>::value
            }, {15565642460353171795ull, 0, 1, 0ull << 32}, {
                15565642460353171795ull,
                sizeof(Ptr<cv::xfeatures2d::LATCH>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::LATCH>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::LATCH>*>::value
            }, {225352646700498615ull, 0, 1, 0ull << 32}, {
                225352646700498615ull,
                sizeof(Ptr<cv::LMSolver>*),
                rustcpp::AlignOf<Ptr<cv::LMSolver>*>::value,
                rustcpp::Flags<Ptr<cv::LMSolver>*>::value
            }, {
                16631819156618831151ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16631819156618831151ull,
                sizeof(cv::Ptr<cv::LMSolver>*),
                rustcpp::AlignOf<cv::Ptr<cv::LMSolver>*>::value,
                rustcpp::Flags<cv::Ptr<cv::LMSolver>*>::value
            }, {9571689812789661333ull, 0, 1, 0ull << 32}, {
                9571689812789661333ull,
                sizeof(Ptr<cv::dnn::LRNLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::LRNLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::LRNLayer>*>::value
            }, {2121701416244121308ull, 0, 1, 0ull << 32}, {
                2121701416244121308ull,
                sizeof(Ptr<cv::line_descriptor::LSDDetector>*),
                rustcpp::AlignOf<Ptr<cv::line_descriptor::LSDDetector>*>::value,
                rustcpp::Flags<Ptr<cv::line_descriptor::LSDDetector>*>::value
            }, {11542281859125239804ull, 0, 1, 0ull << 32}, {
                11542281859125239804ull,
                sizeof(Ptr<cv::dnn::LSTMLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::LSTMLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::LSTMLayer>*>::value
            }, {
                190199469183236370ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                190199469183236370ull,
                sizeof(cv::Ptr<cv::dnn::LSTMLayer>*),
                rustcpp::AlignOf<cv::Ptr<cv::dnn::LSTMLayer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::dnn::LSTMLayer>*>::value
            }, {13498657802608002024ull, 0, 1, 0ull << 32}, {
                13498657802608002024ull,
                sizeof(Ptr<cv::xfeatures2d::LUCID>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::LUCID>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::LUCID>*>::value
            }, {6034091355433475730ull, 0, 1, 0ull << 32}, {
                6034091355433475730ull,
                sizeof(Ptr<cv::dnn::Layer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::Layer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::Layer>*>::value
            }, {16540695043405732457ull, 0, 1, 0ull << 32}, {
                16540695043405732457ull,
                sizeof(Ptr<cv::xphoto::LearningBasedWB>*),
                rustcpp::AlignOf<Ptr<cv::xphoto::LearningBasedWB>*>::value,
                rustcpp::Flags<Ptr<cv::xphoto::LearningBasedWB>*>::value
            }, {
                8477798784336776199ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                8477798784336776199ull,
                sizeof(cv::Ptr<cv::xphoto::LearningBasedWB>*),
                rustcpp::AlignOf<cv::Ptr<cv::xphoto::LearningBasedWB>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xphoto::LearningBasedWB>*>::value
            }, {472323764292028458ull, 0, 1, 0ull << 32}, {
                472323764292028458ull,
                sizeof(Ptr<cv::LineSegmentDetector>*),
                rustcpp::AlignOf<Ptr<cv::LineSegmentDetector>*>::value,
                rustcpp::Flags<Ptr<cv::LineSegmentDetector>*>::value
            }, {
                12937108712183968527ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12937108712183968527ull,
                sizeof(cv::Ptr<cv::LineSegmentDetector>*),
                rustcpp::AlignOf<cv::Ptr<cv::LineSegmentDetector>*>::value,
                rustcpp::Flags<cv::Ptr<cv::LineSegmentDetector>*>::value
            }, {15627648732781970708ull, 0, 1, 0ull << 32}, {
                15627648732781970708ull,
                sizeof(Ptr<cv::ml::LogisticRegression>*),
                rustcpp::AlignOf<Ptr<cv::ml::LogisticRegression>*>::value,
                rustcpp::Flags<Ptr<cv::ml::LogisticRegression>*>::value
            }, {
                2031149368850707641ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                2031149368850707641ull,
                sizeof(cv::Ptr<cv::ml::LogisticRegression>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::LogisticRegression>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::LogisticRegression>*>::value
            }, {2003462756773145611ull, 0, 1, 0ull << 32}, {
                2003462756773145611ull,
                sizeof(Ptr<cv::xfeatures2d::MSDDetector>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::MSDDetector>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::MSDDetector>*>::value
            }, {11818669637766761773ull, 0, 1, 0ull << 32}, {
                11818669637766761773ull,
                sizeof(Ptr<cv::MSER>*),
                rustcpp::AlignOf<Ptr<cv::MSER>*>::value,
                rustcpp::Flags<Ptr<cv::MSER>*>::value
            }, {
                1567386245675638093ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1567386245675638093ull,
                sizeof(cv::Ptr<cv::MSER>*),
                rustcpp::AlignOf<cv::Ptr<cv::MSER>*>::value,
                rustcpp::Flags<cv::Ptr<cv::MSER>*>::value
            }, {664750282558173717ull, 0, 1, 0ull << 32}, {
                664750282558173717ull,
                sizeof(Ptr<cv::dnn::MVNLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::MVNLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::MVNLayer>*>::value
            }, {17788493978444352700ull, 0, 1, 0ull << 32}, {
                17788493978444352700ull,
                sizeof(Ptr<cv::img_hash::MarrHildrethHash>*),
                rustcpp::AlignOf<Ptr<cv::img_hash::MarrHildrethHash>*>::value,
                rustcpp::Flags<Ptr<cv::img_hash::MarrHildrethHash>*>::value
            }, {7110797066684438024ull, 0, 1, 0ull << 32}, {
                7110797066684438024ull,
                sizeof(Ptr<cv::BaseCascadeClassifier::MaskGenerator>*),
                rustcpp::AlignOf<Ptr<cv::BaseCascadeClassifier::MaskGenerator>*>::value,
                rustcpp::Flags<Ptr<cv::BaseCascadeClassifier::MaskGenerator>*>::value
            }, {
                16824657060876277620ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16824657060876277620ull,
                sizeof(cv::Ptr<cv::BaseCascadeClassifier::MaskGenerator>*),
                rustcpp::AlignOf<cv::Ptr<cv::BaseCascadeClassifier::MaskGenerator>*>::value,
                rustcpp::Flags<cv::Ptr<cv::BaseCascadeClassifier::MaskGenerator>*>::value
            }, {16599416280007314315ull, 0, 1, 0ull << 32}, {
                16599416280007314315ull,
                sizeof(Ptr<cv::dnn::MaxUnpoolLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::MaxUnpoolLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::MaxUnpoolLayer>*>::value
            }, {969378202585011276ull, 0, 1, 0ull << 32}, {
                969378202585011276ull,
                sizeof(Ptr<cv::MergeDebevec>*),
                rustcpp::AlignOf<Ptr<cv::MergeDebevec>*>::value,
                rustcpp::Flags<Ptr<cv::MergeDebevec>*>::value
            }, {
                1124236502233214873ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1124236502233214873ull,
                sizeof(cv::Ptr<cv::MergeDebevec>*),
                rustcpp::AlignOf<cv::Ptr<cv::MergeDebevec>*>::value,
                rustcpp::Flags<cv::Ptr<cv::MergeDebevec>*>::value
            }, {
                10863833973569489794ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                10863833973569489794ull,
                sizeof(cv::Ptr<cv::MergeExposures>*),
                rustcpp::AlignOf<cv::Ptr<cv::MergeExposures>*>::value,
                rustcpp::Flags<cv::Ptr<cv::MergeExposures>*>::value
            }, {8823330407854163062ull, 0, 1, 0ull << 32}, {
                8823330407854163062ull,
                sizeof(Ptr<cv::MergeMertens>*),
                rustcpp::AlignOf<Ptr<cv::MergeMertens>*>::value,
                rustcpp::Flags<Ptr<cv::MergeMertens>*>::value
            }, {
                15879880248135126923ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15879880248135126923ull,
                sizeof(cv::Ptr<cv::MergeMertens>*),
                rustcpp::AlignOf<cv::Ptr<cv::MergeMertens>*>::value,
                rustcpp::Flags<cv::Ptr<cv::MergeMertens>*>::value
            }, {8827862907116326792ull, 0, 1, 0ull << 32}, {
                8827862907116326792ull,
                sizeof(Ptr<cv::MergeRobertson>*),
                rustcpp::AlignOf<Ptr<cv::MergeRobertson>*>::value,
                rustcpp::Flags<Ptr<cv::MergeRobertson>*>::value
            }, {
                13987088219514192559ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13987088219514192559ull,
                sizeof(cv::Ptr<cv::MergeRobertson>*),
                rustcpp::AlignOf<cv::Ptr<cv::MergeRobertson>*>::value,
                rustcpp::Flags<cv::Ptr<cv::MergeRobertson>*>::value
            }, {16849787778410430446ull, 0, 1, 0ull << 32}, {
                16849787778410430446ull,
                sizeof(Ptr<cv::videostab::MotionEstimatorBase>*),
                rustcpp::AlignOf<Ptr<cv::videostab::MotionEstimatorBase>*>::value,
                rustcpp::Flags<Ptr<cv::videostab::MotionEstimatorBase>*>::value
            }, {
                10817820762671558858ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                10817820762671558858ull,
                sizeof(cv::Ptr<cv::videostab::MotionEstimatorBase>*),
                rustcpp::AlignOf<cv::Ptr<cv::videostab::MotionEstimatorBase>*>::value,
                rustcpp::Flags<cv::Ptr<cv::videostab::MotionEstimatorBase>*>::value
            }, {306737377762118310ull, 0, 1, 0ull << 32}, {
                306737377762118310ull,
                sizeof(Ptr<cv::videostab::MotionFilterBase>*),
                rustcpp::AlignOf<Ptr<cv::videostab::MotionFilterBase>*>::value,
                rustcpp::Flags<Ptr<cv::videostab::MotionFilterBase>*>::value
            }, {
                6088203358513886165ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                6088203358513886165ull,
                sizeof(cv::Ptr<cv::videostab::MotionFilterBase>*),
                rustcpp::AlignOf<cv::Ptr<cv::videostab::MotionFilterBase>*>::value,
                rustcpp::Flags<cv::Ptr<cv::videostab::MotionFilterBase>*>::value
            }, {9420934050222435202ull, 0, 1, 0ull << 32}, {
                9420934050222435202ull,
                sizeof(Ptr<cv::ml::NormalBayesClassifier>*),
                rustcpp::AlignOf<Ptr<cv::ml::NormalBayesClassifier>*>::value,
                rustcpp::Flags<Ptr<cv::ml::NormalBayesClassifier>*>::value
            }, {
                12210542222737275905ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12210542222737275905ull,
                sizeof(cv::Ptr<cv::ml::NormalBayesClassifier>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::NormalBayesClassifier>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::NormalBayesClassifier>*>::value
            }, {14967754789672115278ull, 0, 1, 0ull << 32}, {
                14967754789672115278ull,
                sizeof(Ptr<cv::dnn::NormalizeBBoxLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::NormalizeBBoxLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::NormalizeBBoxLayer>*>::value
            }, {9563326329782244080ull, 0, 1, 0ull << 32}, {
                9563326329782244080ull,
                sizeof(Ptr<cv::ORB>*),
                rustcpp::AlignOf<Ptr<cv::ORB>*>::value,
                rustcpp::Flags<Ptr<cv::ORB>*>::value
            }, {
                1108626882757810831ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1108626882757810831ull,
                sizeof(cv::Ptr<cv::ORB>*),
                rustcpp::AlignOf<cv::Ptr<cv::ORB>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ORB>*>::value
            }, {9440441718553280570ull, 0, 1, 0ull << 32}, {
                9440441718553280570ull,
                sizeof(Ptr<cv::xfeatures2d::PCTSignatures>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::PCTSignatures>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::PCTSignatures>*>::value
            }, {
                4452362306563857291ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                4452362306563857291ull,
                sizeof(cv::Ptr<cv::xfeatures2d::PCTSignatures>*),
                rustcpp::AlignOf<cv::Ptr<cv::xfeatures2d::PCTSignatures>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xfeatures2d::PCTSignatures>*>::value
            }, {10257672686281229754ull, 0, 1, 0ull << 32}, {
                10257672686281229754ull,
                sizeof(Ptr<cv::xfeatures2d::PCTSignaturesSQFD>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::PCTSignaturesSQFD>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::PCTSignaturesSQFD>*>::value
            }, {
                3573517871276799886ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3573517871276799886ull,
                sizeof(cv::Ptr<cv::xfeatures2d::PCTSignaturesSQFD>*),
                rustcpp::AlignOf<cv::Ptr<cv::xfeatures2d::PCTSignaturesSQFD>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xfeatures2d::PCTSignaturesSQFD>*>::value
            }, {17910216134377550753ull, 0, 1, 0ull << 32}, {
                17910216134377550753ull,
                sizeof(Ptr<cv::img_hash::PHash>*),
                rustcpp::AlignOf<Ptr<cv::img_hash::PHash>*>::value,
                rustcpp::Flags<Ptr<cv::img_hash::PHash>*>::value
            }, {10644479542316175429ull, 0, 1, 0ull << 32}, {
                10644479542316175429ull,
                sizeof(Ptr<cv::dnn::PaddingLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::PaddingLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::PaddingLayer>*>::value
            }, {2967820026473400850ull, 0, 1, 0ull << 32}, {
                2967820026473400850ull,
                sizeof(Ptr<cv::ml::ParamGrid>*),
                rustcpp::AlignOf<Ptr<cv::ml::ParamGrid>*>::value,
                rustcpp::Flags<Ptr<cv::ml::ParamGrid>*>::value
            }, {16167574920054176898ull, 0, 1, 0ull << 32}, {
                16167574920054176898ull,
                sizeof(Ptr<cv::structured_light::SinusoidalPattern::Params>*),
                rustcpp::AlignOf<Ptr<cv::structured_light::SinusoidalPattern::Params>*>::value,
                rustcpp::Flags<Ptr<cv::structured_light::SinusoidalPattern::Params>*>::value
            }, {4247627113030051852ull, 0, 1, 0ull << 32}, {
                4247627113030051852ull,
                sizeof(Ptr<cv::dnn::PermuteLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::PermuteLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::PermuteLayer>*>::value
            }, {9215424044286806710ull, 0, 1, 0ull << 32}, {
                9215424044286806710ull,
                sizeof(Ptr<cv::plot::Plot2d>*),
                rustcpp::AlignOf<Ptr<cv::plot::Plot2d>*>::value,
                rustcpp::Flags<Ptr<cv::plot::Plot2d>*>::value
            }, {
                8728249174976718134ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                8728249174976718134ull,
                sizeof(cv::Ptr<cv::plot::Plot2d>*),
                rustcpp::AlignOf<cv::Ptr<cv::plot::Plot2d>*>::value,
                rustcpp::Flags<cv::Ptr<cv::plot::Plot2d>*>::value
            }, {16769774822878677528ull, 0, 1, 0ull << 32}, {
                16769774822878677528ull,
                sizeof(Ptr<cv::dnn::PoolingLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::PoolingLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::PoolingLayer>*>::value
            }, {17402325878906626091ull, 0, 1, 0ull << 32}, {
                17402325878906626091ull,
                sizeof(Ptr<cv::dnn::PowerLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::PowerLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::PowerLayer>*>::value
            }, {16477784381366228042ull, 0, 1, 0ull << 32}, {
                16477784381366228042ull,
                sizeof(Ptr<cv::dnn::PriorBoxLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::PriorBoxLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::PriorBoxLayer>*>::value
            }, {6937340515399409502ull, 0, 1, 0ull << 32}, {
                6937340515399409502ull,
                sizeof(Ptr<cv::dnn::ProposalLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ProposalLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ProposalLayer>*>::value
            }, {9956300721862918842ull, 0, 1, 0ull << 32}, {
                9956300721862918842ull,
                sizeof(Ptr<cv::dnn::RNNLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::RNNLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::RNNLayer>*>::value
            }, {
                15400219728245805522ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15400219728245805522ull,
                sizeof(cv::Ptr<cv::dnn::RNNLayer>*),
                rustcpp::AlignOf<cv::Ptr<cv::dnn::RNNLayer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::dnn::RNNLayer>*>::value
            }, {13000817054207274220ull, 0, 1, 0ull << 32}, {
                13000817054207274220ull,
                sizeof(Ptr<cv::ml::RTrees>*),
                rustcpp::AlignOf<Ptr<cv::ml::RTrees>*>::value,
                rustcpp::Flags<Ptr<cv::ml::RTrees>*>::value
            }, {
                15543245347619478499ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15543245347619478499ull,
                sizeof(cv::Ptr<cv::ml::RTrees>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::RTrees>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::RTrees>*>::value
            }, {4550595403161930936ull, 0, 1, 0ull << 32}, {
                4550595403161930936ull,
                sizeof(Ptr<cv::img_hash::RadialVarianceHash>*),
                rustcpp::AlignOf<Ptr<cv::img_hash::RadialVarianceHash>*>::value,
                rustcpp::Flags<Ptr<cv::img_hash::RadialVarianceHash>*>::value
            }, {6212028047882590212ull, 0, 1, 0ull << 32}, {
                6212028047882590212ull,
                sizeof(Ptr<cv::dnn::ReLU6Layer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ReLU6Layer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ReLU6Layer>*>::value
            }, {16133085131344526368ull, 0, 1, 0ull << 32}, {
                16133085131344526368ull,
                sizeof(Ptr<cv::dnn::ReLULayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ReLULayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ReLULayer>*>::value
            }, {12461889819712850381ull, 0, 1, 0ull << 32}, {
                12461889819712850381ull,
                sizeof(Ptr<cv::dnn::RegionLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::RegionLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::RegionLayer>*>::value
            }, {9751734359816078948ull, 0, 1, 0ull << 32}, {
                9751734359816078948ull,
                sizeof(Ptr<cv::dnn::ReorgLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ReorgLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ReorgLayer>*>::value
            }, {2907390751103714830ull, 0, 1, 0ull << 32}, {
                2907390751103714830ull,
                sizeof(Ptr<cv::dnn::ReshapeLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ReshapeLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ReshapeLayer>*>::value
            }, {12723748592525922054ull, 0, 1, 0ull << 32}, {
                12723748592525922054ull,
                sizeof(Ptr<cv::dnn::ResizeLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ResizeLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ResizeLayer>*>::value
            }, {1936546357439376816ull, 0, 1, 0ull << 32}, {
                1936546357439376816ull,
                sizeof(Ptr<cv::bioinspired::Retina>*),
                rustcpp::AlignOf<Ptr<cv::bioinspired::Retina>*>::value,
                rustcpp::Flags<Ptr<cv::bioinspired::Retina>*>::value
            }, {
                9425702410970703142ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9425702410970703142ull,
                sizeof(cv::Ptr<cv::bioinspired::Retina>*),
                rustcpp::AlignOf<cv::Ptr<cv::bioinspired::Retina>*>::value,
                rustcpp::Flags<cv::Ptr<cv::bioinspired::Retina>*>::value
            }, {15761352024001064129ull, 0, 1, 0ull << 32}, {
                15761352024001064129ull,
                sizeof(Ptr<cv::bioinspired::RetinaFastToneMapping>*),
                rustcpp::AlignOf<Ptr<cv::bioinspired::RetinaFastToneMapping>*>::value,
                rustcpp::Flags<Ptr<cv::bioinspired::RetinaFastToneMapping>*>::value
            }, {
                733037742724609830ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                733037742724609830ull,
                sizeof(cv::Ptr<cv::bioinspired::RetinaFastToneMapping>*),
                rustcpp::AlignOf<cv::Ptr<cv::bioinspired::RetinaFastToneMapping>*>::value,
                rustcpp::Flags<cv::Ptr<cv::bioinspired::RetinaFastToneMapping>*>::value
            }, {2371959563926750531ull, 0, 1, 0ull << 32}, {
                2371959563926750531ull,
                sizeof(Ptr<cv::sfm::SFMLibmvEuclideanReconstruction>*),
                rustcpp::AlignOf<Ptr<cv::sfm::SFMLibmvEuclideanReconstruction>*>::value,
                rustcpp::Flags<Ptr<cv::sfm::SFMLibmvEuclideanReconstruction>*>::value
            }, {15870932814481900338ull, 0, 1, 0ull << 32}, {
                15870932814481900338ull,
                sizeof(Ptr<cv::xfeatures2d::SIFT>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::SIFT>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::SIFT>*>::value
            }, {12884606475019575687ull, 0, 1, 0ull << 32}, {
                12884606475019575687ull,
                sizeof(Ptr<cv::xfeatures2d::SURF>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::SURF>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::SURF>*>::value
            }, {
                11830126940083729864ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11830126940083729864ull,
                sizeof(cv::Ptr<cv::xfeatures2d::SURF>*),
                rustcpp::AlignOf<cv::Ptr<cv::xfeatures2d::SURF>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xfeatures2d::SURF>*>::value
            }, {10045000002926703753ull, 0, 1, 0ull << 32}, {
                10045000002926703753ull,
                sizeof(Ptr<cv::ml::SVM>*),
                rustcpp::AlignOf<Ptr<cv::ml::SVM>*>::value,
                rustcpp::Flags<Ptr<cv::ml::SVM>*>::value
            }, {
                15383192762949579036ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15383192762949579036ull,
                sizeof(cv::Ptr<cv::ml::SVM>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::SVM>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::SVM>*>::value
            }, {3777505347712248467ull, 0, 1, 0ull << 32}, {
                3777505347712248467ull,
                sizeof(Ptr<cv::ml::SVMSGD>*),
                rustcpp::AlignOf<Ptr<cv::ml::SVMSGD>*>::value,
                rustcpp::Flags<Ptr<cv::ml::SVMSGD>*>::value
            }, {
                3558943668980408180ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3558943668980408180ull,
                sizeof(cv::Ptr<cv::ml::SVMSGD>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::SVMSGD>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::SVMSGD>*>::value
            }, {7954975382389705004ull, 0, 1, 0ull << 32}, {
                7954975382389705004ull,
                sizeof(Ptr<cv::dnn::ScaleLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::ScaleLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::ScaleLayer>*>::value
            }, {360150812001673555ull, 0, 1, 0ull << 32}, {
                360150812001673555ull,
                sizeof(Ptr<cv::ShapeContextDistanceExtractor>*),
                rustcpp::AlignOf<Ptr<cv::ShapeContextDistanceExtractor>*>::value,
                rustcpp::Flags<Ptr<cv::ShapeContextDistanceExtractor>*>::value
            }, {
                1352300925758240751ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1352300925758240751ull,
                sizeof(cv::Ptr<cv::ShapeContextDistanceExtractor>*),
                rustcpp::AlignOf<cv::Ptr<cv::ShapeContextDistanceExtractor>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ShapeContextDistanceExtractor>*>::value
            }, {16298546404844554959ull, 0, 1, 0ull << 32}, {
                16298546404844554959ull,
                sizeof(Ptr<cv::dnn::SigmoidLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::SigmoidLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::SigmoidLayer>*>::value
            }, {16470498267405534177ull, 0, 1, 0ull << 32}, {
                16470498267405534177ull,
                sizeof(Ptr<cv::SimpleBlobDetector>*),
                rustcpp::AlignOf<Ptr<cv::SimpleBlobDetector>*>::value,
                rustcpp::Flags<Ptr<cv::SimpleBlobDetector>*>::value
            }, {3749787240431094784ull, 0, 1, 0ull << 32}, {
                3749787240431094784ull,
                sizeof(Ptr<cv::xphoto::SimpleWB>*),
                rustcpp::AlignOf<Ptr<cv::xphoto::SimpleWB>*>::value,
                rustcpp::Flags<Ptr<cv::xphoto::SimpleWB>*>::value
            }, {
                12212805680333427698ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12212805680333427698ull,
                sizeof(cv::Ptr<cv::xphoto::SimpleWB>*),
                rustcpp::AlignOf<cv::Ptr<cv::xphoto::SimpleWB>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xphoto::SimpleWB>*>::value
            }, {13695571527984217256ull, 0, 1, 0ull << 32}, {
                13695571527984217256ull,
                sizeof(Ptr<cv::structured_light::SinusoidalPattern>*),
                rustcpp::AlignOf<Ptr<cv::structured_light::SinusoidalPattern>*>::value,
                rustcpp::Flags<Ptr<cv::structured_light::SinusoidalPattern>*>::value
            }, {
                2320937837311737793ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                2320937837311737793ull,
                sizeof(cv::Ptr<cv::structured_light::SinusoidalPattern>*),
                rustcpp::AlignOf<cv::Ptr<cv::structured_light::SinusoidalPattern>*>::value,
                rustcpp::Flags<cv::Ptr<cv::structured_light::SinusoidalPattern>*>::value
            }, {1868804106035409695ull, 0, 1, 0ull << 32}, {
                1868804106035409695ull,
                sizeof(Ptr<cv::dnn::SliceLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::SliceLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::SliceLayer>*>::value
            }, {14534451350619200859ull, 0, 1, 0ull << 32}, {
                14534451350619200859ull,
                sizeof(Ptr<cv::dnn::SoftmaxLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::SoftmaxLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::SoftmaxLayer>*>::value
            }, {14406019438041710152ull, 0, 1, 0ull << 32}, {
                14406019438041710152ull,
                sizeof(Ptr<cv::SparsePyrLKOpticalFlow>*),
                rustcpp::AlignOf<Ptr<cv::SparsePyrLKOpticalFlow>*>::value,
                rustcpp::Flags<Ptr<cv::SparsePyrLKOpticalFlow>*>::value
            }, {
                13625481011724271854ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13625481011724271854ull,
                sizeof(cv::Ptr<cv::SparseOpticalFlow>*),
                rustcpp::AlignOf<cv::Ptr<cv::SparseOpticalFlow>*>::value,
                rustcpp::Flags<cv::Ptr<cv::SparseOpticalFlow>*>::value
            }, {
                10396465582262553300ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                10396465582262553300ull,
                sizeof(cv::Ptr<cv::SparsePyrLKOpticalFlow>*),
                rustcpp::AlignOf<cv::Ptr<cv::SparsePyrLKOpticalFlow>*>::value,
                rustcpp::Flags<cv::Ptr<cv::SparsePyrLKOpticalFlow>*>::value
            }, {17857226872240975794ull, 0, 1, 0ull << 32}, {
                17857226872240975794ull,
                sizeof(Ptr<cv::dnn::SplitLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::SplitLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::SplitLayer>*>::value
            }, {6645996351189639176ull, 0, 1, 0ull << 32}, {
                6645996351189639176ull,
                sizeof(Ptr<cv::xfeatures2d::StarDetector>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::StarDetector>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::StarDetector>*>::value
            }, {6546716437333099587ull, 0, 1, 0ull << 32}, {
                6546716437333099587ull,
                sizeof(Ptr<cv::StereoBM>*),
                rustcpp::AlignOf<Ptr<cv::StereoBM>*>::value,
                rustcpp::Flags<Ptr<cv::StereoBM>*>::value
            }, {
                1703956185342649881ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1703956185342649881ull,
                sizeof(cv::Ptr<cv::StereoBM>*),
                rustcpp::AlignOf<cv::Ptr<cv::StereoBM>*>::value,
                rustcpp::Flags<cv::Ptr<cv::StereoBM>*>::value
            }, {
                17835170138994487146ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                17835170138994487146ull,
                sizeof(cv::Ptr<cv::StereoMatcher>*),
                rustcpp::AlignOf<cv::Ptr<cv::StereoMatcher>*>::value,
                rustcpp::Flags<cv::Ptr<cv::StereoMatcher>*>::value
            }, {3255234121190735457ull, 0, 1, 0ull << 32}, {
                3255234121190735457ull,
                sizeof(Ptr<cv::StereoSGBM>*),
                rustcpp::AlignOf<Ptr<cv::StereoSGBM>*>::value,
                rustcpp::Flags<Ptr<cv::StereoSGBM>*>::value
            }, {
                1654281845497104519ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1654281845497104519ull,
                sizeof(cv::Ptr<cv::StereoSGBM>*),
                rustcpp::AlignOf<cv::Ptr<cv::StereoSGBM>*>::value,
                rustcpp::Flags<cv::Ptr<cv::StereoSGBM>*>::value
            }, {10906360933173671857ull, 0, 1, 0ull << 32}, {
                10906360933173671857ull,
                sizeof(Ptr<cv::Stitcher>*),
                rustcpp::AlignOf<Ptr<cv::Stitcher>*>::value,
                rustcpp::Flags<Ptr<cv::Stitcher>*>::value
            }, {15128721469780227812ull, 0, 1, 0ull << 32}, {
                15128721469780227812ull,
                sizeof(Ptr<cv::superres::SuperResolution>*),
                rustcpp::AlignOf<Ptr<cv::superres::SuperResolution>*>::value,
                rustcpp::Flags<Ptr<cv::superres::SuperResolution>*>::value
            }, {
                3688401402665632575ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3688401402665632575ull,
                sizeof(cv::Ptr<cv::superres::SuperResolution>*),
                rustcpp::AlignOf<cv::Ptr<cv::superres::SuperResolution>*>::value,
                rustcpp::Flags<cv::Ptr<cv::superres::SuperResolution>*>::value
            }, {11353623839479258768ull, 0, 1, 0ull << 32}, {
                11353623839479258768ull,
                sizeof(Ptr<cv::bgsegm::SyntheticSequenceGenerator>*),
                rustcpp::AlignOf<Ptr<cv::bgsegm::SyntheticSequenceGenerator>*>::value,
                rustcpp::Flags<Ptr<cv::bgsegm::SyntheticSequenceGenerator>*>::value
            }, {1175662990378228105ull, 0, 1, 0ull << 32}, {
                1175662990378228105ull,
                sizeof(Ptr<cv::dnn::TanHLayer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::TanHLayer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::TanHLayer>*>::value
            }, {17753628109745312168ull, 0, 1, 0ull << 32}, {
                17753628109745312168ull,
                sizeof(Ptr<cv::ThinPlateSplineShapeTransformer>*),
                rustcpp::AlignOf<Ptr<cv::ThinPlateSplineShapeTransformer>*>::value,
                rustcpp::Flags<Ptr<cv::ThinPlateSplineShapeTransformer>*>::value
            }, {
                16446232155672134300ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16446232155672134300ull,
                sizeof(cv::Ptr<cv::ThinPlateSplineShapeTransformer>*),
                rustcpp::AlignOf<cv::Ptr<cv::ThinPlateSplineShapeTransformer>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ThinPlateSplineShapeTransformer>*>::value
            }, {3032352726630820502ull, 0, 1, 0ull << 32}, {
                3032352726630820502ull,
                sizeof(Ptr<cv::Tonemap>*),
                rustcpp::AlignOf<Ptr<cv::Tonemap>*>::value,
                rustcpp::Flags<Ptr<cv::Tonemap>*>::value
            }, {
                13778030310213370037ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13778030310213370037ull,
                sizeof(cv::Ptr<cv::Tonemap>*),
                rustcpp::AlignOf<cv::Ptr<cv::Tonemap>*>::value,
                rustcpp::Flags<cv::Ptr<cv::Tonemap>*>::value
            }, {9288262875142720556ull, 0, 1, 0ull << 32}, {
                9288262875142720556ull,
                sizeof(Ptr<cv::TonemapDrago>*),
                rustcpp::AlignOf<Ptr<cv::TonemapDrago>*>::value,
                rustcpp::Flags<Ptr<cv::TonemapDrago>*>::value
            }, {
                1045920101063545181ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1045920101063545181ull,
                sizeof(cv::Ptr<cv::TonemapDrago>*),
                rustcpp::AlignOf<cv::Ptr<cv::TonemapDrago>*>::value,
                rustcpp::Flags<cv::Ptr<cv::TonemapDrago>*>::value
            }, {634615454237714425ull, 0, 1, 0ull << 32}, {
                634615454237714425ull,
                sizeof(Ptr<cv::xphoto::TonemapDurand>*),
                rustcpp::AlignOf<Ptr<cv::xphoto::TonemapDurand>*>::value,
                rustcpp::Flags<Ptr<cv::xphoto::TonemapDurand>*>::value
            }, {
                9029446508362955159ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9029446508362955159ull,
                sizeof(cv::Ptr<cv::xphoto::TonemapDurand>*),
                rustcpp::AlignOf<cv::Ptr<cv::xphoto::TonemapDurand>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xphoto::TonemapDurand>*>::value
            }, {1973540200901411147ull, 0, 1, 0ull << 32}, {
                1973540200901411147ull,
                sizeof(Ptr<cv::TonemapMantiuk>*),
                rustcpp::AlignOf<Ptr<cv::TonemapMantiuk>*>::value,
                rustcpp::Flags<Ptr<cv::TonemapMantiuk>*>::value
            }, {
                1082315758510282792ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1082315758510282792ull,
                sizeof(cv::Ptr<cv::TonemapMantiuk>*),
                rustcpp::AlignOf<cv::Ptr<cv::TonemapMantiuk>*>::value,
                rustcpp::Flags<cv::Ptr<cv::TonemapMantiuk>*>::value
            }, {1405279751135639723ull, 0, 1, 0ull << 32}, {
                1405279751135639723ull,
                sizeof(Ptr<cv::TonemapReinhard>*),
                rustcpp::AlignOf<Ptr<cv::TonemapReinhard>*>::value,
                rustcpp::Flags<Ptr<cv::TonemapReinhard>*>::value
            }, {
                3285744690845491651ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3285744690845491651ull,
                sizeof(cv::Ptr<cv::TonemapReinhard>*),
                rustcpp::AlignOf<cv::Ptr<cv::TonemapReinhard>*>::value,
                rustcpp::Flags<cv::Ptr<cv::TonemapReinhard>*>::value
            }, {618249180929106717ull, 0, 1, 0ull << 32}, {
                618249180929106717ull,
                sizeof(Ptr<cv::ml::TrainData>*),
                rustcpp::AlignOf<Ptr<cv::ml::TrainData>*>::value,
                rustcpp::Flags<Ptr<cv::ml::TrainData>*>::value
            }, {
                12550152626119932562ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12550152626119932562ull,
                sizeof(cv::Ptr<cv::ml::TrainData>*),
                rustcpp::AlignOf<cv::Ptr<cv::ml::TrainData>*>::value,
                rustcpp::Flags<cv::Ptr<cv::ml::TrainData>*>::value
            }, {4054153030151661446ull, 0, 1, 0ull << 32}, {
                4054153030151661446ull,
                sizeof(Ptr<cv::bioinspired::TransientAreasSegmentationModule>*),
                rustcpp::AlignOf<Ptr<cv::bioinspired::TransientAreasSegmentationModule>*>::value,
                rustcpp::Flags<Ptr<cv::bioinspired::TransientAreasSegmentationModule>*>::value
            }, {
                16320715448303060337ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16320715448303060337ull,
                sizeof(cv::Ptr<cv::bioinspired::TransientAreasSegmentationModule>*),
                rustcpp::AlignOf<cv::Ptr<cv::bioinspired::TransientAreasSegmentationModule>*>::value,
                rustcpp::Flags<cv::Ptr<cv::bioinspired::TransientAreasSegmentationModule>*>::value
            }, {2903559663075135314ull, 0, 1, 0ull << 32}, {
                2903559663075135314ull,
                sizeof(Ptr<cv::xfeatures2d::VGG>*),
                rustcpp::AlignOf<Ptr<cv::xfeatures2d::VGG>*>::value,
                rustcpp::Flags<Ptr<cv::xfeatures2d::VGG>*>::value
            }, {
                11547659441977831531ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11547659441977831531ull,
                sizeof(cv::Ptr<cv::xfeatures2d::VGG>*),
                rustcpp::AlignOf<cv::Ptr<cv::xfeatures2d::VGG>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xfeatures2d::VGG>*>::value
            }, {4756517262374739382ull, 0, 1, 0ull << 32}, {
                4756517262374739382ull,
                sizeof(Ptr<cv::VariationalRefinement>*),
                rustcpp::AlignOf<Ptr<cv::VariationalRefinement>*>::value,
                rustcpp::Flags<Ptr<cv::VariationalRefinement>*>::value
            }, {
                7743851960032734782ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                7743851960032734782ull,
                sizeof(cv::Ptr<cv::VariationalRefinement>*),
                rustcpp::AlignOf<cv::Ptr<cv::VariationalRefinement>*>::value,
                rustcpp::Flags<cv::Ptr<cv::VariationalRefinement>*>::value
            }, {15762518598864093390ull, 0, 1, 0ull << 32}, {
                15762518598864093390ull,
                sizeof(Ptr<cv::xobjdetect::WBDetector>*),
                rustcpp::AlignOf<Ptr<cv::xobjdetect::WBDetector>*>::value,
                rustcpp::Flags<Ptr<cv::xobjdetect::WBDetector>*>::value
            }, {
                3238170990704411966ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3238170990704411966ull,
                sizeof(cv::Ptr<cv::xobjdetect::WBDetector>*),
                rustcpp::AlignOf<cv::Ptr<cv::xobjdetect::WBDetector>*>::value,
                rustcpp::Flags<cv::Ptr<cv::xobjdetect::WBDetector>*>::value
            }, {9404264430494156532ull, 0, 1, 0ull << 32}, {
                9404264430494156532ull,
                sizeof(Ptr<float>*),
                rustcpp::AlignOf<Ptr<float>*>::value,
                rustcpp::Flags<Ptr<float>*>::value
            }, {
                4674391220520923164ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                4674391220520923164ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {15290650661388735515ull, 0, 1, 0ull << 32}, {
                15290650661388735515ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {
                10471633955279465266ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11670610201937047534ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11670610201937047534ull,
                sizeof(const std::vector<cv::DMatch>*),
                rustcpp::AlignOf<const std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<const std::vector<cv::DMatch>*>::value
            }, {
                14195017661130982216ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                14195017661130982216ull,
                sizeof(const std::vector<cv::DMatch>*),
                rustcpp::AlignOf<const std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<const std::vector<cv::DMatch>*>::value
            }, {
                6553890723709291524ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                6553890723709291524ull,
                sizeof(const std::vector<cv::DMatch>*),
                rustcpp::AlignOf<const std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<const std::vector<cv::DMatch>*>::value
            }, {11300096679525706219ull, 0, 1, 0ull << 32}, {
                11300096679525706219ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {10801280333637246550ull, 0, 1, 0ull << 32}, {
                10801280333637246550ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {
                10801280333637246550ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {8092649963627636402ull, 0, 1, 0ull << 32}, {
                8092649963627636402ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {
                8092649963627636402ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4669129286379900903ull, 0, 1, 0ull << 32}, {
                4669129286379900903ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {
                4669129286379900903ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4669129286379900903ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {8942869993081642168ull, 0, 1, 0ull << 32}, {
                8942869993081642168ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {12635579593382041797ull, 0, 1, 0ull << 32}, {
                12635579593382041797ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {
                12635579593382041797ull,
                sizeof(cv::DMatch),
                rustcpp::AlignOf<cv::DMatch>::value,
                rustcpp::Flags<cv::DMatch>::value
            }, {13509449439050880971ull, 0, 1, 0ull << 32}, {
                13509449439050880971ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {
                13509449439050880971ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13509449439050880971ull,
                sizeof(cv::DMatch),
                rustcpp::AlignOf<cv::DMatch>::value,
                rustcpp::Flags<cv::DMatch>::value
            }, {
                18373684793563344043ull,
                sizeof(cv_return_value_DMatch),
                rustcpp::AlignOf<cv_return_value_DMatch>::value,
                rustcpp::Flags<cv_return_value_DMatch>::value | 0ull << 32
            }, {
                18373684793563344043ull,
                sizeof(const std::vector<cv::DMatch>*),
                rustcpp::AlignOf<const std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<const std::vector<cv::DMatch>*>::value
            }, {
                18373684793563344043ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9454853937062164660ull,
                sizeof(cv::DMatch),
                rustcpp::AlignOf<cv::DMatch>::value,
                rustcpp::Flags<cv::DMatch>::value | 0ull << 32
            }, {
                9454853937062164660ull,
                sizeof(const std::vector<cv::DMatch>*),
                rustcpp::AlignOf<const std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<const std::vector<cv::DMatch>*>::value
            }, {
                9454853937062164660ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15911182154416177790ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                15911182154416177790ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {
                15911182154416177790ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15911182154416177790ull,
                sizeof(cv::DMatch),
                rustcpp::AlignOf<cv::DMatch>::value,
                rustcpp::Flags<cv::DMatch>::value
            }, {16422822724327893431ull, 0, 1, 0ull << 32}, {
                16422822724327893431ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {
                16422822724327893431ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16422822724327893431ull,
                sizeof(cv::DMatch),
                rustcpp::AlignOf<cv::DMatch>::value,
                rustcpp::Flags<cv::DMatch>::value
            }, {17782615142455000158ull, 0, 1, 0ull << 32}, {
                17782615142455000158ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {
                12897256558288052471ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3646958439540451126ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                3646958439540451126ull,
                sizeof(const std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionROI>*>::value
            }, {
                8914147281552747206ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                8914147281552747206ull,
                sizeof(const std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionROI>*>::value
            }, {
                11431014761157442844ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11431014761157442844ull,
                sizeof(const std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionROI>*>::value
            }, {11811132315376436326ull, 0, 1, 0ull << 32}, {
                11811132315376436326ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {4404923708776346260ull, 0, 1, 0ull << 32}, {
                4404923708776346260ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {
                4404923708776346260ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {10564428206213610634ull, 0, 1, 0ull << 32}, {
                10564428206213610634ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {
                10564428206213610634ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {9498205440752511026ull, 0, 1, 0ull << 32}, {
                9498205440752511026ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {
                9498205440752511026ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9498205440752511026ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2327144954298267897ull, 0, 1, 0ull << 32}, {
                2327144954298267897ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {14523492943826002318ull, 0, 1, 0ull << 32}, {
                14523492943826002318ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {
                14523492943826002318ull,
                sizeof(cv::DetectionROI*),
                rustcpp::AlignOf<cv::DetectionROI*>::value,
                rustcpp::Flags<cv::DetectionROI*>::value
            }, {10894961991327774538ull, 0, 1, 0ull << 32}, {
                10894961991327774538ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {
                10894961991327774538ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                10894961991327774538ull,
                sizeof(cv::DetectionROI*),
                rustcpp::AlignOf<cv::DetectionROI*>::value,
                rustcpp::Flags<cv::DetectionROI*>::value
            }, {
                14438998223381755009ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                14438998223381755009ull,
                sizeof(const std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionROI>*>::value
            }, {
                14438998223381755009ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15615904229132646509ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15615904229132646509ull,
                sizeof(const std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionROI>*>::value
            }, {
                15615904229132646509ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9205990657145873986ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                9205990657145873986ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {
                9205990657145873986ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9205990657145873986ull,
                sizeof(cv::DetectionROI*),
                rustcpp::AlignOf<cv::DetectionROI*>::value,
                rustcpp::Flags<cv::DetectionROI*>::value
            }, {13875113986189357627ull, 0, 1, 0ull << 32}, {
                13875113986189357627ull,
                sizeof(std::vector<cv::DetectionROI>*),
                rustcpp::AlignOf<std::vector<cv::DetectionROI>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionROI>*>::value
            }, {
                13875113986189357627ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13875113986189357627ull,
                sizeof(cv::DetectionROI*),
                rustcpp::AlignOf<cv::DetectionROI*>::value,
                rustcpp::Flags<cv::DetectionROI*>::value
            }, {3074040188831730085ull, 0, 1, 0ull << 32}, {
                3074040188831730085ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                2193398303447859563ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                17148886415187056930ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                17148886415187056930ull,
                sizeof(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                3252835796573477998ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                3252835796573477998ull,
                sizeof(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                14587002918496984553ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                14587002918496984553ull,
                sizeof(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {295766625996957677ull, 0, 1, 0ull << 32}, {
                295766625996957677ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {12997991613063800679ull, 0, 1, 0ull << 32}, {
                12997991613063800679ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                12997991613063800679ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2118172634627805866ull, 0, 1, 0ull << 32}, {
                2118172634627805866ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                2118172634627805866ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2127479284379495442ull, 0, 1, 0ull << 32}, {
                2127479284379495442ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                2127479284379495442ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2127479284379495442ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {3752589128807051386ull, 0, 1, 0ull << 32}, {
                3752589128807051386ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {9088854080944328713ull, 0, 1, 0ull << 32}, {
                9088854080944328713ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                9088854080944328713ull,
                sizeof(cv::xfeatures2d::Elliptic_KeyPoint*),
                rustcpp::AlignOf<cv::xfeatures2d::Elliptic_KeyPoint*>::value,
                rustcpp::Flags<cv::xfeatures2d::Elliptic_KeyPoint*>::value
            }, {5133379219696854141ull, 0, 1, 0ull << 32}, {
                5133379219696854141ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                5133379219696854141ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5133379219696854141ull,
                sizeof(cv::xfeatures2d::Elliptic_KeyPoint*),
                rustcpp::AlignOf<cv::xfeatures2d::Elliptic_KeyPoint*>::value,
                rustcpp::Flags<cv::xfeatures2d::Elliptic_KeyPoint*>::value
            }, {
                4031284176960032447ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                4031284176960032447ull,
                sizeof(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                4031284176960032447ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15345325904379480701ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15345325904379480701ull,
                sizeof(const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                15345325904379480701ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9928871132854783870ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                9928871132854783870ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                9928871132854783870ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9928871132854783870ull,
                sizeof(cv::xfeatures2d::Elliptic_KeyPoint*),
                rustcpp::AlignOf<cv::xfeatures2d::Elliptic_KeyPoint*>::value,
                rustcpp::Flags<cv::xfeatures2d::Elliptic_KeyPoint*>::value
            }, {3150681320486488051ull, 0, 1, 0ull << 32}, {
                3150681320486488051ull,
                sizeof(std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::xfeatures2d::Elliptic_KeyPoint>*>::value
            }, {
                3150681320486488051ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3150681320486488051ull,
                sizeof(cv::xfeatures2d::Elliptic_KeyPoint*),
                rustcpp::AlignOf<cv::xfeatures2d::Elliptic_KeyPoint*>::value,
                rustcpp::Flags<cv::xfeatures2d::Elliptic_KeyPoint*>::value
            }, {6626609059411216896ull, 0, 1, 0ull << 32}, {
                6626609059411216896ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                11415598706624217859ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11056692831393708364ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11056692831393708364ull,
                sizeof(const std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                11888395373105940659ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                11888395373105940659ull,
                sizeof(const std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                9162930286249469722ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                9162930286249469722ull,
                sizeof(const std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {3734240423129365362ull, 0, 1, 0ull << 32}, {
                3734240423129365362ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {10961134387514359668ull, 0, 1, 0ull << 32}, {
                10961134387514359668ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                10961134387514359668ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {15556014847456324504ull, 0, 1, 0ull << 32}, {
                15556014847456324504ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                15556014847456324504ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5512848381787752875ull, 0, 1, 0ull << 32}, {
                5512848381787752875ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                5512848381787752875ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5512848381787752875ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {18237748664670686308ull, 0, 1, 0ull << 32}, {
                18237748664670686308ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {743682484784167627ull, 0, 1, 0ull << 32}, {
                743682484784167627ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                743682484784167627ull,
                sizeof(cv::DetectionBasedTracker::ExtObject*),
                rustcpp::AlignOf<cv::DetectionBasedTracker::ExtObject*>::value,
                rustcpp::Flags<cv::DetectionBasedTracker::ExtObject*>::value
            }, {15803022385993170862ull, 0, 1, 0ull << 32}, {
                15803022385993170862ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                15803022385993170862ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15803022385993170862ull,
                sizeof(cv::DetectionBasedTracker::ExtObject*),
                rustcpp::AlignOf<cv::DetectionBasedTracker::ExtObject*>::value,
                rustcpp::Flags<cv::DetectionBasedTracker::ExtObject*>::value
            }, {
                1718366197401541479ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                1718366197401541479ull,
                sizeof(const std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                1718366197401541479ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5954416479333492102ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                5954416479333492102ull,
                sizeof(const std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<const std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                5954416479333492102ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8573612662851766529ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                8573612662851766529ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                8573612662851766529ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8573612662851766529ull,
                sizeof(cv::DetectionBasedTracker::ExtObject*),
                rustcpp::AlignOf<cv::DetectionBasedTracker::ExtObject*>::value,
                rustcpp::Flags<cv::DetectionBasedTracker::ExtObject*>::value
            }, {10371516880619494324ull, 0, 1, 0ull << 32}, {
                10371516880619494324ull,
                sizeof(std::vector<cv::DetectionBasedTracker::ExtObject>*),
                rustcpp::AlignOf<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value,
                rustcpp::Flags<std::vector<cv::DetectionBasedTracker::ExtObject>*>::value
            }, {
                10371516880619494324ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                10371516880619494324ull,
                sizeof(cv::DetectionBasedTracker::ExtObject*),
                rustcpp::AlignOf<cv::DetectionBasedTracker::ExtObject*>::value,
                rustcpp::Flags<cv::DetectionBasedTracker::ExtObject*>::value
            }, {
                17462383869196190163ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                17462383869196190163ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {7668524569890039392ull, 0, 1, 0ull << 32}, {
                7668524569890039392ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                3811088676782801859ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                546764723872345558ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                546764723872345558ull,
                sizeof(const std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<const std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<const std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                11546945343202345905ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                11546945343202345905ull,
                sizeof(const std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<const std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<const std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                14515515723909939806ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                14515515723909939806ull,
                sizeof(const std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<const std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<const std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {2498733974426812968ull, 0, 1, 0ull << 32}, {
                2498733974426812968ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {5226190320744307105ull, 0, 1, 0ull << 32}, {
                5226190320744307105ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                5226190320744307105ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2324492252536501012ull, 0, 1, 0ull << 32}, {
                2324492252536501012ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                2324492252536501012ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16603740254157801484ull, 0, 1, 0ull << 32}, {
                16603740254157801484ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                16603740254157801484ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16603740254157801484ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {6424396827849893270ull, 0, 1, 0ull << 32}, {
                6424396827849893270ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {17751962569595202574ull, 0, 1, 0ull << 32}, {
                17751962569595202574ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                17751962569595202574ull,
                sizeof(cv::line_descriptor::KeyLine),
                rustcpp::AlignOf<cv::line_descriptor::KeyLine>::value,
                rustcpp::Flags<cv::line_descriptor::KeyLine>::value
            }, {7558612527809500192ull, 0, 1, 0ull << 32}, {
                7558612527809500192ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                7558612527809500192ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7558612527809500192ull,
                sizeof(cv::line_descriptor::KeyLine),
                rustcpp::AlignOf<cv::line_descriptor::KeyLine>::value,
                rustcpp::Flags<cv::line_descriptor::KeyLine>::value
            }, {
                2665137612377542554ull,
                sizeof(cv_return_value_KeyLine),
                rustcpp::AlignOf<cv_return_value_KeyLine>::value,
                rustcpp::Flags<cv_return_value_KeyLine>::value | 0ull << 32
            }, {
                2665137612377542554ull,
                sizeof(const std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<const std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<const std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                2665137612377542554ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11931383868742619471ull,
                sizeof(cv::line_descriptor::KeyLine),
                rustcpp::AlignOf<cv::line_descriptor::KeyLine>::value,
                rustcpp::Flags<cv::line_descriptor::KeyLine>::value | 0ull << 32
            }, {
                11931383868742619471ull,
                sizeof(const std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<const std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<const std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                11931383868742619471ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2037248515412179921ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                2037248515412179921ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                2037248515412179921ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2037248515412179921ull,
                sizeof(cv::line_descriptor::KeyLine),
                rustcpp::AlignOf<cv::line_descriptor::KeyLine>::value,
                rustcpp::Flags<cv::line_descriptor::KeyLine>::value
            }, {13943442841400996419ull, 0, 1, 0ull << 32}, {
                13943442841400996419ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                13943442841400996419ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13943442841400996419ull,
                sizeof(cv::line_descriptor::KeyLine),
                rustcpp::AlignOf<cv::line_descriptor::KeyLine>::value,
                rustcpp::Flags<cv::line_descriptor::KeyLine>::value
            }, {
                11224092282151344485ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                11224092282151344485ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {1167824623877612649ull, 0, 1, 0ull << 32}, {
                1167824623877612649ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {
                7248536824058441090ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15220941912224742389ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                15220941912224742389ull,
                sizeof(const std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::KeyPoint>*>::value
            }, {
                2976277802773075598ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                2976277802773075598ull,
                sizeof(const std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::KeyPoint>*>::value
            }, {
                4938761509377368093ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                4938761509377368093ull,
                sizeof(const std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::KeyPoint>*>::value
            }, {128377175832137008ull, 0, 1, 0ull << 32}, {
                128377175832137008ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {17219629578048030604ull, 0, 1, 0ull << 32}, {
                17219629578048030604ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {
                17219629578048030604ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {13301806137447112883ull, 0, 1, 0ull << 32}, {
                13301806137447112883ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {
                13301806137447112883ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {11177678911017773952ull, 0, 1, 0ull << 32}, {
                11177678911017773952ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {
                11177678911017773952ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11177678911017773952ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4392639904478546750ull, 0, 1, 0ull << 32}, {
                4392639904478546750ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {15631773648252398002ull, 0, 1, 0ull << 32}, {
                15631773648252398002ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {
                15631773648252398002ull,
                sizeof(cv::KeyPoint),
                rustcpp::AlignOf<cv::KeyPoint>::value,
                rustcpp::Flags<cv::KeyPoint>::value
            }, {1826580309323276549ull, 0, 1, 0ull << 32}, {
                1826580309323276549ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {
                1826580309323276549ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1826580309323276549ull,
                sizeof(cv::KeyPoint),
                rustcpp::AlignOf<cv::KeyPoint>::value,
                rustcpp::Flags<cv::KeyPoint>::value
            }, {
                2873301603114579920ull,
                sizeof(cv_return_value_KeyPoint),
                rustcpp::AlignOf<cv_return_value_KeyPoint>::value,
                rustcpp::Flags<cv_return_value_KeyPoint>::value | 0ull << 32
            }, {
                2873301603114579920ull,
                sizeof(const std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::KeyPoint>*>::value
            }, {
                2873301603114579920ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3847331770652133291ull,
                sizeof(cv::KeyPoint),
                rustcpp::AlignOf<cv::KeyPoint>::value,
                rustcpp::Flags<cv::KeyPoint>::value | 0ull << 32
            }, {
                3847331770652133291ull,
                sizeof(const std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<const std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<const std::vector<cv::KeyPoint>*>::value
            }, {
                3847331770652133291ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11122785704331773848ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                11122785704331773848ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {
                11122785704331773848ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11122785704331773848ull,
                sizeof(cv::KeyPoint),
                rustcpp::AlignOf<cv::KeyPoint>::value,
                rustcpp::Flags<cv::KeyPoint>::value
            }, {2288726521239565537ull, 0, 1, 0ull << 32}, {
                2288726521239565537ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {
                2288726521239565537ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2288726521239565537ull,
                sizeof(cv::KeyPoint),
                rustcpp::AlignOf<cv::KeyPoint>::value,
                rustcpp::Flags<cv::KeyPoint>::value
            }, {1616174321047765932ull, 0, 1, 0ull << 32}, {
                1616174321047765932ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {
                7399222969602663750ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                17693422600574069294ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                17693422600574069294ull,
                sizeof(const std::vector<cv::Mat>*),
                rustcpp::AlignOf<const std::vector<cv::Mat>*>::value,
                rustcpp::Flags<const std::vector<cv::Mat>*>::value
            }, {
                12453604116914976013ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                12453604116914976013ull,
                sizeof(const std::vector<cv::Mat>*),
                rustcpp::AlignOf<const std::vector<cv::Mat>*>::value,
                rustcpp::Flags<const std::vector<cv::Mat>*>::value
            }, {
                8634334309538648831ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                8634334309538648831ull,
                sizeof(const std::vector<cv::Mat>*),
                rustcpp::AlignOf<const std::vector<cv::Mat>*>::value,
                rustcpp::Flags<const std::vector<cv::Mat>*>::value
            }, {1543689406954297498ull, 0, 1, 0ull << 32}, {
                1543689406954297498ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {17620058482356912797ull, 0, 1, 0ull << 32}, {
                17620058482356912797ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {
                17620058482356912797ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {6865175574988018626ull, 0, 1, 0ull << 32}, {
                6865175574988018626ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {
                6865175574988018626ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {314936093064805283ull, 0, 1, 0ull << 32}, {
                314936093064805283ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {
                314936093064805283ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                314936093064805283ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16001067059979594207ull, 0, 1, 0ull << 32}, {
                16001067059979594207ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {9216146474565868324ull, 0, 1, 0ull << 32}, {
                9216146474565868324ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {
                9216146474565868324ull,
                sizeof(cv::Mat*),
                rustcpp::AlignOf<cv::Mat*>::value,
                rustcpp::Flags<cv::Mat*>::value
            }, {10751110325882406258ull, 0, 1, 0ull << 32}, {
                10751110325882406258ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {
                10751110325882406258ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                10751110325882406258ull,
                sizeof(cv::Mat*),
                rustcpp::AlignOf<cv::Mat*>::value,
                rustcpp::Flags<cv::Mat*>::value
            }, {
                9759592100864313143ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                9759592100864313143ull,
                sizeof(const std::vector<cv::Mat>*),
                rustcpp::AlignOf<const std::vector<cv::Mat>*>::value,
                rustcpp::Flags<const std::vector<cv::Mat>*>::value
            }, {
                9759592100864313143ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4961131279666700380ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                4961131279666700380ull,
                sizeof(const std::vector<cv::Mat>*),
                rustcpp::AlignOf<const std::vector<cv::Mat>*>::value,
                rustcpp::Flags<const std::vector<cv::Mat>*>::value
            }, {
                4961131279666700380ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2684880046096815640ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                2684880046096815640ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {
                2684880046096815640ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2684880046096815640ull,
                sizeof(cv::Mat*),
                rustcpp::AlignOf<cv::Mat*>::value,
                rustcpp::Flags<cv::Mat*>::value
            }, {15294798845381997807ull, 0, 1, 0ull << 32}, {
                15294798845381997807ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {
                15294798845381997807ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15294798845381997807ull,
                sizeof(cv::Mat*),
                rustcpp::AlignOf<cv::Mat*>::value,
                rustcpp::Flags<cv::Mat*>::value
            }, {18401291936179530028ull, 0, 1, 0ull << 32}, {
                18401291936179530028ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                8962632025402348542ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11451532541133659827ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11451532541133659827ull,
                sizeof(const std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                6847601833162455061ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                6847601833162455061ull,
                sizeof(const std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                11837190605829423818ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11837190605829423818ull,
                sizeof(const std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Node>*>::value
            }, {10679752719351805712ull, 0, 1, 0ull << 32}, {
                10679752719351805712ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {6801720164774223896ull, 0, 1, 0ull << 32}, {
                6801720164774223896ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                6801720164774223896ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16398973602422445448ull, 0, 1, 0ull << 32}, {
                16398973602422445448ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                16398973602422445448ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {11882802976042056920ull, 0, 1, 0ull << 32}, {
                11882802976042056920ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                11882802976042056920ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11882802976042056920ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {6587805545754022614ull, 0, 1, 0ull << 32}, {
                6587805545754022614ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {18045286549201903365ull, 0, 1, 0ull << 32}, {
                18045286549201903365ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                18045286549201903365ull,
                sizeof(cv::ml::DTrees::Node*),
                rustcpp::AlignOf<cv::ml::DTrees::Node*>::value,
                rustcpp::Flags<cv::ml::DTrees::Node*>::value
            }, {6842133305639194130ull, 0, 1, 0ull << 32}, {
                6842133305639194130ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                6842133305639194130ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6842133305639194130ull,
                sizeof(cv::ml::DTrees::Node*),
                rustcpp::AlignOf<cv::ml::DTrees::Node*>::value,
                rustcpp::Flags<cv::ml::DTrees::Node*>::value
            }, {
                690321274776965184ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                690321274776965184ull,
                sizeof(const std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                690321274776965184ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6924809804357726620ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                6924809804357726620ull,
                sizeof(const std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                6924809804357726620ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6952069191652183321ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                6952069191652183321ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                6952069191652183321ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6952069191652183321ull,
                sizeof(cv::ml::DTrees::Node*),
                rustcpp::AlignOf<cv::ml::DTrees::Node*>::value,
                rustcpp::Flags<cv::ml::DTrees::Node*>::value
            }, {16123641573570003945ull, 0, 1, 0ull << 32}, {
                16123641573570003945ull,
                sizeof(std::vector<cv::ml::DTrees::Node>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Node>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Node>*>::value
            }, {
                16123641573570003945ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16123641573570003945ull,
                sizeof(cv::ml::DTrees::Node*),
                rustcpp::AlignOf<cv::ml::DTrees::Node*>::value,
                rustcpp::Flags<cv::ml::DTrees::Node*>::value
            }, {18184983902759783690ull, 0, 1, 0ull << 32}, {
                18184983902759783690ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                9678360469931201106ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                2748471256420061436ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                2748471256420061436ull,
                sizeof(const std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                5895995234606752333ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                5895995234606752333ull,
                sizeof(const std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                10820727662302808781ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                10820727662302808781ull,
                sizeof(const std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {15671465192759075645ull, 0, 1, 0ull << 32}, {
                15671465192759075645ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {7715518250746807804ull, 0, 1, 0ull << 32}, {
                7715518250746807804ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                7715518250746807804ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {12187768575431481188ull, 0, 1, 0ull << 32}, {
                12187768575431481188ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                12187768575431481188ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {14204112698620933814ull, 0, 1, 0ull << 32}, {
                14204112698620933814ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                14204112698620933814ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                14204112698620933814ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {9437746741871422580ull, 0, 1, 0ull << 32}, {
                9437746741871422580ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {1650458311699968390ull, 0, 1, 0ull << 32}, {
                1650458311699968390ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                1650458311699968390ull,
                sizeof(cv::dpm::DPMDetector::ObjectDetection*),
                rustcpp::AlignOf<cv::dpm::DPMDetector::ObjectDetection*>::value,
                rustcpp::Flags<cv::dpm::DPMDetector::ObjectDetection*>::value
            }, {4770392373392710765ull, 0, 1, 0ull << 32}, {
                4770392373392710765ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                4770392373392710765ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4770392373392710765ull,
                sizeof(cv::dpm::DPMDetector::ObjectDetection*),
                rustcpp::AlignOf<cv::dpm::DPMDetector::ObjectDetection*>::value,
                rustcpp::Flags<cv::dpm::DPMDetector::ObjectDetection*>::value
            }, {
                7952289937184739911ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                7952289937184739911ull,
                sizeof(const std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                7952289937184739911ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4972250428433289818ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                4972250428433289818ull,
                sizeof(const std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<const std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                4972250428433289818ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13413356243446711558ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                13413356243446711558ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                13413356243446711558ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13413356243446711558ull,
                sizeof(cv::dpm::DPMDetector::ObjectDetection*),
                rustcpp::AlignOf<cv::dpm::DPMDetector::ObjectDetection*>::value,
                rustcpp::Flags<cv::dpm::DPMDetector::ObjectDetection*>::value
            }, {4316688469775077966ull, 0, 1, 0ull << 32}, {
                4316688469775077966ull,
                sizeof(std::vector<cv::dpm::DPMDetector::ObjectDetection>*),
                rustcpp::AlignOf<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value,
                rustcpp::Flags<std::vector<cv::dpm::DPMDetector::ObjectDetection>*>::value
            }, {
                4316688469775077966ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4316688469775077966ull,
                sizeof(cv::dpm::DPMDetector::ObjectDetection*),
                rustcpp::AlignOf<cv::dpm::DPMDetector::ObjectDetection*>::value,
                rustcpp::Flags<cv::dpm::DPMDetector::ObjectDetection*>::value
            }, {15562566728208504871ull, 0, 1, 0ull << 32}, {
                15562566728208504871ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                699610292114923869ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11475204979879335014ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11475204979879335014ull,
                sizeof(const std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<const std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<const std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                3634805126614791296ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                3634805126614791296ull,
                sizeof(const std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<const std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<const std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                16164575024159460855ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16164575024159460855ull,
                sizeof(const std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<const std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<const std::vector<cv::ocl::PlatformInfo>*>::value
            }, {14279658207030775183ull, 0, 1, 0ull << 32}, {
                14279658207030775183ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {15986016920289615542ull, 0, 1, 0ull << 32}, {
                15986016920289615542ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                15986016920289615542ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {7515033161757101303ull, 0, 1, 0ull << 32}, {
                7515033161757101303ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                7515033161757101303ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {10417429146576805050ull, 0, 1, 0ull << 32}, {
                10417429146576805050ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                10417429146576805050ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                10417429146576805050ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {9981815931256477052ull, 0, 1, 0ull << 32}, {
                9981815931256477052ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {4701687725348235547ull, 0, 1, 0ull << 32}, {
                4701687725348235547ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                4701687725348235547ull,
                sizeof(cv::ocl::PlatformInfo*),
                rustcpp::AlignOf<cv::ocl::PlatformInfo*>::value,
                rustcpp::Flags<cv::ocl::PlatformInfo*>::value
            }, {165959253939335742ull, 0, 1, 0ull << 32}, {
                165959253939335742ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                165959253939335742ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                165959253939335742ull,
                sizeof(cv::ocl::PlatformInfo*),
                rustcpp::AlignOf<cv::ocl::PlatformInfo*>::value,
                rustcpp::Flags<cv::ocl::PlatformInfo*>::value
            }, {
                6373203709143175962ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                6373203709143175962ull,
                sizeof(const std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<const std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<const std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                6373203709143175962ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6128200382616540171ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                6128200382616540171ull,
                sizeof(const std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<const std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<const std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                6128200382616540171ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6514845154575022756ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                6514845154575022756ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                6514845154575022756ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6514845154575022756ull,
                sizeof(cv::ocl::PlatformInfo*),
                rustcpp::AlignOf<cv::ocl::PlatformInfo*>::value,
                rustcpp::Flags<cv::ocl::PlatformInfo*>::value
            }, {18083312154585202053ull, 0, 1, 0ull << 32}, {
                18083312154585202053ull,
                sizeof(std::vector<cv::ocl::PlatformInfo>*),
                rustcpp::AlignOf<std::vector<cv::ocl::PlatformInfo>*>::value,
                rustcpp::Flags<std::vector<cv::ocl::PlatformInfo>*>::value
            }, {
                18083312154585202053ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                18083312154585202053ull,
                sizeof(cv::ocl::PlatformInfo*),
                rustcpp::AlignOf<cv::ocl::PlatformInfo*>::value,
                rustcpp::Flags<cv::ocl::PlatformInfo*>::value
            }, {
                10127192725658080816ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                10127192725658080816ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {3523428955429592721ull, 0, 1, 0ull << 32}, {
                3523428955429592721ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                2138530042574566550ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12255878100343471988ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                12255878100343471988ull,
                sizeof(const std::vector<cv::Point>*),
                rustcpp::AlignOf<const std::vector<cv::Point>*>::value,
                rustcpp::Flags<const std::vector<cv::Point>*>::value
            }, {
                3543857541920974296ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                3543857541920974296ull,
                sizeof(const std::vector<cv::Point>*),
                rustcpp::AlignOf<const std::vector<cv::Point>*>::value,
                rustcpp::Flags<const std::vector<cv::Point>*>::value
            }, {
                15089626210623532686ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                15089626210623532686ull,
                sizeof(const std::vector<cv::Point>*),
                rustcpp::AlignOf<const std::vector<cv::Point>*>::value,
                rustcpp::Flags<const std::vector<cv::Point>*>::value
            }, {9615939534272500879ull, 0, 1, 0ull << 32}, {
                9615939534272500879ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {7013655254240822061ull, 0, 1, 0ull << 32}, {
                7013655254240822061ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                7013655254240822061ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {15995112325951445392ull, 0, 1, 0ull << 32}, {
                15995112325951445392ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                15995112325951445392ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {6403876985203814927ull, 0, 1, 0ull << 32}, {
                6403876985203814927ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                6403876985203814927ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6403876985203814927ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {7890612104626144721ull, 0, 1, 0ull << 32}, {
                7890612104626144721ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {14725258169775119719ull, 0, 1, 0ull << 32}, {
                14725258169775119719ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                14725258169775119719ull,
                sizeof(cv::Point),
                rustcpp::AlignOf<cv::Point>::value,
                rustcpp::Flags<cv::Point>::value
            }, {7022067587516059625ull, 0, 1, 0ull << 32}, {
                7022067587516059625ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                7022067587516059625ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7022067587516059625ull,
                sizeof(cv::Point),
                rustcpp::AlignOf<cv::Point>::value,
                rustcpp::Flags<cv::Point>::value
            }, {
                12600104484046824334ull,
                sizeof(cv_return_value_PointWrapper),
                rustcpp::AlignOf<cv_return_value_PointWrapper>::value,
                rustcpp::Flags<cv_return_value_PointWrapper>::value | 0ull << 32
            }, {
                12600104484046824334ull,
                sizeof(const std::vector<PointWrapper>*),
                rustcpp::AlignOf<const std::vector<PointWrapper>*>::value,
                rustcpp::Flags<const std::vector<PointWrapper>*>::value
            }, {
                12600104484046824334ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9533006340611913954ull,
                sizeof(PointWrapper),
                rustcpp::AlignOf<PointWrapper>::value,
                rustcpp::Flags<PointWrapper>::value | 0ull << 32
            }, {
                9533006340611913954ull,
                sizeof(const std::vector<PointWrapper>*),
                rustcpp::AlignOf<const std::vector<PointWrapper>*>::value,
                rustcpp::Flags<const std::vector<PointWrapper>*>::value
            }, {
                9533006340611913954ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5869189322349989879ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                5869189322349989879ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                5869189322349989879ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5869189322349989879ull,
                sizeof(cv::Point),
                rustcpp::AlignOf<cv::Point>::value,
                rustcpp::Flags<cv::Point>::value
            }, {4811537345658720637ull, 0, 1, 0ull << 32}, {
                4811537345658720637ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                4811537345658720637ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4811537345658720637ull,
                sizeof(cv::Point),
                rustcpp::AlignOf<cv::Point>::value,
                rustcpp::Flags<cv::Point>::value
            }, {
                13054136516908161917ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                13054136516908161917ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                12528936146825516047ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                12528936146825516047ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                3916005042708683518ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                3916005042708683518ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                12899954413737594519ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                12899954413737594519ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {1925013709914666641ull, 0, 1, 0ull << 32}, {
                1925013709914666641ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                9204881297672328742ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                7215352591383200281ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                7215352591383200281ull,
                sizeof(const std::vector<cv::Point2d>*),
                rustcpp::AlignOf<const std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<const std::vector<cv::Point2d>*>::value
            }, {
                17363058892557585324ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                17363058892557585324ull,
                sizeof(const std::vector<cv::Point2d>*),
                rustcpp::AlignOf<const std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<const std::vector<cv::Point2d>*>::value
            }, {
                9142766719015828928ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                9142766719015828928ull,
                sizeof(const std::vector<cv::Point2d>*),
                rustcpp::AlignOf<const std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<const std::vector<cv::Point2d>*>::value
            }, {6708267945059595350ull, 0, 1, 0ull << 32}, {
                6708267945059595350ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {4434955916422261490ull, 0, 1, 0ull << 32}, {
                4434955916422261490ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                4434955916422261490ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16432587579838645728ull, 0, 1, 0ull << 32}, {
                16432587579838645728ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                16432587579838645728ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {17164859806426824744ull, 0, 1, 0ull << 32}, {
                17164859806426824744ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                17164859806426824744ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17164859806426824744ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2096496703231076038ull, 0, 1, 0ull << 32}, {
                2096496703231076038ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {8807101850663106210ull, 0, 1, 0ull << 32}, {
                8807101850663106210ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                8807101850663106210ull,
                sizeof(cv::Point2d),
                rustcpp::AlignOf<cv::Point2d>::value,
                rustcpp::Flags<cv::Point2d>::value
            }, {6633138804190272196ull, 0, 1, 0ull << 32}, {
                6633138804190272196ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                6633138804190272196ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6633138804190272196ull,
                sizeof(cv::Point2d),
                rustcpp::AlignOf<cv::Point2d>::value,
                rustcpp::Flags<cv::Point2d>::value
            }, {
                17798444042869996655ull,
                sizeof(cv_return_value_Point2dWrapper),
                rustcpp::AlignOf<cv_return_value_Point2dWrapper>::value,
                rustcpp::Flags<cv_return_value_Point2dWrapper>::value | 0ull << 32
            }, {
                17798444042869996655ull,
                sizeof(const std::vector<Point2dWrapper>*),
                rustcpp::AlignOf<const std::vector<Point2dWrapper>*>::value,
                rustcpp::Flags<const std::vector<Point2dWrapper>*>::value
            }, {
                17798444042869996655ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                14062662719751766372ull,
                sizeof(Point2dWrapper),
                rustcpp::AlignOf<Point2dWrapper>::value,
                rustcpp::Flags<Point2dWrapper>::value | 0ull << 32
            }, {
                14062662719751766372ull,
                sizeof(const std::vector<Point2dWrapper>*),
                rustcpp::AlignOf<const std::vector<Point2dWrapper>*>::value,
                rustcpp::Flags<const std::vector<Point2dWrapper>*>::value
            }, {
                14062662719751766372ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11563247691525514163ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                11563247691525514163ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                11563247691525514163ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11563247691525514163ull,
                sizeof(cv::Point2d),
                rustcpp::AlignOf<cv::Point2d>::value,
                rustcpp::Flags<cv::Point2d>::value
            }, {4583210165403378579ull, 0, 1, 0ull << 32}, {
                4583210165403378579ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                4583210165403378579ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4583210165403378579ull,
                sizeof(cv::Point2d),
                rustcpp::AlignOf<cv::Point2d>::value,
                rustcpp::Flags<cv::Point2d>::value
            }, {
                12897955265653469626ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                12897955265653469626ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                13834763541077351001ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                13834763541077351001ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                12289774926082794030ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                12289774926082794030ull,
                sizeof(std::vector<cv::Point2d>*),
                rustcpp::AlignOf<std::vector<cv::Point2d>*>::value,
                rustcpp::Flags<std::vector<cv::Point2d>*>::value
            }, {
                1749729371231946824ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                1749729371231946824ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {1027993501224281064ull, 0, 1, 0ull << 32}, {
                1027993501224281064ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                6017554945182778551ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                6500533226428288564ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                6500533226428288564ull,
                sizeof(const std::vector<cv::Point2f>*),
                rustcpp::AlignOf<const std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<const std::vector<cv::Point2f>*>::value
            }, {
                9406104712564298758ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                9406104712564298758ull,
                sizeof(const std::vector<cv::Point2f>*),
                rustcpp::AlignOf<const std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<const std::vector<cv::Point2f>*>::value
            }, {
                1973651749324747342ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                1973651749324747342ull,
                sizeof(const std::vector<cv::Point2f>*),
                rustcpp::AlignOf<const std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<const std::vector<cv::Point2f>*>::value
            }, {17345620041060455012ull, 0, 1, 0ull << 32}, {
                17345620041060455012ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {17647222476551174519ull, 0, 1, 0ull << 32}, {
                17647222476551174519ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                17647222476551174519ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {10277426571646665374ull, 0, 1, 0ull << 32}, {
                10277426571646665374ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                10277426571646665374ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16151829952712471657ull, 0, 1, 0ull << 32}, {
                16151829952712471657ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                16151829952712471657ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16151829952712471657ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {12737672207277686482ull, 0, 1, 0ull << 32}, {
                12737672207277686482ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {9996937147095397007ull, 0, 1, 0ull << 32}, {
                9996937147095397007ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                9996937147095397007ull,
                sizeof(cv::Point2f),
                rustcpp::AlignOf<cv::Point2f>::value,
                rustcpp::Flags<cv::Point2f>::value
            }, {13660462130579164954ull, 0, 1, 0ull << 32}, {
                13660462130579164954ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                13660462130579164954ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13660462130579164954ull,
                sizeof(cv::Point2f),
                rustcpp::AlignOf<cv::Point2f>::value,
                rustcpp::Flags<cv::Point2f>::value
            }, {
                1485408643131030519ull,
                sizeof(cv_return_value_Point2fWrapper),
                rustcpp::AlignOf<cv_return_value_Point2fWrapper>::value,
                rustcpp::Flags<cv_return_value_Point2fWrapper>::value | 0ull << 32
            }, {
                1485408643131030519ull,
                sizeof(const std::vector<Point2fWrapper>*),
                rustcpp::AlignOf<const std::vector<Point2fWrapper>*>::value,
                rustcpp::Flags<const std::vector<Point2fWrapper>*>::value
            }, {
                1485408643131030519ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                660535829859076390ull,
                sizeof(Point2fWrapper),
                rustcpp::AlignOf<Point2fWrapper>::value,
                rustcpp::Flags<Point2fWrapper>::value | 0ull << 32
            }, {
                660535829859076390ull,
                sizeof(const std::vector<Point2fWrapper>*),
                rustcpp::AlignOf<const std::vector<Point2fWrapper>*>::value,
                rustcpp::Flags<const std::vector<Point2fWrapper>*>::value
            }, {
                660535829859076390ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                643908638804792405ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                643908638804792405ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                643908638804792405ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                643908638804792405ull,
                sizeof(cv::Point2f),
                rustcpp::AlignOf<cv::Point2f>::value,
                rustcpp::Flags<cv::Point2f>::value
            }, {8937148540663579338ull, 0, 1, 0ull << 32}, {
                8937148540663579338ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                8937148540663579338ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8937148540663579338ull,
                sizeof(cv::Point2f),
                rustcpp::AlignOf<cv::Point2f>::value,
                rustcpp::Flags<cv::Point2f>::value
            }, {
                6501306244844533061ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                6501306244844533061ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                15625157317057707050ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                15625157317057707050ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                15674960075915773156ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                15674960075915773156ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {11395106222305171108ull, 0, 1, 0ull << 32}, {
                11395106222305171108ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                9745933487529887107ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                10926176383685688393ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                10926176383685688393ull,
                sizeof(const std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                12289786863829178469ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                12289786863829178469ull,
                sizeof(const std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                1034021964870035599ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                1034021964870035599ull,
                sizeof(const std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {16178351654835463674ull, 0, 1, 0ull << 32}, {
                16178351654835463674ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {8849839264966944014ull, 0, 1, 0ull << 32}, {
                8849839264966944014ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                8849839264966944014ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4007056540408517009ull, 0, 1, 0ull << 32}, {
                4007056540408517009ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                4007056540408517009ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4186636037479049958ull, 0, 1, 0ull << 32}, {
                4186636037479049958ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                4186636037479049958ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4186636037479049958ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {17747140008867646479ull, 0, 1, 0ull << 32}, {
                17747140008867646479ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {1444989490158640056ull, 0, 1, 0ull << 32}, {
                1444989490158640056ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                1444989490158640056ull,
                sizeof(Ptr<cv::dnn::BackendWrapper>*),
                rustcpp::AlignOf<Ptr<cv::dnn::BackendWrapper>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::BackendWrapper>*>::value
            }, {1691186043311835198ull, 0, 1, 0ull << 32}, {
                1691186043311835198ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                1691186043311835198ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1691186043311835198ull,
                sizeof(Ptr<cv::dnn::BackendWrapper>*),
                rustcpp::AlignOf<Ptr<cv::dnn::BackendWrapper>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::BackendWrapper>*>::value
            }, {
                14896680639108245926ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                14896680639108245926ull,
                sizeof(const std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                14896680639108245926ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                12834903050383879000ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12834903050383879000ull,
                sizeof(const std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                12834903050383879000ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1965537016258864855ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                1965537016258864855ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                1965537016258864855ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1965537016258864855ull,
                sizeof(Ptr<cv::dnn::BackendWrapper>*),
                rustcpp::AlignOf<Ptr<cv::dnn::BackendWrapper>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::BackendWrapper>*>::value
            }, {11935634816170607294ull, 0, 1, 0ull << 32}, {
                11935634816170607294ull,
                sizeof(std::vector<Ptr<cv::dnn::BackendWrapper>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::BackendWrapper>>*>::value
            }, {
                11935634816170607294ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11935634816170607294ull,
                sizeof(Ptr<cv::dnn::BackendWrapper>*),
                rustcpp::AlignOf<Ptr<cv::dnn::BackendWrapper>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::BackendWrapper>*>::value
            }, {11389512060058586430ull, 0, 1, 0ull << 32}, {
                11389512060058586430ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                7934789091107660186ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9113175116214191642ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                9113175116214191642ull,
                sizeof(const std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                13874362182199071435ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                13874362182199071435ull,
                sizeof(const std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                6018126179161832252ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                6018126179161832252ull,
                sizeof(const std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {10001984156161543391ull, 0, 1, 0ull << 32}, {
                10001984156161543391ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {5420389280725153164ull, 0, 1, 0ull << 32}, {
                5420389280725153164ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                5420389280725153164ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4357831636087376914ull, 0, 1, 0ull << 32}, {
                4357831636087376914ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                4357831636087376914ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16929738470936292174ull, 0, 1, 0ull << 32}, {
                16929738470936292174ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                16929738470936292174ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16929738470936292174ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {17142639161577187836ull, 0, 1, 0ull << 32}, {
                17142639161577187836ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {14502085412129700486ull, 0, 1, 0ull << 32}, {
                14502085412129700486ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                14502085412129700486ull,
                sizeof(Ptr<cv::dnn::Layer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::Layer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::Layer>*>::value
            }, {1804180953320539395ull, 0, 1, 0ull << 32}, {
                1804180953320539395ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                1804180953320539395ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1804180953320539395ull,
                sizeof(Ptr<cv::dnn::Layer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::Layer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::Layer>*>::value
            }, {
                1370148101324567880ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                1370148101324567880ull,
                sizeof(const std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                1370148101324567880ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                12389557394583481240ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12389557394583481240ull,
                sizeof(const std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<const std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<const std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                12389557394583481240ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16413673580868880525ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                16413673580868880525ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                16413673580868880525ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16413673580868880525ull,
                sizeof(Ptr<cv::dnn::Layer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::Layer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::Layer>*>::value
            }, {14008432027827947235ull, 0, 1, 0ull << 32}, {
                14008432027827947235ull,
                sizeof(std::vector<Ptr<cv::dnn::Layer>>*),
                rustcpp::AlignOf<std::vector<Ptr<cv::dnn::Layer>>*>::value,
                rustcpp::Flags<std::vector<Ptr<cv::dnn::Layer>>*>::value
            }, {
                14008432027827947235ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                14008432027827947235ull,
                sizeof(Ptr<cv::dnn::Layer>*),
                rustcpp::AlignOf<Ptr<cv::dnn::Layer>*>::value,
                rustcpp::Flags<Ptr<cv::dnn::Layer>*>::value
            }, {13433143342724477536ull, 0, 1, 0ull << 32}, {
                13433143342724477536ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {
                17428453450227318276ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                2696409778385324919ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                2696409778385324919ull,
                sizeof(const std::vector<cv::Range>*),
                rustcpp::AlignOf<const std::vector<cv::Range>*>::value,
                rustcpp::Flags<const std::vector<cv::Range>*>::value
            }, {
                12099548550174063593ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                12099548550174063593ull,
                sizeof(const std::vector<cv::Range>*),
                rustcpp::AlignOf<const std::vector<cv::Range>*>::value,
                rustcpp::Flags<const std::vector<cv::Range>*>::value
            }, {
                3534003152777170843ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                3534003152777170843ull,
                sizeof(const std::vector<cv::Range>*),
                rustcpp::AlignOf<const std::vector<cv::Range>*>::value,
                rustcpp::Flags<const std::vector<cv::Range>*>::value
            }, {14767301862022110970ull, 0, 1, 0ull << 32}, {
                14767301862022110970ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {909387419731652739ull, 0, 1, 0ull << 32}, {
                909387419731652739ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {
                909387419731652739ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {916813890329713908ull, 0, 1, 0ull << 32}, {
                916813890329713908ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {
                916813890329713908ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {12892681680293399075ull, 0, 1, 0ull << 32}, {
                12892681680293399075ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {
                12892681680293399075ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                12892681680293399075ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {13662239455161325975ull, 0, 1, 0ull << 32}, {
                13662239455161325975ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {15953235023365269323ull, 0, 1, 0ull << 32}, {
                15953235023365269323ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {
                15953235023365269323ull,
                sizeof(cv::Range*),
                rustcpp::AlignOf<cv::Range*>::value,
                rustcpp::Flags<cv::Range*>::value
            }, {13722320996067643050ull, 0, 1, 0ull << 32}, {
                13722320996067643050ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {
                13722320996067643050ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13722320996067643050ull,
                sizeof(cv::Range*),
                rustcpp::AlignOf<cv::Range*>::value,
                rustcpp::Flags<cv::Range*>::value
            }, {
                14972091081427682479ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                14972091081427682479ull,
                sizeof(const std::vector<cv::Range>*),
                rustcpp::AlignOf<const std::vector<cv::Range>*>::value,
                rustcpp::Flags<const std::vector<cv::Range>*>::value
            }, {
                14972091081427682479ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13974589536686832444ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13974589536686832444ull,
                sizeof(const std::vector<cv::Range>*),
                rustcpp::AlignOf<const std::vector<cv::Range>*>::value,
                rustcpp::Flags<const std::vector<cv::Range>*>::value
            }, {
                13974589536686832444ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3778325513203389249ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                3778325513203389249ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {
                3778325513203389249ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3778325513203389249ull,
                sizeof(cv::Range*),
                rustcpp::AlignOf<cv::Range*>::value,
                rustcpp::Flags<cv::Range*>::value
            }, {7151275484090319177ull, 0, 1, 0ull << 32}, {
                7151275484090319177ull,
                sizeof(std::vector<cv::Range>*),
                rustcpp::AlignOf<std::vector<cv::Range>*>::value,
                rustcpp::Flags<std::vector<cv::Range>*>::value
            }, {
                7151275484090319177ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7151275484090319177ull,
                sizeof(cv::Range*),
                rustcpp::AlignOf<cv::Range*>::value,
                rustcpp::Flags<cv::Range*>::value
            }, {
                11434930040139326697ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                11434930040139326697ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {6812614493966123624ull, 0, 1, 0ull << 32}, {
                6812614493966123624ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                6457203752720500281ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12928783689005363263ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                12928783689005363263ull,
                sizeof(const std::vector<cv::Rect>*),
                rustcpp::AlignOf<const std::vector<cv::Rect>*>::value,
                rustcpp::Flags<const std::vector<cv::Rect>*>::value
            }, {
                11155627531800914114ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                11155627531800914114ull,
                sizeof(const std::vector<cv::Rect>*),
                rustcpp::AlignOf<const std::vector<cv::Rect>*>::value,
                rustcpp::Flags<const std::vector<cv::Rect>*>::value
            }, {
                16629053117815024630ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16629053117815024630ull,
                sizeof(const std::vector<cv::Rect>*),
                rustcpp::AlignOf<const std::vector<cv::Rect>*>::value,
                rustcpp::Flags<const std::vector<cv::Rect>*>::value
            }, {8535322523711682137ull, 0, 1, 0ull << 32}, {
                8535322523711682137ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {1034814929567427000ull, 0, 1, 0ull << 32}, {
                1034814929567427000ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                1034814929567427000ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {15369183517468200993ull, 0, 1, 0ull << 32}, {
                15369183517468200993ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                15369183517468200993ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {10404008796021454729ull, 0, 1, 0ull << 32}, {
                10404008796021454729ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                10404008796021454729ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                10404008796021454729ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {1259926786611202983ull, 0, 1, 0ull << 32}, {
                1259926786611202983ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {264186808603400666ull, 0, 1, 0ull << 32}, {
                264186808603400666ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                264186808603400666ull,
                sizeof(cv::Rect),
                rustcpp::AlignOf<cv::Rect>::value,
                rustcpp::Flags<cv::Rect>::value
            }, {15925325401229091487ull, 0, 1, 0ull << 32}, {
                15925325401229091487ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                15925325401229091487ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15925325401229091487ull,
                sizeof(cv::Rect),
                rustcpp::AlignOf<cv::Rect>::value,
                rustcpp::Flags<cv::Rect>::value
            }, {
                3837930138998569530ull,
                sizeof(cv_return_value_RectWrapper),
                rustcpp::AlignOf<cv_return_value_RectWrapper>::value,
                rustcpp::Flags<cv_return_value_RectWrapper>::value | 0ull << 32
            }, {
                3837930138998569530ull,
                sizeof(const std::vector<RectWrapper>*),
                rustcpp::AlignOf<const std::vector<RectWrapper>*>::value,
                rustcpp::Flags<const std::vector<RectWrapper>*>::value
            }, {
                3837930138998569530ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11886125742292251876ull,
                sizeof(RectWrapper),
                rustcpp::AlignOf<RectWrapper>::value,
                rustcpp::Flags<RectWrapper>::value | 0ull << 32
            }, {
                11886125742292251876ull,
                sizeof(const std::vector<RectWrapper>*),
                rustcpp::AlignOf<const std::vector<RectWrapper>*>::value,
                rustcpp::Flags<const std::vector<RectWrapper>*>::value
            }, {
                11886125742292251876ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11361758034698509239ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                11361758034698509239ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                11361758034698509239ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11361758034698509239ull,
                sizeof(cv::Rect),
                rustcpp::AlignOf<cv::Rect>::value,
                rustcpp::Flags<cv::Rect>::value
            }, {12378616479128506132ull, 0, 1, 0ull << 32}, {
                12378616479128506132ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                12378616479128506132ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                12378616479128506132ull,
                sizeof(cv::Rect),
                rustcpp::AlignOf<cv::Rect>::value,
                rustcpp::Flags<cv::Rect>::value
            }, {
                14552182672254287737ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                14552182672254287737ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                13737518422531892311ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                13737518422531892311ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                13301379066570084156ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                13301379066570084156ull,
                sizeof(std::vector<cv::Rect>*),
                rustcpp::AlignOf<std::vector<cv::Rect>*>::value,
                rustcpp::Flags<std::vector<cv::Rect>*>::value
            }, {
                16519192794703949958ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                16519192794703949958ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {14909778594428921438ull, 0, 1, 0ull << 32}, {
                14909778594428921438ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                6288981157586266503ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                7063978907145169538ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                7063978907145169538ull,
                sizeof(const std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<const std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<const std::vector<cv::Rect2d>*>::value
            }, {
                15724219806246504704ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                15724219806246504704ull,
                sizeof(const std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<const std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<const std::vector<cv::Rect2d>*>::value
            }, {
                14529692027047757831ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                14529692027047757831ull,
                sizeof(const std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<const std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<const std::vector<cv::Rect2d>*>::value
            }, {3162906424855102746ull, 0, 1, 0ull << 32}, {
                3162906424855102746ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {2395038745517377701ull, 0, 1, 0ull << 32}, {
                2395038745517377701ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                2395038745517377701ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5049706281881163533ull, 0, 1, 0ull << 32}, {
                5049706281881163533ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                5049706281881163533ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4169064010958578592ull, 0, 1, 0ull << 32}, {
                4169064010958578592ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                4169064010958578592ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4169064010958578592ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {14487934405220297021ull, 0, 1, 0ull << 32}, {
                14487934405220297021ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {15318015849231923861ull, 0, 1, 0ull << 32}, {
                15318015849231923861ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                15318015849231923861ull,
                sizeof(cv::Rect2d),
                rustcpp::AlignOf<cv::Rect2d>::value,
                rustcpp::Flags<cv::Rect2d>::value
            }, {12530760749470658516ull, 0, 1, 0ull << 32}, {
                12530760749470658516ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                12530760749470658516ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                12530760749470658516ull,
                sizeof(cv::Rect2d),
                rustcpp::AlignOf<cv::Rect2d>::value,
                rustcpp::Flags<cv::Rect2d>::value
            }, {
                17079474018860622053ull,
                sizeof(cv_return_value_Rect2dWrapper),
                rustcpp::AlignOf<cv_return_value_Rect2dWrapper>::value,
                rustcpp::Flags<cv_return_value_Rect2dWrapper>::value | 0ull << 32
            }, {
                17079474018860622053ull,
                sizeof(const std::vector<Rect2dWrapper>*),
                rustcpp::AlignOf<const std::vector<Rect2dWrapper>*>::value,
                rustcpp::Flags<const std::vector<Rect2dWrapper>*>::value
            }, {
                17079474018860622053ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                262793490813687111ull,
                sizeof(Rect2dWrapper),
                rustcpp::AlignOf<Rect2dWrapper>::value,
                rustcpp::Flags<Rect2dWrapper>::value | 0ull << 32
            }, {
                262793490813687111ull,
                sizeof(const std::vector<Rect2dWrapper>*),
                rustcpp::AlignOf<const std::vector<Rect2dWrapper>*>::value,
                rustcpp::Flags<const std::vector<Rect2dWrapper>*>::value
            }, {
                262793490813687111ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3053995220299493405ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                3053995220299493405ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                3053995220299493405ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3053995220299493405ull,
                sizeof(cv::Rect2d),
                rustcpp::AlignOf<cv::Rect2d>::value,
                rustcpp::Flags<cv::Rect2d>::value
            }, {17688724565758848562ull, 0, 1, 0ull << 32}, {
                17688724565758848562ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                17688724565758848562ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17688724565758848562ull,
                sizeof(cv::Rect2d),
                rustcpp::AlignOf<cv::Rect2d>::value,
                rustcpp::Flags<cv::Rect2d>::value
            }, {
                12583969446794639962ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                12583969446794639962ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                14799640012082541243ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                14799640012082541243ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {
                1203804270310531134ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                1203804270310531134ull,
                sizeof(std::vector<cv::Rect2d>*),
                rustcpp::AlignOf<std::vector<cv::Rect2d>*>::value,
                rustcpp::Flags<std::vector<cv::Rect2d>*>::value
            }, {1012399829130687101ull, 0, 1, 0ull << 32}, {
                1012399829130687101ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {
                15309602264983100435ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14939811076060210048ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                14939811076060210048ull,
                sizeof(const std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<const std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<const std::vector<cv::RotatedRect>*>::value
            }, {
                16448941599480803842ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                16448941599480803842ull,
                sizeof(const std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<const std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<const std::vector<cv::RotatedRect>*>::value
            }, {
                7348631561206075330ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                7348631561206075330ull,
                sizeof(const std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<const std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<const std::vector<cv::RotatedRect>*>::value
            }, {10324053753819767065ull, 0, 1, 0ull << 32}, {
                10324053753819767065ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {102454344150746201ull, 0, 1, 0ull << 32}, {
                102454344150746201ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {
                102454344150746201ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {11742046628370692556ull, 0, 1, 0ull << 32}, {
                11742046628370692556ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {
                11742046628370692556ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4123590029229143487ull, 0, 1, 0ull << 32}, {
                4123590029229143487ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {
                4123590029229143487ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4123590029229143487ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {8199512711806360130ull, 0, 1, 0ull << 32}, {
                8199512711806360130ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {2884706173958341651ull, 0, 1, 0ull << 32}, {
                2884706173958341651ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {
                2884706173958341651ull,
                sizeof(cv::RotatedRect*),
                rustcpp::AlignOf<cv::RotatedRect*>::value,
                rustcpp::Flags<cv::RotatedRect*>::value
            }, {15340675902796411274ull, 0, 1, 0ull << 32}, {
                15340675902796411274ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {
                15340675902796411274ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15340675902796411274ull,
                sizeof(cv::RotatedRect*),
                rustcpp::AlignOf<cv::RotatedRect*>::value,
                rustcpp::Flags<cv::RotatedRect*>::value
            }, {
                6081485321105515719ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                6081485321105515719ull,
                sizeof(const std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<const std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<const std::vector<cv::RotatedRect>*>::value
            }, {
                6081485321105515719ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3684391241037659583ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3684391241037659583ull,
                sizeof(const std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<const std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<const std::vector<cv::RotatedRect>*>::value
            }, {
                3684391241037659583ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2494728691906045356ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                2494728691906045356ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {
                2494728691906045356ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2494728691906045356ull,
                sizeof(cv::RotatedRect*),
                rustcpp::AlignOf<cv::RotatedRect*>::value,
                rustcpp::Flags<cv::RotatedRect*>::value
            }, {35712634098607505ull, 0, 1, 0ull << 32}, {
                35712634098607505ull,
                sizeof(std::vector<cv::RotatedRect>*),
                rustcpp::AlignOf<std::vector<cv::RotatedRect>*>::value,
                rustcpp::Flags<std::vector<cv::RotatedRect>*>::value
            }, {
                35712634098607505ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                35712634098607505ull,
                sizeof(cv::RotatedRect*),
                rustcpp::AlignOf<cv::RotatedRect*>::value,
                rustcpp::Flags<cv::RotatedRect*>::value
            }, {969881261307479769ull, 0, 1, 0ull << 32}, {
                969881261307479769ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                11724963082178284383ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9422587868917141771ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                9422587868917141771ull,
                sizeof(const std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                3110359217436223331ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                3110359217436223331ull,
                sizeof(const std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                3125754940443770540ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                3125754940443770540ull,
                sizeof(const std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Split>*>::value
            }, {2863318340851540326ull, 0, 1, 0ull << 32}, {
                2863318340851540326ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {15069073141415578210ull, 0, 1, 0ull << 32}, {
                15069073141415578210ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                15069073141415578210ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {13978445043890045904ull, 0, 1, 0ull << 32}, {
                13978445043890045904ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                13978445043890045904ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {13489585154246197541ull, 0, 1, 0ull << 32}, {
                13489585154246197541ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                13489585154246197541ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13489585154246197541ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4320214320389843682ull, 0, 1, 0ull << 32}, {
                4320214320389843682ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {17591663123156522352ull, 0, 1, 0ull << 32}, {
                17591663123156522352ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                17591663123156522352ull,
                sizeof(cv::ml::DTrees::Split*),
                rustcpp::AlignOf<cv::ml::DTrees::Split*>::value,
                rustcpp::Flags<cv::ml::DTrees::Split*>::value
            }, {5560306246138625427ull, 0, 1, 0ull << 32}, {
                5560306246138625427ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                5560306246138625427ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5560306246138625427ull,
                sizeof(cv::ml::DTrees::Split*),
                rustcpp::AlignOf<cv::ml::DTrees::Split*>::value,
                rustcpp::Flags<cv::ml::DTrees::Split*>::value
            }, {
                7136712777248308495ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                7136712777248308495ull,
                sizeof(const std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                7136712777248308495ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4681915486676247474ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                4681915486676247474ull,
                sizeof(const std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<const std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<const std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                4681915486676247474ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3503935367860000440ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                3503935367860000440ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                3503935367860000440ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3503935367860000440ull,
                sizeof(cv::ml::DTrees::Split*),
                rustcpp::AlignOf<cv::ml::DTrees::Split*>::value,
                rustcpp::Flags<cv::ml::DTrees::Split*>::value
            }, {6126616559346312093ull, 0, 1, 0ull << 32}, {
                6126616559346312093ull,
                sizeof(std::vector<cv::ml::DTrees::Split>*),
                rustcpp::AlignOf<std::vector<cv::ml::DTrees::Split>*>::value,
                rustcpp::Flags<std::vector<cv::ml::DTrees::Split>*>::value
            }, {
                6126616559346312093ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6126616559346312093ull,
                sizeof(cv::ml::DTrees::Split*),
                rustcpp::AlignOf<cv::ml::DTrees::Split*>::value,
                rustcpp::Flags<cv::ml::DTrees::Split*>::value
            }, {14743565144710452647ull, 0, 1, 0ull << 32}, {
                14743565144710452647ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {
                8473856571487173027ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16777305012589039597ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16777305012589039597ull,
                sizeof(const std::vector<String>*),
                rustcpp::AlignOf<const std::vector<String>*>::value,
                rustcpp::Flags<const std::vector<String>*>::value
            }, {
                3905768703171794432ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                3905768703171794432ull,
                sizeof(const std::vector<String>*),
                rustcpp::AlignOf<const std::vector<String>*>::value,
                rustcpp::Flags<const std::vector<String>*>::value
            }, {
                5491067930410938813ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                5491067930410938813ull,
                sizeof(const std::vector<String>*),
                rustcpp::AlignOf<const std::vector<String>*>::value,
                rustcpp::Flags<const std::vector<String>*>::value
            }, {4783622799100426322ull, 0, 1, 0ull << 32}, {
                4783622799100426322ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {1514262001629049601ull, 0, 1, 0ull << 32}, {
                1514262001629049601ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {
                1514262001629049601ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4365731492906444979ull, 0, 1, 0ull << 32}, {
                4365731492906444979ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {
                4365731492906444979ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {9883839228113814579ull, 0, 1, 0ull << 32}, {
                9883839228113814579ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {
                9883839228113814579ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9883839228113814579ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16612165931204642516ull, 0, 1, 0ull << 32}, {
                16612165931204642516ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {239052484275020499ull, 0, 1, 0ull << 32}, {
                239052484275020499ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {
                239052484275020499ull,
                sizeof(const char*),
                rustcpp::AlignOf<const char*>::value,
                rustcpp::Flags<const char*>::value
            }, {8042566519804652600ull, 0, 1, 0ull << 32}, {
                8042566519804652600ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {
                8042566519804652600ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8042566519804652600ull,
                sizeof(const char*),
                rustcpp::AlignOf<const char*>::value,
                rustcpp::Flags<const char*>::value
            }, {
                10368257039966701131ull,
                sizeof(cv_return_value_char_X),
                rustcpp::AlignOf<cv_return_value_char_X>::value,
                rustcpp::Flags<cv_return_value_char_X>::value | 0ull << 32
            }, {
                10368257039966701131ull,
                sizeof(const std::vector<String>*),
                rustcpp::AlignOf<const std::vector<String>*>::value,
                rustcpp::Flags<const std::vector<String>*>::value
            }, {
                10368257039966701131ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15326761911659535196ull,
                sizeof(const char*),
                rustcpp::AlignOf<const char*>::value,
                rustcpp::Flags<const char*>::value | 0ull << 32
            }, {
                15326761911659535196ull,
                sizeof(const std::vector<String>*),
                rustcpp::AlignOf<const std::vector<String>*>::value,
                rustcpp::Flags<const std::vector<String>*>::value
            }, {
                15326761911659535196ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15001167523200360334ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                15001167523200360334ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {
                15001167523200360334ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15001167523200360334ull,
                sizeof(const char*),
                rustcpp::AlignOf<const char*>::value,
                rustcpp::Flags<const char*>::value
            }, {16929610970363223007ull, 0, 1, 0ull << 32}, {
                16929610970363223007ull,
                sizeof(std::vector<String>*),
                rustcpp::AlignOf<std::vector<String>*>::value,
                rustcpp::Flags<std::vector<String>*>::value
            }, {
                16929610970363223007ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16929610970363223007ull,
                sizeof(const char*),
                rustcpp::AlignOf<const char*>::value,
                rustcpp::Flags<const char*>::value
            }, {
                11729468018640902558ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                11729468018640902558ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {551607354963839144ull, 0, 1, 0ull << 32}, {
                551607354963839144ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {
                13489836703176393209ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12041041678734501034ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                12041041678734501034ull,
                sizeof(const std::vector<dnn::Target>*),
                rustcpp::AlignOf<const std::vector<dnn::Target>*>::value,
                rustcpp::Flags<const std::vector<dnn::Target>*>::value
            }, {
                18157263581177638857ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                18157263581177638857ull,
                sizeof(const std::vector<dnn::Target>*),
                rustcpp::AlignOf<const std::vector<dnn::Target>*>::value,
                rustcpp::Flags<const std::vector<dnn::Target>*>::value
            }, {
                7145421920314450802ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                7145421920314450802ull,
                sizeof(const std::vector<dnn::Target>*),
                rustcpp::AlignOf<const std::vector<dnn::Target>*>::value,
                rustcpp::Flags<const std::vector<dnn::Target>*>::value
            }, {8016178587669809781ull, 0, 1, 0ull << 32}, {
                8016178587669809781ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {296946928113494406ull, 0, 1, 0ull << 32}, {
                296946928113494406ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {
                296946928113494406ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4354054350227063662ull, 0, 1, 0ull << 32}, {
                4354054350227063662ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {
                4354054350227063662ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {11946546797054184756ull, 0, 1, 0ull << 32}, {
                11946546797054184756ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {
                11946546797054184756ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11946546797054184756ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {360919040657760072ull, 0, 1, 0ull << 32}, {
                360919040657760072ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {12982640760181859388ull, 0, 1, 0ull << 32}, {
                12982640760181859388ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {
                12982640760181859388ull,
                sizeof(dnn::Target),
                rustcpp::AlignOf<dnn::Target>::value,
                rustcpp::Flags<dnn::Target>::value
            }, {7645443474772181829ull, 0, 1, 0ull << 32}, {
                7645443474772181829ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {
                7645443474772181829ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7645443474772181829ull,
                sizeof(dnn::Target),
                rustcpp::AlignOf<dnn::Target>::value,
                rustcpp::Flags<dnn::Target>::value
            }, {
                15039080861075795895ull,
                sizeof(cv_return_value_dnn_Target),
                rustcpp::AlignOf<cv_return_value_dnn_Target>::value,
                rustcpp::Flags<cv_return_value_dnn_Target>::value | 0ull << 32
            }, {
                15039080861075795895ull,
                sizeof(const std::vector<dnn::Target>*),
                rustcpp::AlignOf<const std::vector<dnn::Target>*>::value,
                rustcpp::Flags<const std::vector<dnn::Target>*>::value
            }, {
                15039080861075795895ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8898480065428517093ull,
                sizeof(dnn::Target),
                rustcpp::AlignOf<dnn::Target>::value,
                rustcpp::Flags<dnn::Target>::value | 0ull << 32
            }, {
                8898480065428517093ull,
                sizeof(const std::vector<dnn::Target>*),
                rustcpp::AlignOf<const std::vector<dnn::Target>*>::value,
                rustcpp::Flags<const std::vector<dnn::Target>*>::value
            }, {
                8898480065428517093ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4453801335800421576ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                4453801335800421576ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {
                4453801335800421576ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4453801335800421576ull,
                sizeof(dnn::Target),
                rustcpp::AlignOf<dnn::Target>::value,
                rustcpp::Flags<dnn::Target>::value
            }, {4368305981663439456ull, 0, 1, 0ull << 32}, {
                4368305981663439456ull,
                sizeof(std::vector<dnn::Target>*),
                rustcpp::AlignOf<std::vector<dnn::Target>*>::value,
                rustcpp::Flags<std::vector<dnn::Target>*>::value
            }, {
                4368305981663439456ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4368305981663439456ull,
                sizeof(dnn::Target),
                rustcpp::AlignOf<dnn::Target>::value,
                rustcpp::Flags<dnn::Target>::value
            }, {7559991640610905803ull, 0, 1, 0ull << 32}, {
                7559991640610905803ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {
                4665633975307661029ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1679756378914043671ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                1679756378914043671ull,
                sizeof(const std::vector<cv::UMat>*),
                rustcpp::AlignOf<const std::vector<cv::UMat>*>::value,
                rustcpp::Flags<const std::vector<cv::UMat>*>::value
            }, {
                2561698872971623162ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                2561698872971623162ull,
                sizeof(const std::vector<cv::UMat>*),
                rustcpp::AlignOf<const std::vector<cv::UMat>*>::value,
                rustcpp::Flags<const std::vector<cv::UMat>*>::value
            }, {
                7339532577011974412ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                7339532577011974412ull,
                sizeof(const std::vector<cv::UMat>*),
                rustcpp::AlignOf<const std::vector<cv::UMat>*>::value,
                rustcpp::Flags<const std::vector<cv::UMat>*>::value
            }, {10996457000407292943ull, 0, 1, 0ull << 32}, {
                10996457000407292943ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {11130924115256697670ull, 0, 1, 0ull << 32}, {
                11130924115256697670ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {
                11130924115256697670ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {1499935527583319848ull, 0, 1, 0ull << 32}, {
                1499935527583319848ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {
                1499935527583319848ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {13010982541866783911ull, 0, 1, 0ull << 32}, {
                13010982541866783911ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {
                13010982541866783911ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13010982541866783911ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {11874249073706985517ull, 0, 1, 0ull << 32}, {
                11874249073706985517ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {15915737154921562709ull, 0, 1, 0ull << 32}, {
                15915737154921562709ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {
                15915737154921562709ull,
                sizeof(cv::UMat*),
                rustcpp::AlignOf<cv::UMat*>::value,
                rustcpp::Flags<cv::UMat*>::value
            }, {2280151568360639782ull, 0, 1, 0ull << 32}, {
                2280151568360639782ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {
                2280151568360639782ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2280151568360639782ull,
                sizeof(cv::UMat*),
                rustcpp::AlignOf<cv::UMat*>::value,
                rustcpp::Flags<cv::UMat*>::value
            }, {
                15835898251417732692ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                15835898251417732692ull,
                sizeof(const std::vector<cv::UMat>*),
                rustcpp::AlignOf<const std::vector<cv::UMat>*>::value,
                rustcpp::Flags<const std::vector<cv::UMat>*>::value
            }, {
                15835898251417732692ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13012637039193182140ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13012637039193182140ull,
                sizeof(const std::vector<cv::UMat>*),
                rustcpp::AlignOf<const std::vector<cv::UMat>*>::value,
                rustcpp::Flags<const std::vector<cv::UMat>*>::value
            }, {
                13012637039193182140ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7940144364121616532ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                7940144364121616532ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {
                7940144364121616532ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7940144364121616532ull,
                sizeof(cv::UMat*),
                rustcpp::AlignOf<cv::UMat*>::value,
                rustcpp::Flags<cv::UMat*>::value
            }, {4512692779912656852ull, 0, 1, 0ull << 32}, {
                4512692779912656852ull,
                sizeof(std::vector<cv::UMat>*),
                rustcpp::AlignOf<std::vector<cv::UMat>*>::value,
                rustcpp::Flags<std::vector<cv::UMat>*>::value
            }, {
                4512692779912656852ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4512692779912656852ull,
                sizeof(cv::UMat*),
                rustcpp::AlignOf<cv::UMat*>::value,
                rustcpp::Flags<cv::UMat*>::value
            }, {
                10851781922148935046ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                10851781922148935046ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {13610251967610367466ull, 0, 1, 0ull << 32}, {
                13610251967610367466ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                7056261786042434927ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11284398461446203933ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11284398461446203933ull,
                sizeof(const std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<const std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<const std::vector<cv::Vec4f>*>::value
            }, {
                8646756046752481958ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                8646756046752481958ull,
                sizeof(const std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<const std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<const std::vector<cv::Vec4f>*>::value
            }, {
                6950404629948340288ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                6950404629948340288ull,
                sizeof(const std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<const std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<const std::vector<cv::Vec4f>*>::value
            }, {1350655085897525220ull, 0, 1, 0ull << 32}, {
                1350655085897525220ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {3400943889333706285ull, 0, 1, 0ull << 32}, {
                3400943889333706285ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                3400943889333706285ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {17335424580194500091ull, 0, 1, 0ull << 32}, {
                17335424580194500091ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                17335424580194500091ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {13239936997721241181ull, 0, 1, 0ull << 32}, {
                13239936997721241181ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                13239936997721241181ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13239936997721241181ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4642655918096952479ull, 0, 1, 0ull << 32}, {
                4642655918096952479ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {18154320617401879328ull, 0, 1, 0ull << 32}, {
                18154320617401879328ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                18154320617401879328ull,
                sizeof(cv::Vec4f),
                rustcpp::AlignOf<cv::Vec4f>::value,
                rustcpp::Flags<cv::Vec4f>::value
            }, {5925902963928647241ull, 0, 1, 0ull << 32}, {
                5925902963928647241ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                5925902963928647241ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5925902963928647241ull,
                sizeof(cv::Vec4f),
                rustcpp::AlignOf<cv::Vec4f>::value,
                rustcpp::Flags<cv::Vec4f>::value
            }, {
                14136154484371068982ull,
                sizeof(cv_return_value_Vec4fWrapper),
                rustcpp::AlignOf<cv_return_value_Vec4fWrapper>::value,
                rustcpp::Flags<cv_return_value_Vec4fWrapper>::value | 0ull << 32
            }, {
                14136154484371068982ull,
                sizeof(const std::vector<Vec4fWrapper>*),
                rustcpp::AlignOf<const std::vector<Vec4fWrapper>*>::value,
                rustcpp::Flags<const std::vector<Vec4fWrapper>*>::value
            }, {
                14136154484371068982ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1899094065051535602ull,
                sizeof(Vec4fWrapper),
                rustcpp::AlignOf<Vec4fWrapper>::value,
                rustcpp::Flags<Vec4fWrapper>::value | 0ull << 32
            }, {
                1899094065051535602ull,
                sizeof(const std::vector<Vec4fWrapper>*),
                rustcpp::AlignOf<const std::vector<Vec4fWrapper>*>::value,
                rustcpp::Flags<const std::vector<Vec4fWrapper>*>::value
            }, {
                1899094065051535602ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17932719808655913526ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                17932719808655913526ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                17932719808655913526ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17932719808655913526ull,
                sizeof(cv::Vec4f),
                rustcpp::AlignOf<cv::Vec4f>::value,
                rustcpp::Flags<cv::Vec4f>::value
            }, {276009431145939540ull, 0, 1, 0ull << 32}, {
                276009431145939540ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                276009431145939540ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                276009431145939540ull,
                sizeof(cv::Vec4f),
                rustcpp::AlignOf<cv::Vec4f>::value,
                rustcpp::Flags<cv::Vec4f>::value
            }, {
                8154387389607306868ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                8154387389607306868ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                16726372485777908782ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                16726372485777908782ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                16177957556070122413ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                16177957556070122413ull,
                sizeof(std::vector<cv::Vec4f>*),
                rustcpp::AlignOf<std::vector<cv::Vec4f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec4f>*>::value
            }, {
                1344203729578324343ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                1344203729578324343ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {6111356685072919965ull, 0, 1, 0ull << 32}, {
                6111356685072919965ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {
                7310374095290468031ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14750051941090020561ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                14750051941090020561ull,
                sizeof(const std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<const std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<const std::vector<cv::Vec6f>*>::value
            }, {
                11103967190792501028ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                11103967190792501028ull,
                sizeof(const std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<const std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<const std::vector<cv::Vec6f>*>::value
            }, {
                17805377398967298091ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                17805377398967298091ull,
                sizeof(const std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<const std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<const std::vector<cv::Vec6f>*>::value
            }, {12108190308940749692ull, 0, 1, 0ull << 32}, {
                12108190308940749692ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {3295401302797818557ull, 0, 1, 0ull << 32}, {
                3295401302797818557ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {
                3295401302797818557ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5840254523100320555ull, 0, 1, 0ull << 32}, {
                5840254523100320555ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {
                5840254523100320555ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16658865889096080920ull, 0, 1, 0ull << 32}, {
                16658865889096080920ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {
                16658865889096080920ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16658865889096080920ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {7418956590939464407ull, 0, 1, 0ull << 32}, {
                7418956590939464407ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {10705417659538963804ull, 0, 1, 0ull << 32}, {
                10705417659538963804ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {
                10705417659538963804ull,
                sizeof(cv::Vec6f),
                rustcpp::AlignOf<cv::Vec6f>::value,
                rustcpp::Flags<cv::Vec6f>::value
            }, {13657543422748294178ull, 0, 1, 0ull << 32}, {
                13657543422748294178ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {
                13657543422748294178ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13657543422748294178ull,
                sizeof(cv::Vec6f),
                rustcpp::AlignOf<cv::Vec6f>::value,
                rustcpp::Flags<cv::Vec6f>::value
            }, {
                10205099180192590728ull,
                sizeof(cv_return_value_Vec6fWrapper),
                rustcpp::AlignOf<cv_return_value_Vec6fWrapper>::value,
                rustcpp::Flags<cv_return_value_Vec6fWrapper>::value | 0ull << 32
            }, {
                10205099180192590728ull,
                sizeof(const std::vector<Vec6fWrapper>*),
                rustcpp::AlignOf<const std::vector<Vec6fWrapper>*>::value,
                rustcpp::Flags<const std::vector<Vec6fWrapper>*>::value
            }, {
                10205099180192590728ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2346177523135714134ull,
                sizeof(Vec6fWrapper),
                rustcpp::AlignOf<Vec6fWrapper>::value,
                rustcpp::Flags<Vec6fWrapper>::value | 0ull << 32
            }, {
                2346177523135714134ull,
                sizeof(const std::vector<Vec6fWrapper>*),
                rustcpp::AlignOf<const std::vector<Vec6fWrapper>*>::value,
                rustcpp::Flags<const std::vector<Vec6fWrapper>*>::value
            }, {
                2346177523135714134ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13885024370647719943ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                13885024370647719943ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {
                13885024370647719943ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13885024370647719943ull,
                sizeof(cv::Vec6f),
                rustcpp::AlignOf<cv::Vec6f>::value,
                rustcpp::Flags<cv::Vec6f>::value
            }, {4476998809783152482ull, 0, 1, 0ull << 32}, {
                4476998809783152482ull,
                sizeof(std::vector<cv::Vec6f>*),
                rustcpp::AlignOf<std::vector<cv::Vec6f>*>::value,
                rustcpp::Flags<std::vector<cv::Vec6f>*>::value
            }, {
                4476998809783152482ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4476998809783152482ull,
                sizeof(cv::Vec6f),
                rustcpp::AlignOf<cv::Vec6f>::value,
                rustcpp::Flags<cv::Vec6f>::value
            }, {11532742342365288017ull, 0, 1, 0ull << 32}, {
                11532742342365288017ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                17998652974492741196ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                8025101635679905174ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                8025101635679905174ull,
                sizeof(const std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                13289951269542050704ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                13289951269542050704ull,
                sizeof(const std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                1669791252694444298ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                1669791252694444298ull,
                sizeof(const std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::DMatch>>*>::value
            }, {14635678412115429170ull, 0, 1, 0ull << 32}, {
                14635678412115429170ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {2199019073055345245ull, 0, 1, 0ull << 32}, {
                2199019073055345245ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                2199019073055345245ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2632016848349157012ull, 0, 1, 0ull << 32}, {
                2632016848349157012ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                2632016848349157012ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {17935568950200032487ull, 0, 1, 0ull << 32}, {
                17935568950200032487ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                17935568950200032487ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17935568950200032487ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16562466242569515218ull, 0, 1, 0ull << 32}, {
                16562466242569515218ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {18364150811496930537ull, 0, 1, 0ull << 32}, {
                18364150811496930537ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                18364150811496930537ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {6487154664727786478ull, 0, 1, 0ull << 32}, {
                6487154664727786478ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                6487154664727786478ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6487154664727786478ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {
                9057182193870866996ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                9057182193870866996ull,
                sizeof(const std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                9057182193870866996ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3142341498861915597ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                3142341498861915597ull,
                sizeof(const std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                3142341498861915597ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17615504423471637632ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                17615504423471637632ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                17615504423471637632ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17615504423471637632ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {9277828087015364702ull, 0, 1, 0ull << 32}, {
                9277828087015364702ull,
                sizeof(std::vector<std::vector<cv::DMatch>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::DMatch>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::DMatch>>*>::value
            }, {
                9277828087015364702ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9277828087015364702ull,
                sizeof(std::vector<cv::DMatch>*),
                rustcpp::AlignOf<std::vector<cv::DMatch>*>::value,
                rustcpp::Flags<std::vector<cv::DMatch>*>::value
            }, {13752733283059308099ull, 0, 1, 0ull << 32}, {
                13752733283059308099ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                5480800167482921162ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13507158865787427430ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                13507158865787427430ull,
                sizeof(const std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                3910218355542014324ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                3910218355542014324ull,
                sizeof(const std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                16643780898838882379ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16643780898838882379ull,
                sizeof(const std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {9246464701927877743ull, 0, 1, 0ull << 32}, {
                9246464701927877743ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {4703314471623289583ull, 0, 1, 0ull << 32}, {
                4703314471623289583ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                4703314471623289583ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {6536433758023167456ull, 0, 1, 0ull << 32}, {
                6536433758023167456ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                6536433758023167456ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4850457681450877375ull, 0, 1, 0ull << 32}, {
                4850457681450877375ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                4850457681450877375ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4850457681450877375ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {1817177911201412396ull, 0, 1, 0ull << 32}, {
                1817177911201412396ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {16990570470948370580ull, 0, 1, 0ull << 32}, {
                16990570470948370580ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                16990570470948370580ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {2485127766745226313ull, 0, 1, 0ull << 32}, {
                2485127766745226313ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                2485127766745226313ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2485127766745226313ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {
                6985628458612628659ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                6985628458612628659ull,
                sizeof(const std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                6985628458612628659ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1769078382909343600ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                1769078382909343600ull,
                sizeof(const std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                1769078382909343600ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17988815866973939410ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                17988815866973939410ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                17988815866973939410ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17988815866973939410ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {4617933466765428084ull, 0, 1, 0ull << 32}, {
                4617933466765428084ull,
                sizeof(std::vector<std::vector<cv::line_descriptor::KeyLine>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::line_descriptor::KeyLine>>*>::value
            }, {
                4617933466765428084ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4617933466765428084ull,
                sizeof(std::vector<cv::line_descriptor::KeyLine>*),
                rustcpp::AlignOf<std::vector<cv::line_descriptor::KeyLine>*>::value,
                rustcpp::Flags<std::vector<cv::line_descriptor::KeyLine>*>::value
            }, {8868049060017414722ull, 0, 1, 0ull << 32}, {
                8868049060017414722ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                611373306907571374ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14052110682802843317ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                14052110682802843317ull,
                sizeof(const std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                2062646915844154036ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                2062646915844154036ull,
                sizeof(const std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                9649694367984080672ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                9649694367984080672ull,
                sizeof(const std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {10461174959780139848ull, 0, 1, 0ull << 32}, {
                10461174959780139848ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {4214764128098981335ull, 0, 1, 0ull << 32}, {
                4214764128098981335ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                4214764128098981335ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {14644314008587033501ull, 0, 1, 0ull << 32}, {
                14644314008587033501ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                14644314008587033501ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {8237589438193600021ull, 0, 1, 0ull << 32}, {
                8237589438193600021ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                8237589438193600021ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8237589438193600021ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {11708168205278921966ull, 0, 1, 0ull << 32}, {
                11708168205278921966ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {4523505230666681903ull, 0, 1, 0ull << 32}, {
                4523505230666681903ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                4523505230666681903ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {17360827497260508022ull, 0, 1, 0ull << 32}, {
                17360827497260508022ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                17360827497260508022ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17360827497260508022ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {
                17426208703723307819ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                17426208703723307819ull,
                sizeof(const std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                17426208703723307819ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                12568221429195346925ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12568221429195346925ull,
                sizeof(const std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                12568221429195346925ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1875998588314569859ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                1875998588314569859ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                1875998588314569859ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1875998588314569859ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {6075397722724404043ull, 0, 1, 0ull << 32}, {
                6075397722724404043ull,
                sizeof(std::vector<std::vector<cv::KeyPoint>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::KeyPoint>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::KeyPoint>>*>::value
            }, {
                6075397722724404043ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6075397722724404043ull,
                sizeof(std::vector<cv::KeyPoint>*),
                rustcpp::AlignOf<std::vector<cv::KeyPoint>*>::value,
                rustcpp::Flags<std::vector<cv::KeyPoint>*>::value
            }, {14336238473212118885ull, 0, 1, 0ull << 32}, {
                14336238473212118885ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {
                11736102866147295191ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                2795016571494035652ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                2795016571494035652ull,
                sizeof(const std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Mat>>*>::value
            }, {
                14216902679062597554ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                14216902679062597554ull,
                sizeof(const std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Mat>>*>::value
            }, {
                16512361326797629161ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16512361326797629161ull,
                sizeof(const std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Mat>>*>::value
            }, {3071376899725011395ull, 0, 1, 0ull << 32}, {
                3071376899725011395ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {17714787281942427577ull, 0, 1, 0ull << 32}, {
                17714787281942427577ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {
                17714787281942427577ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4766701697078330718ull, 0, 1, 0ull << 32}, {
                4766701697078330718ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {
                4766701697078330718ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {18013333432757956279ull, 0, 1, 0ull << 32}, {
                18013333432757956279ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {
                18013333432757956279ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                18013333432757956279ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {1402886479436045392ull, 0, 1, 0ull << 32}, {
                1402886479436045392ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {7012868523101811506ull, 0, 1, 0ull << 32}, {
                7012868523101811506ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {
                7012868523101811506ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {14142366852552898659ull, 0, 1, 0ull << 32}, {
                14142366852552898659ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {
                14142366852552898659ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                14142366852552898659ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {
                6882188495518518733ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                6882188495518518733ull,
                sizeof(const std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Mat>>*>::value
            }, {
                6882188495518518733ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11025622401151680034ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11025622401151680034ull,
                sizeof(const std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Mat>>*>::value
            }, {
                11025622401151680034ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8944061264183478461ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                8944061264183478461ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {
                8944061264183478461ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8944061264183478461ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {1354792137580099437ull, 0, 1, 0ull << 32}, {
                1354792137580099437ull,
                sizeof(std::vector<std::vector<cv::Mat>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Mat>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Mat>>*>::value
            }, {
                1354792137580099437ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1354792137580099437ull,
                sizeof(std::vector<cv::Mat>*),
                rustcpp::AlignOf<std::vector<cv::Mat>*>::value,
                rustcpp::Flags<std::vector<cv::Mat>*>::value
            }, {2911328278725927089ull, 0, 1, 0ull << 32}, {
                2911328278725927089ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                3014246472189686692ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                17922509130020882396ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                17922509130020882396ull,
                sizeof(const std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point>>*>::value
            }, {
                3983860141491529233ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                3983860141491529233ull,
                sizeof(const std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point>>*>::value
            }, {
                5875217022573856199ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                5875217022573856199ull,
                sizeof(const std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point>>*>::value
            }, {4841501983383229016ull, 0, 1, 0ull << 32}, {
                4841501983383229016ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {17024537167804162990ull, 0, 1, 0ull << 32}, {
                17024537167804162990ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                17024537167804162990ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5789025688827788927ull, 0, 1, 0ull << 32}, {
                5789025688827788927ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                5789025688827788927ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16976908749889347736ull, 0, 1, 0ull << 32}, {
                16976908749889347736ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                16976908749889347736ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16976908749889347736ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {12464553888873812989ull, 0, 1, 0ull << 32}, {
                12464553888873812989ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {12301522110637285940ull, 0, 1, 0ull << 32}, {
                12301522110637285940ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                12301522110637285940ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {1312504183411758490ull, 0, 1, 0ull << 32}, {
                1312504183411758490ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                1312504183411758490ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1312504183411758490ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                14248917739248139791ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                14248917739248139791ull,
                sizeof(const std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point>>*>::value
            }, {
                14248917739248139791ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17012814822835425020ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                17012814822835425020ull,
                sizeof(const std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point>>*>::value
            }, {
                17012814822835425020ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1130956171981060131ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                1130956171981060131ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                1130956171981060131ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1130956171981060131ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {6230526592804556780ull, 0, 1, 0ull << 32}, {
                6230526592804556780ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                6230526592804556780ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6230526592804556780ull,
                sizeof(std::vector<cv::Point>*),
                rustcpp::AlignOf<std::vector<cv::Point>*>::value,
                rustcpp::Flags<std::vector<cv::Point>*>::value
            }, {
                2948701854991586711ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                2948701854991586711ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                13929318785666429979ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                13929318785666429979ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {
                522743076360903223ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                522743076360903223ull,
                sizeof(std::vector<std::vector<cv::Point>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point>>*>::value
            }, {10716310628301357831ull, 0, 1, 0ull << 32}, {
                10716310628301357831ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                14313768623665554445ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13398487891510513793ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                13398487891510513793ull,
                sizeof(const std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                5787280628165082870ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                5787280628165082870ull,
                sizeof(const std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                9942703125939120187ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                9942703125939120187ull,
                sizeof(const std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point2f>>*>::value
            }, {12619118209052791509ull, 0, 1, 0ull << 32}, {
                12619118209052791509ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {13220172532518024060ull, 0, 1, 0ull << 32}, {
                13220172532518024060ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                13220172532518024060ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16409351753115531884ull, 0, 1, 0ull << 32}, {
                16409351753115531884ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                16409351753115531884ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5491295875309973813ull, 0, 1, 0ull << 32}, {
                5491295875309973813ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                5491295875309973813ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5491295875309973813ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {10081682154075233293ull, 0, 1, 0ull << 32}, {
                10081682154075233293ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {9389172211553219363ull, 0, 1, 0ull << 32}, {
                9389172211553219363ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                9389172211553219363ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {7761556774699626019ull, 0, 1, 0ull << 32}, {
                7761556774699626019ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                7761556774699626019ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7761556774699626019ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                11401051825784019972ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                11401051825784019972ull,
                sizeof(const std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                11401051825784019972ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6503085165057878391ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                6503085165057878391ull,
                sizeof(const std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<const std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                6503085165057878391ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9840630269532967480ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                9840630269532967480ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                9840630269532967480ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9840630269532967480ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {11184544241033640610ull, 0, 1, 0ull << 32}, {
                11184544241033640610ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                11184544241033640610ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11184544241033640610ull,
                sizeof(std::vector<cv::Point2f>*),
                rustcpp::AlignOf<std::vector<cv::Point2f>*>::value,
                rustcpp::Flags<std::vector<cv::Point2f>*>::value
            }, {
                17144745175213033435ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                17144745175213033435ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                7449645254771026421ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                7449645254771026421ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {
                3570624110094400993ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                3570624110094400993ull,
                sizeof(std::vector<std::vector<cv::Point2f>>*),
                rustcpp::AlignOf<std::vector<std::vector<cv::Point2f>>*>::value,
                rustcpp::Flags<std::vector<std::vector<cv::Point2f>>*>::value
            }, {17695024569925792525ull, 0, 1, 0ull << 32}, {
                17695024569925792525ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                18220309501434857569ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14778774788111120426ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                14778774788111120426ull,
                sizeof(const std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<const std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                11089388719009420096ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                11089388719009420096ull,
                sizeof(const std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<const std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                7329716630709299243ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                7329716630709299243ull,
                sizeof(const std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<const std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<std::vector<int>>>*>::value
            }, {9873225035207539241ull, 0, 1, 0ull << 32}, {
                9873225035207539241ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {15369578066143214715ull, 0, 1, 0ull << 32}, {
                15369578066143214715ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                15369578066143214715ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {18385721531949209798ull, 0, 1, 0ull << 32}, {
                18385721531949209798ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                18385721531949209798ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16028828200236066644ull, 0, 1, 0ull << 32}, {
                16028828200236066644ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                16028828200236066644ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16028828200236066644ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {17560984626780679843ull, 0, 1, 0ull << 32}, {
                17560984626780679843ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {10045448826225132366ull, 0, 1, 0ull << 32}, {
                10045448826225132366ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                10045448826225132366ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {11462196132353043906ull, 0, 1, 0ull << 32}, {
                11462196132353043906ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                11462196132353043906ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11462196132353043906ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                12793430214509532067ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                12793430214509532067ull,
                sizeof(const std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<const std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                12793430214509532067ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15997792884742411092ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15997792884742411092ull,
                sizeof(const std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<const std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                15997792884742411092ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11055460491847653286ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                11055460491847653286ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                11055460491847653286ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11055460491847653286ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {13311437566789150822ull, 0, 1, 0ull << 32}, {
                13311437566789150822ull,
                sizeof(std::vector<std::vector<std::vector<int>>>*),
                rustcpp::AlignOf<std::vector<std::vector<std::vector<int>>>*>::value,
                rustcpp::Flags<std::vector<std::vector<std::vector<int>>>*>::value
            }, {
                13311437566789150822ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13311437566789150822ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {10525961685656380741ull, 0, 1, 0ull << 32}, {
                10525961685656380741ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {
                5535360529059511875ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                7299589840625411921ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                7299589840625411921ull,
                sizeof(const std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<const std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<bool>>*>::value
            }, {
                11928562943995783817ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                11928562943995783817ull,
                sizeof(const std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<const std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<bool>>*>::value
            }, {
                16547562528512011489ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16547562528512011489ull,
                sizeof(const std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<const std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<bool>>*>::value
            }, {14347613777395337472ull, 0, 1, 0ull << 32}, {
                14347613777395337472ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {6586030410415619616ull, 0, 1, 0ull << 32}, {
                6586030410415619616ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {
                6586030410415619616ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {17745419171844274878ull, 0, 1, 0ull << 32}, {
                17745419171844274878ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {
                17745419171844274878ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {8676121459214893039ull, 0, 1, 0ull << 32}, {
                8676121459214893039ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {
                8676121459214893039ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8676121459214893039ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16192406215520527291ull, 0, 1, 0ull << 32}, {
                16192406215520527291ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {8416217357509011081ull, 0, 1, 0ull << 32}, {
                8416217357509011081ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {
                8416217357509011081ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {1223890793457162085ull, 0, 1, 0ull << 32}, {
                1223890793457162085ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {
                1223890793457162085ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1223890793457162085ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {
                5204740064063438028ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                5204740064063438028ull,
                sizeof(const std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<const std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<bool>>*>::value
            }, {
                5204740064063438028ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                12300747401961905062ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12300747401961905062ull,
                sizeof(const std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<const std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<bool>>*>::value
            }, {
                12300747401961905062ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17213979097755796304ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                17213979097755796304ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {
                17213979097755796304ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17213979097755796304ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {7880024284793600488ull, 0, 1, 0ull << 32}, {
                7880024284793600488ull,
                sizeof(std::vector<std::vector<bool>>*),
                rustcpp::AlignOf<std::vector<std::vector<bool>>*>::value,
                rustcpp::Flags<std::vector<std::vector<bool>>*>::value
            }, {
                7880024284793600488ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7880024284793600488ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {15184227397237357839ull, 0, 1, 0ull << 32}, {
                15184227397237357839ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                68222625726416620ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                14636044605322447769ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                14636044605322447769ull,
                sizeof(const std::vector<std::vector<char>>*),
                rustcpp::AlignOf<const std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<char>>*>::value
            }, {
                541476679330626671ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                541476679330626671ull,
                sizeof(const std::vector<std::vector<char>>*),
                rustcpp::AlignOf<const std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<char>>*>::value
            }, {
                4752119420984164759ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                4752119420984164759ull,
                sizeof(const std::vector<std::vector<char>>*),
                rustcpp::AlignOf<const std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<char>>*>::value
            }, {17140795816081042654ull, 0, 1, 0ull << 32}, {
                17140795816081042654ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {13732285595359785121ull, 0, 1, 0ull << 32}, {
                13732285595359785121ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                13732285595359785121ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {7567095029738967452ull, 0, 1, 0ull << 32}, {
                7567095029738967452ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                7567095029738967452ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {15193883698264988443ull, 0, 1, 0ull << 32}, {
                15193883698264988443ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                15193883698264988443ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15193883698264988443ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {12817398127223636091ull, 0, 1, 0ull << 32}, {
                12817398127223636091ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {3074018029764695539ull, 0, 1, 0ull << 32}, {
                3074018029764695539ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                3074018029764695539ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {4633320814421419028ull, 0, 1, 0ull << 32}, {
                4633320814421419028ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                4633320814421419028ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4633320814421419028ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                15559464860101589009ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                15559464860101589009ull,
                sizeof(const std::vector<std::vector<char>>*),
                rustcpp::AlignOf<const std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<char>>*>::value
            }, {
                15559464860101589009ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6607921191182443450ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                6607921191182443450ull,
                sizeof(const std::vector<std::vector<char>>*),
                rustcpp::AlignOf<const std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<char>>*>::value
            }, {
                6607921191182443450ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3619410800946483810ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                3619410800946483810ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                3619410800946483810ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3619410800946483810ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {11322546023640708799ull, 0, 1, 0ull << 32}, {
                11322546023640708799ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                11322546023640708799ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11322546023640708799ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                3061562178707438421ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                3061562178707438421ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                1364287544892816855ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                1364287544892816855ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {
                7396008553986760968ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                7396008553986760968ull,
                sizeof(std::vector<std::vector<char>>*),
                rustcpp::AlignOf<std::vector<std::vector<char>>*>::value,
                rustcpp::Flags<std::vector<std::vector<char>>*>::value
            }, {13200923691941164942ull, 0, 1, 0ull << 32}, {
                13200923691941164942ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                16242834845579799128ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                13164579972304138906ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                13164579972304138906ull,
                sizeof(const std::vector<std::vector<int>>*),
                rustcpp::AlignOf<const std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<int>>*>::value
            }, {
                17107867150432904802ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                17107867150432904802ull,
                sizeof(const std::vector<std::vector<int>>*),
                rustcpp::AlignOf<const std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<int>>*>::value
            }, {
                11849829358417433038ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11849829358417433038ull,
                sizeof(const std::vector<std::vector<int>>*),
                rustcpp::AlignOf<const std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<int>>*>::value
            }, {14346171485912132689ull, 0, 1, 0ull << 32}, {
                14346171485912132689ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {5381342983774808461ull, 0, 1, 0ull << 32}, {
                5381342983774808461ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                5381342983774808461ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {7378725587654496758ull, 0, 1, 0ull << 32}, {
                7378725587654496758ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                7378725587654496758ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2818790875255093335ull, 0, 1, 0ull << 32}, {
                2818790875255093335ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                2818790875255093335ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2818790875255093335ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {4299998260840564844ull, 0, 1, 0ull << 32}, {
                4299998260840564844ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {13386889480518126579ull, 0, 1, 0ull << 32}, {
                13386889480518126579ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                13386889480518126579ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {11909875511398040435ull, 0, 1, 0ull << 32}, {
                11909875511398040435ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                11909875511398040435ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11909875511398040435ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                8338689236704080973ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                8338689236704080973ull,
                sizeof(const std::vector<std::vector<int>>*),
                rustcpp::AlignOf<const std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<int>>*>::value
            }, {
                8338689236704080973ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9306860201382363265ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                9306860201382363265ull,
                sizeof(const std::vector<std::vector<int>>*),
                rustcpp::AlignOf<const std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<int>>*>::value
            }, {
                9306860201382363265ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11933296201697474819ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                11933296201697474819ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                11933296201697474819ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11933296201697474819ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {7444810314280863367ull, 0, 1, 0ull << 32}, {
                7444810314280863367ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                7444810314280863367ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7444810314280863367ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                1722744913841887176ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                1722744913841887176ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                10005505092304413168ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                10005505092304413168ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {
                2393934868636941254ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                2393934868636941254ull,
                sizeof(std::vector<std::vector<int>>*),
                rustcpp::AlignOf<std::vector<std::vector<int>>*>::value,
                rustcpp::Flags<std::vector<std::vector<int>>*>::value
            }, {9026148894262204321ull, 0, 1, 0ull << 32}, {
                9026148894262204321ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                1632242716976963550ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                8189653899579717458ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                8189653899579717458ull,
                sizeof(const std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<const std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<uchar>>*>::value
            }, {
                5727396240087027947ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                5727396240087027947ull,
                sizeof(const std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<const std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<uchar>>*>::value
            }, {
                16009748320376457305ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16009748320376457305ull,
                sizeof(const std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<const std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<uchar>>*>::value
            }, {15434307351463707796ull, 0, 1, 0ull << 32}, {
                15434307351463707796ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {317503560472926664ull, 0, 1, 0ull << 32}, {
                317503560472926664ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                317503560472926664ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {12416499180749373243ull, 0, 1, 0ull << 32}, {
                12416499180749373243ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                12416499180749373243ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {9321615055611886314ull, 0, 1, 0ull << 32}, {
                9321615055611886314ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                9321615055611886314ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9321615055611886314ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {11140409154982233025ull, 0, 1, 0ull << 32}, {
                11140409154982233025ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {3666168471886255843ull, 0, 1, 0ull << 32}, {
                3666168471886255843ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                3666168471886255843ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {16244781568803344646ull, 0, 1, 0ull << 32}, {
                16244781568803344646ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                16244781568803344646ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16244781568803344646ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                10563353058291148766ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                10563353058291148766ull,
                sizeof(const std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<const std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<uchar>>*>::value
            }, {
                10563353058291148766ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                493832455310845835ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                493832455310845835ull,
                sizeof(const std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<const std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<const std::vector<std::vector<uchar>>*>::value
            }, {
                493832455310845835ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7082612025675886779ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                7082612025675886779ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                7082612025675886779ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7082612025675886779ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {11118111994194984557ull, 0, 1, 0ull << 32}, {
                11118111994194984557ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                11118111994194984557ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11118111994194984557ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                11523600940993031520ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                11523600940993031520ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                5258226242418661567ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                5258226242418661567ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                16548317954887804518ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                16548317954887804518ull,
                sizeof(std::vector<std::vector<uchar>>*),
                rustcpp::AlignOf<std::vector<std::vector<uchar>>*>::value,
                rustcpp::Flags<std::vector<std::vector<uchar>>*>::value
            }, {
                791673932402181376ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                791673932402181376ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {3178221834443740021ull, 0, 1, 0ull << 32}, {
                3178221834443740021ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {
                8467155713073038972ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16962428076296809047ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16962428076296809047ull,
                sizeof(const std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<const std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<const std::vector<VideoCaptureAPIs>*>::value
            }, {
                2602391759265797023ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                2602391759265797023ull,
                sizeof(const std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<const std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<const std::vector<VideoCaptureAPIs>*>::value
            }, {
                5993969431271853013ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                5993969431271853013ull,
                sizeof(const std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<const std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<const std::vector<VideoCaptureAPIs>*>::value
            }, {5489659817645120383ull, 0, 1, 0ull << 32}, {
                5489659817645120383ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {7515256864488917855ull, 0, 1, 0ull << 32}, {
                7515256864488917855ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {
                7515256864488917855ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2368929354221447533ull, 0, 1, 0ull << 32}, {
                2368929354221447533ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {
                2368929354221447533ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5192460367128536607ull, 0, 1, 0ull << 32}, {
                5192460367128536607ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {
                5192460367128536607ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5192460367128536607ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {11845504331698887628ull, 0, 1, 0ull << 32}, {
                11845504331698887628ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {12451535751553793774ull, 0, 1, 0ull << 32}, {
                12451535751553793774ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {
                12451535751553793774ull,
                sizeof(VideoCaptureAPIs),
                rustcpp::AlignOf<VideoCaptureAPIs>::value,
                rustcpp::Flags<VideoCaptureAPIs>::value
            }, {12156108752720398002ull, 0, 1, 0ull << 32}, {
                12156108752720398002ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {
                12156108752720398002ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                12156108752720398002ull,
                sizeof(VideoCaptureAPIs),
                rustcpp::AlignOf<VideoCaptureAPIs>::value,
                rustcpp::Flags<VideoCaptureAPIs>::value
            }, {
                10281989740489373828ull,
                sizeof(cv_return_value_VideoCaptureAPIs),
                rustcpp::AlignOf<cv_return_value_VideoCaptureAPIs>::value,
                rustcpp::Flags<cv_return_value_VideoCaptureAPIs>::value | 0ull << 32
            }, {
                10281989740489373828ull,
                sizeof(const std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<const std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<const std::vector<VideoCaptureAPIs>*>::value
            }, {
                10281989740489373828ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11803687939751537315ull,
                sizeof(VideoCaptureAPIs),
                rustcpp::AlignOf<VideoCaptureAPIs>::value,
                rustcpp::Flags<VideoCaptureAPIs>::value | 0ull << 32
            }, {
                11803687939751537315ull,
                sizeof(const std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<const std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<const std::vector<VideoCaptureAPIs>*>::value
            }, {
                11803687939751537315ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                430270381456973286ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                430270381456973286ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {
                430270381456973286ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                430270381456973286ull,
                sizeof(VideoCaptureAPIs),
                rustcpp::AlignOf<VideoCaptureAPIs>::value,
                rustcpp::Flags<VideoCaptureAPIs>::value
            }, {6815287561356190621ull, 0, 1, 0ull << 32}, {
                6815287561356190621ull,
                sizeof(std::vector<VideoCaptureAPIs>*),
                rustcpp::AlignOf<std::vector<VideoCaptureAPIs>*>::value,
                rustcpp::Flags<std::vector<VideoCaptureAPIs>*>::value
            }, {
                6815287561356190621ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                6815287561356190621ull,
                sizeof(VideoCaptureAPIs),
                rustcpp::AlignOf<VideoCaptureAPIs>::value,
                rustcpp::Flags<VideoCaptureAPIs>::value
            }, {7680557983670084455ull, 0, 1, 0ull << 32}, {
                7680557983670084455ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {
                7004544697271255020ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                15004593992513929980ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                15004593992513929980ull,
                sizeof(const std::vector<bool>*),
                rustcpp::AlignOf<const std::vector<bool>*>::value,
                rustcpp::Flags<const std::vector<bool>*>::value
            }, {
                17327198488214745622ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                17327198488214745622ull,
                sizeof(const std::vector<bool>*),
                rustcpp::AlignOf<const std::vector<bool>*>::value,
                rustcpp::Flags<const std::vector<bool>*>::value
            }, {
                16056567257092599215ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16056567257092599215ull,
                sizeof(const std::vector<bool>*),
                rustcpp::AlignOf<const std::vector<bool>*>::value,
                rustcpp::Flags<const std::vector<bool>*>::value
            }, {16722246676674103490ull, 0, 1, 0ull << 32}, {
                16722246676674103490ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {81215631196010935ull, 0, 1, 0ull << 32}, {
                81215631196010935ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {
                81215631196010935ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {13587513110281780216ull, 0, 1, 0ull << 32}, {
                13587513110281780216ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {
                13587513110281780216ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5502766680889592946ull, 0, 1, 0ull << 32}, {
                5502766680889592946ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {
                5502766680889592946ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5502766680889592946ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {8080610137997008144ull, 0, 1, 0ull << 32}, {
                8080610137997008144ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {16709587503425465842ull, 0, 1, 0ull << 32}, {
                16709587503425465842ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {
                16709587503425465842ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value
            }, {14695512266750728376ull, 0, 1, 0ull << 32}, {
                14695512266750728376ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {
                14695512266750728376ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                14695512266750728376ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value
            }, {
                15782268564406704158ull,
                sizeof(cv_return_value_bool),
                rustcpp::AlignOf<cv_return_value_bool>::value,
                rustcpp::Flags<cv_return_value_bool>::value | 0ull << 32
            }, {
                15782268564406704158ull,
                sizeof(const std::vector<bool>*),
                rustcpp::AlignOf<const std::vector<bool>*>::value,
                rustcpp::Flags<const std::vector<bool>*>::value
            }, {
                15782268564406704158ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11499083246384148170ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                11499083246384148170ull,
                sizeof(const std::vector<bool>*),
                rustcpp::AlignOf<const std::vector<bool>*>::value,
                rustcpp::Flags<const std::vector<bool>*>::value
            }, {
                11499083246384148170ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9576202085401998275ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                9576202085401998275ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {
                9576202085401998275ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9576202085401998275ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value
            }, {2106629954918574704ull, 0, 1, 0ull << 32}, {
                2106629954918574704ull,
                sizeof(std::vector<bool>*),
                rustcpp::AlignOf<std::vector<bool>*>::value,
                rustcpp::Flags<std::vector<bool>*>::value
            }, {
                2106629954918574704ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2106629954918574704ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value
            }, {
                7207636657531480413ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                7207636657531480413ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {1802241705346948257ull, 0, 1, 0ull << 32}, {
                1802241705346948257ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                2775395275616944542ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                12861170847392063244ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                12861170847392063244ull,
                sizeof(const std::vector<char>*),
                rustcpp::AlignOf<const std::vector<char>*>::value,
                rustcpp::Flags<const std::vector<char>*>::value
            }, {
                5070942591364374531ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                5070942591364374531ull,
                sizeof(const std::vector<char>*),
                rustcpp::AlignOf<const std::vector<char>*>::value,
                rustcpp::Flags<const std::vector<char>*>::value
            }, {
                13411887371174896298ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                13411887371174896298ull,
                sizeof(const std::vector<char>*),
                rustcpp::AlignOf<const std::vector<char>*>::value,
                rustcpp::Flags<const std::vector<char>*>::value
            }, {3328803152866770948ull, 0, 1, 0ull << 32}, {
                3328803152866770948ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {6363155120045174375ull, 0, 1, 0ull << 32}, {
                6363155120045174375ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                6363155120045174375ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {17288443068549491961ull, 0, 1, 0ull << 32}, {
                17288443068549491961ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                17288443068549491961ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5963968172261715016ull, 0, 1, 0ull << 32}, {
                5963968172261715016ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                5963968172261715016ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5963968172261715016ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {12334985474951699276ull, 0, 1, 0ull << 32}, {
                12334985474951699276ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {16644907581149672943ull, 0, 1, 0ull << 32}, {
                16644907581149672943ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                16644907581149672943ull,
                sizeof(char),
                rustcpp::AlignOf<char>::value,
                rustcpp::Flags<char>::value
            }, {2050930992903056236ull, 0, 1, 0ull << 32}, {
                2050930992903056236ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                2050930992903056236ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2050930992903056236ull,
                sizeof(char),
                rustcpp::AlignOf<char>::value,
                rustcpp::Flags<char>::value
            }, {
                9748202317866119140ull,
                sizeof(cv_return_value_char),
                rustcpp::AlignOf<cv_return_value_char>::value,
                rustcpp::Flags<cv_return_value_char>::value | 0ull << 32
            }, {
                9748202317866119140ull,
                sizeof(const std::vector<char>*),
                rustcpp::AlignOf<const std::vector<char>*>::value,
                rustcpp::Flags<const std::vector<char>*>::value
            }, {
                9748202317866119140ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3135047660660413210ull,
                sizeof(char),
                rustcpp::AlignOf<char>::value,
                rustcpp::Flags<char>::value | 0ull << 32
            }, {
                3135047660660413210ull,
                sizeof(const std::vector<char>*),
                rustcpp::AlignOf<const std::vector<char>*>::value,
                rustcpp::Flags<const std::vector<char>*>::value
            }, {
                3135047660660413210ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2027044894594819505ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                2027044894594819505ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                2027044894594819505ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2027044894594819505ull,
                sizeof(char),
                rustcpp::AlignOf<char>::value,
                rustcpp::Flags<char>::value
            }, {16801502178212680446ull, 0, 1, 0ull << 32}, {
                16801502178212680446ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                16801502178212680446ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16801502178212680446ull,
                sizeof(char),
                rustcpp::AlignOf<char>::value,
                rustcpp::Flags<char>::value
            }, {
                12353449638894517807ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                12353449638894517807ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                1521229585598757136ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                1521229585598757136ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                15698612187084219801ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                15698612187084219801ull,
                sizeof(std::vector<char>*),
                rustcpp::AlignOf<std::vector<char>*>::value,
                rustcpp::Flags<std::vector<char>*>::value
            }, {
                9038273325449511849ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                9038273325449511849ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {15275775679331883419ull, 0, 1, 0ull << 32}, {
                15275775679331883419ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                12220541611156879411ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11267422671129471093ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11267422671129471093ull,
                sizeof(const std::vector<double>*),
                rustcpp::AlignOf<const std::vector<double>*>::value,
                rustcpp::Flags<const std::vector<double>*>::value
            }, {
                2556054811046261065ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                2556054811046261065ull,
                sizeof(const std::vector<double>*),
                rustcpp::AlignOf<const std::vector<double>*>::value,
                rustcpp::Flags<const std::vector<double>*>::value
            }, {
                8891690477421903543ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                8891690477421903543ull,
                sizeof(const std::vector<double>*),
                rustcpp::AlignOf<const std::vector<double>*>::value,
                rustcpp::Flags<const std::vector<double>*>::value
            }, {17110719008536657052ull, 0, 1, 0ull << 32}, {
                17110719008536657052ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {14563198771711454956ull, 0, 1, 0ull << 32}, {
                14563198771711454956ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                14563198771711454956ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2286246304981493720ull, 0, 1, 0ull << 32}, {
                2286246304981493720ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                2286246304981493720ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {3362440357276032396ull, 0, 1, 0ull << 32}, {
                3362440357276032396ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                3362440357276032396ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3362440357276032396ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {2275813519711178534ull, 0, 1, 0ull << 32}, {
                2275813519711178534ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {14628931732789424007ull, 0, 1, 0ull << 32}, {
                14628931732789424007ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                14628931732789424007ull,
                sizeof(double),
                rustcpp::AlignOf<double>::value,
                rustcpp::Flags<double>::value
            }, {14418041519159457325ull, 0, 1, 0ull << 32}, {
                14418041519159457325ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                14418041519159457325ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                14418041519159457325ull,
                sizeof(double),
                rustcpp::AlignOf<double>::value,
                rustcpp::Flags<double>::value
            }, {
                2342028852560666799ull,
                sizeof(cv_return_value_double),
                rustcpp::AlignOf<cv_return_value_double>::value,
                rustcpp::Flags<cv_return_value_double>::value | 0ull << 32
            }, {
                2342028852560666799ull,
                sizeof(const std::vector<double>*),
                rustcpp::AlignOf<const std::vector<double>*>::value,
                rustcpp::Flags<const std::vector<double>*>::value
            }, {
                2342028852560666799ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1393579072439005874ull,
                sizeof(double),
                rustcpp::AlignOf<double>::value,
                rustcpp::Flags<double>::value | 0ull << 32
            }, {
                1393579072439005874ull,
                sizeof(const std::vector<double>*),
                rustcpp::AlignOf<const std::vector<double>*>::value,
                rustcpp::Flags<const std::vector<double>*>::value
            }, {
                1393579072439005874ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4348600947328908447ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                4348600947328908447ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                4348600947328908447ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                4348600947328908447ull,
                sizeof(double),
                rustcpp::AlignOf<double>::value,
                rustcpp::Flags<double>::value
            }, {5568747771060774357ull, 0, 1, 0ull << 32}, {
                5568747771060774357ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                5568747771060774357ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5568747771060774357ull,
                sizeof(double),
                rustcpp::AlignOf<double>::value,
                rustcpp::Flags<double>::value
            }, {
                14346173460160139773ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                14346173460160139773ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                7383893735973570063ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                7383893735973570063ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                8324678660439730615ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                8324678660439730615ull,
                sizeof(std::vector<double>*),
                rustcpp::AlignOf<std::vector<double>*>::value,
                rustcpp::Flags<std::vector<double>*>::value
            }, {
                3235244654576794811ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                3235244654576794811ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {4500242342960182091ull, 0, 1, 0ull << 32}, {
                4500242342960182091ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                2607565952003448314ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11361889547061345766ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11361889547061345766ull,
                sizeof(const std::vector<float>*),
                rustcpp::AlignOf<const std::vector<float>*>::value,
                rustcpp::Flags<const std::vector<float>*>::value
            }, {
                6294544620288412947ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                6294544620288412947ull,
                sizeof(const std::vector<float>*),
                rustcpp::AlignOf<const std::vector<float>*>::value,
                rustcpp::Flags<const std::vector<float>*>::value
            }, {
                12411044917523570770ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                12411044917523570770ull,
                sizeof(const std::vector<float>*),
                rustcpp::AlignOf<const std::vector<float>*>::value,
                rustcpp::Flags<const std::vector<float>*>::value
            }, {17739170696145630312ull, 0, 1, 0ull << 32}, {
                17739170696145630312ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {14466765927435028625ull, 0, 1, 0ull << 32}, {
                14466765927435028625ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                14466765927435028625ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5717998601482480899ull, 0, 1, 0ull << 32}, {
                5717998601482480899ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                5717998601482480899ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {13023583183350489084ull, 0, 1, 0ull << 32}, {
                13023583183350489084ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                13023583183350489084ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13023583183350489084ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {15354867040902800757ull, 0, 1, 0ull << 32}, {
                15354867040902800757ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {1658995635258318900ull, 0, 1, 0ull << 32}, {
                1658995635258318900ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                1658995635258318900ull,
                sizeof(float),
                rustcpp::AlignOf<float>::value,
                rustcpp::Flags<float>::value
            }, {10793439297917335550ull, 0, 1, 0ull << 32}, {
                10793439297917335550ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                10793439297917335550ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                10793439297917335550ull,
                sizeof(float),
                rustcpp::AlignOf<float>::value,
                rustcpp::Flags<float>::value
            }, {
                11262040897650221267ull,
                sizeof(cv_return_value_float),
                rustcpp::AlignOf<cv_return_value_float>::value,
                rustcpp::Flags<cv_return_value_float>::value | 0ull << 32
            }, {
                11262040897650221267ull,
                sizeof(const std::vector<float>*),
                rustcpp::AlignOf<const std::vector<float>*>::value,
                rustcpp::Flags<const std::vector<float>*>::value
            }, {
                11262040897650221267ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7732588252419036850ull,
                sizeof(float),
                rustcpp::AlignOf<float>::value,
                rustcpp::Flags<float>::value | 0ull << 32
            }, {
                7732588252419036850ull,
                sizeof(const std::vector<float>*),
                rustcpp::AlignOf<const std::vector<float>*>::value,
                rustcpp::Flags<const std::vector<float>*>::value
            }, {
                7732588252419036850ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1225232659811169419ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                1225232659811169419ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                1225232659811169419ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                1225232659811169419ull,
                sizeof(float),
                rustcpp::AlignOf<float>::value,
                rustcpp::Flags<float>::value
            }, {5185690119109117511ull, 0, 1, 0ull << 32}, {
                5185690119109117511ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                5185690119109117511ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5185690119109117511ull,
                sizeof(float),
                rustcpp::AlignOf<float>::value,
                rustcpp::Flags<float>::value
            }, {
                9802297775506011743ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                9802297775506011743ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                642908917187010659ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                642908917187010659ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                13901830270936609889ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                13901830270936609889ull,
                sizeof(std::vector<float>*),
                rustcpp::AlignOf<std::vector<float>*>::value,
                rustcpp::Flags<std::vector<float>*>::value
            }, {
                13113764192898854333ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                13113764192898854333ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {245177084160959536ull, 0, 1, 0ull << 32}, {
                245177084160959536ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                7228951401631190757ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                2003852843491137584ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                2003852843491137584ull,
                sizeof(const std::vector<int>*),
                rustcpp::AlignOf<const std::vector<int>*>::value,
                rustcpp::Flags<const std::vector<int>*>::value
            }, {
                12984527251973068684ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                12984527251973068684ull,
                sizeof(const std::vector<int>*),
                rustcpp::AlignOf<const std::vector<int>*>::value,
                rustcpp::Flags<const std::vector<int>*>::value
            }, {
                14122966068245613639ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                14122966068245613639ull,
                sizeof(const std::vector<int>*),
                rustcpp::AlignOf<const std::vector<int>*>::value,
                rustcpp::Flags<const std::vector<int>*>::value
            }, {5437769831944023564ull, 0, 1, 0ull << 32}, {
                5437769831944023564ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {4040862740235519126ull, 0, 1, 0ull << 32}, {
                4040862740235519126ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                4040862740235519126ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {15577577327670062602ull, 0, 1, 0ull << 32}, {
                15577577327670062602ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                15577577327670062602ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {10416158897434234093ull, 0, 1, 0ull << 32}, {
                10416158897434234093ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                10416158897434234093ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                10416158897434234093ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {13829889086830906443ull, 0, 1, 0ull << 32}, {
                13829889086830906443ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {4325044969902101265ull, 0, 1, 0ull << 32}, {
                4325044969902101265ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                4325044969902101265ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {9810391079563474272ull, 0, 1, 0ull << 32}, {
                9810391079563474272ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                9810391079563474272ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                9810391079563474272ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                18364162262637498265ull,
                sizeof(cv_return_value_int),
                rustcpp::AlignOf<cv_return_value_int>::value,
                rustcpp::Flags<cv_return_value_int>::value | 0ull << 32
            }, {
                18364162262637498265ull,
                sizeof(const std::vector<int>*),
                rustcpp::AlignOf<const std::vector<int>*>::value,
                rustcpp::Flags<const std::vector<int>*>::value
            }, {
                18364162262637498265ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16615582174278975443ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value | 0ull << 32
            }, {
                16615582174278975443ull,
                sizeof(const std::vector<int>*),
                rustcpp::AlignOf<const std::vector<int>*>::value,
                rustcpp::Flags<const std::vector<int>*>::value
            }, {
                16615582174278975443ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2459922955420785104ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                2459922955420785104ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                2459922955420785104ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2459922955420785104ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {470110153206198044ull, 0, 1, 0ull << 32}, {
                470110153206198044ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                470110153206198044ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                470110153206198044ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                8721822241632648431ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                8721822241632648431ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                3635981173187908995ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                3635981173187908995ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                1860326715308388698ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                1860326715308388698ull,
                sizeof(std::vector<int>*),
                rustcpp::AlignOf<std::vector<int>*>::value,
                rustcpp::Flags<std::vector<int>*>::value
            }, {
                4395606701057974283ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                4395606701057974283ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {1419178005768458683ull, 0, 1, 0ull << 32}, {
                1419178005768458683ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {
                9394920082368779808ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                16944045976943877997ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                16944045976943877997ull,
                sizeof(const std::vector<size_t>*),
                rustcpp::AlignOf<const std::vector<size_t>*>::value,
                rustcpp::Flags<const std::vector<size_t>*>::value
            }, {
                4793511438892857707ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                4793511438892857707ull,
                sizeof(const std::vector<size_t>*),
                rustcpp::AlignOf<const std::vector<size_t>*>::value,
                rustcpp::Flags<const std::vector<size_t>*>::value
            }, {
                12310930667543990030ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                12310930667543990030ull,
                sizeof(const std::vector<size_t>*),
                rustcpp::AlignOf<const std::vector<size_t>*>::value,
                rustcpp::Flags<const std::vector<size_t>*>::value
            }, {11593187728374352773ull, 0, 1, 0ull << 32}, {
                11593187728374352773ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {14142223446743964770ull, 0, 1, 0ull << 32}, {
                14142223446743964770ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {
                14142223446743964770ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {9236544207061673607ull, 0, 1, 0ull << 32}, {
                9236544207061673607ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {
                9236544207061673607ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {5860658103292337984ull, 0, 1, 0ull << 32}, {
                5860658103292337984ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {
                5860658103292337984ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                5860658103292337984ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {14861761876687144842ull, 0, 1, 0ull << 32}, {
                14861761876687144842ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {2189466097692613248ull, 0, 1, 0ull << 32}, {
                2189466097692613248ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {
                2189466097692613248ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {14572229209394601895ull, 0, 1, 0ull << 32}, {
                14572229209394601895ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {
                14572229209394601895ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                14572229209394601895ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                8140740235682223645ull,
                sizeof(cv_return_value_std_size_t),
                rustcpp::AlignOf<cv_return_value_std_size_t>::value,
                rustcpp::Flags<cv_return_value_std_size_t>::value | 0ull << 32
            }, {
                8140740235682223645ull,
                sizeof(const std::vector<std::size_t>*),
                rustcpp::AlignOf<const std::vector<std::size_t>*>::value,
                rustcpp::Flags<const std::vector<std::size_t>*>::value
            }, {
                8140740235682223645ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16405401921038157845ull,
                sizeof(std::size_t),
                rustcpp::AlignOf<std::size_t>::value,
                rustcpp::Flags<std::size_t>::value | 0ull << 32
            }, {
                16405401921038157845ull,
                sizeof(const std::vector<std::size_t>*),
                rustcpp::AlignOf<const std::vector<std::size_t>*>::value,
                rustcpp::Flags<const std::vector<std::size_t>*>::value
            }, {
                16405401921038157845ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7842733662480004305ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                7842733662480004305ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {
                7842733662480004305ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7842733662480004305ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {3392729523700378570ull, 0, 1, 0ull << 32}, {
                3392729523700378570ull,
                sizeof(std::vector<size_t>*),
                rustcpp::AlignOf<std::vector<size_t>*>::value,
                rustcpp::Flags<std::vector<size_t>*>::value
            }, {
                3392729523700378570ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                3392729523700378570ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                18082678938575754954ull,
                sizeof(void**),
                rustcpp::AlignOf<void**>::value,
                rustcpp::Flags<void**>::value | 0ull << 32
            }, {
                18082678938575754954ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {16500133354355392389ull, 0, 1, 0ull << 32}, {
                16500133354355392389ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                5526555487993604232ull,
                sizeof(void*),
                rustcpp::AlignOf<void*>::value,
                rustcpp::Flags<void*>::value | 0ull << 32
            }, {
                11468507450077904322ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                11468507450077904322ull,
                sizeof(const std::vector<uchar>*),
                rustcpp::AlignOf<const std::vector<uchar>*>::value,
                rustcpp::Flags<const std::vector<uchar>*>::value
            }, {
                15913227847144965803ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                15913227847144965803ull,
                sizeof(const std::vector<uchar>*),
                rustcpp::AlignOf<const std::vector<uchar>*>::value,
                rustcpp::Flags<const std::vector<uchar>*>::value
            }, {
                1550469926855928711ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                1550469926855928711ull,
                sizeof(const std::vector<uchar>*),
                rustcpp::AlignOf<const std::vector<uchar>*>::value,
                rustcpp::Flags<const std::vector<uchar>*>::value
            }, {6285348216536267505ull, 0, 1, 0ull << 32}, {
                6285348216536267505ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {4836859866880223641ull, 0, 1, 0ull << 32}, {
                4836859866880223641ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                4836859866880223641ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {9431047498065997654ull, 0, 1, 0ull << 32}, {
                9431047498065997654ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                9431047498065997654ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {16661289644482411698ull, 0, 1, 0ull << 32}, {
                16661289644482411698ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                16661289644482411698ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16661289644482411698ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {1702699316627748188ull, 0, 1, 0ull << 32}, {
                1702699316627748188ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {9753560978990666836ull, 0, 1, 0ull << 32}, {
                9753560978990666836ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                9753560978990666836ull,
                sizeof(uchar),
                rustcpp::AlignOf<uchar>::value,
                rustcpp::Flags<uchar>::value
            }, {10007434961133374053ull, 0, 1, 0ull << 32}, {
                10007434961133374053ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                10007434961133374053ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                10007434961133374053ull,
                sizeof(uchar),
                rustcpp::AlignOf<uchar>::value,
                rustcpp::Flags<uchar>::value
            }, {
                10957798246104013533ull,
                sizeof(cv_return_value_unsigned_char),
                rustcpp::AlignOf<cv_return_value_unsigned_char>::value,
                rustcpp::Flags<cv_return_value_unsigned_char>::value | 0ull << 32
            }, {
                10957798246104013533ull,
                sizeof(const std::vector<unsigned char>*),
                rustcpp::AlignOf<const std::vector<unsigned char>*>::value,
                rustcpp::Flags<const std::vector<unsigned char>*>::value
            }, {
                10957798246104013533ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15069241458837643450ull,
                sizeof(unsigned char),
                rustcpp::AlignOf<unsigned char>::value,
                rustcpp::Flags<unsigned char>::value | 0ull << 32
            }, {
                15069241458837643450ull,
                sizeof(const std::vector<unsigned char>*),
                rustcpp::AlignOf<const std::vector<unsigned char>*>::value,
                rustcpp::Flags<const std::vector<unsigned char>*>::value
            }, {
                15069241458837643450ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13354650520644699168ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                13354650520644699168ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                13354650520644699168ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13354650520644699168ull,
                sizeof(uchar),
                rustcpp::AlignOf<uchar>::value,
                rustcpp::Flags<uchar>::value
            }, {15900390952518978096ull, 0, 1, 0ull << 32}, {
                15900390952518978096ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                15900390952518978096ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                15900390952518978096ull,
                sizeof(uchar),
                rustcpp::AlignOf<uchar>::value,
                rustcpp::Flags<uchar>::value
            }, {
                1199557107347195625ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                1199557107347195625ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                16269938422188794276ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                16269938422188794276ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                571162502909006350ull,
                sizeof(cv_return_value_void_X),
                rustcpp::AlignOf<cv_return_value_void_X>::value,
                rustcpp::Flags<cv_return_value_void_X>::value | 0ull << 32
            }, {
                571162502909006350ull,
                sizeof(std::vector<uchar>*),
                rustcpp::AlignOf<std::vector<uchar>*>::value,
                rustcpp::Flags<std::vector<uchar>*>::value
            }, {
                4783089580828736585ull,
                sizeof(cv_return_value_SizeWrapper),
                rustcpp::AlignOf<cv_return_value_SizeWrapper>::value,
                rustcpp::Flags<cv_return_value_SizeWrapper>::value | 0ull << 32
            }, {
                4783089580828736585ull,
                sizeof(const cv::Mat*),
                rustcpp::AlignOf<const cv::Mat*>::value,
                rustcpp::Flags<const cv::Mat*>::value
            }, {
                16879280470320812282ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                16879280470320812282ull,
                sizeof(const cv::Mat*),
                rustcpp::AlignOf<const cv::Mat*>::value,
                rustcpp::Flags<const cv::Mat*>::value
            }, {
                14334612166453191995ull,
                sizeof(cv_return_value_void),
                rustcpp::AlignOf<cv_return_value_void>::value,
                rustcpp::Flags<cv_return_value_void>::value | 0ull << 32
            }, {
                14334612166453191995ull,
                sizeof(cv::Mat*),
                rustcpp::AlignOf<cv::Mat*>::value,
                rustcpp::Flags<cv::Mat*>::value
            }, {
                14334612166453191995ull,
                sizeof(cv::Scalar),
                rustcpp::AlignOf<cv::Scalar>::value,
                rustcpp::Flags<cv::Scalar>::value
            }, {
                11450809558309983733ull,
                sizeof(cv_return_value_const_unsigned_char_X),
                rustcpp::AlignOf<cv_return_value_const_unsigned_char_X>::value,
                rustcpp::Flags<cv_return_value_const_unsigned_char_X>::value | 0ull << 32
            }, {
                11450809558309983733ull,
                sizeof(const cv::Mat*),
                rustcpp::AlignOf<const cv::Mat*>::value,
                rustcpp::Flags<const cv::Mat*>::value
            }, {
                9073289811546179039ull,
                sizeof(cv_return_value_SizeWrapper),
                rustcpp::AlignOf<cv_return_value_SizeWrapper>::value,
                rustcpp::Flags<cv_return_value_SizeWrapper>::value | 0ull << 32
            }, {
                9073289811546179039ull,
                sizeof(const cv::UMat*),
                rustcpp::AlignOf<const cv::UMat*>::value,
                rustcpp::Flags<const cv::UMat*>::value
            }, {
                3266162192642869096ull,
                sizeof(const int),
                rustcpp::AlignOf<const int>::value,
                rustcpp::Flags<const int>::value | 0ull << 32
            }, {
                3266162192642869096ull,
                sizeof(const MatSize*),
                rustcpp::AlignOf<const MatSize*>::value,
                rustcpp::Flags<const MatSize*>::value
            }, {
                4745874806522039116ull,
                sizeof(const int*),
                rustcpp::AlignOf<const int*>::value,
                rustcpp::Flags<const int*>::value | 0ull << 32
            }, {
                4745874806522039116ull,
                sizeof(const MatSize*),
                rustcpp::AlignOf<const MatSize*>::value,
                rustcpp::Flags<const MatSize*>::value
            }, {
                10006807773349951923ull,
                sizeof(const size_t*),
                rustcpp::AlignOf<const size_t*>::value,
                rustcpp::Flags<const size_t*>::value | 0ull << 32
            }, {
                10006807773349951923ull,
                sizeof(const MatStep*),
                rustcpp::AlignOf<const MatStep*>::value,
                rustcpp::Flags<const MatStep*>::value
            }, {
                13766700964491288281ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value | 0ull << 32
            }, {
                13766700964491288281ull,
                sizeof(const MatConstIterator*),
                rustcpp::AlignOf<const MatConstIterator*>::value,
                rustcpp::Flags<const MatConstIterator*>::value
            }, {
                10722979542502500384ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                10722979542502500384ull,
                sizeof(const MatConstIterator*),
                rustcpp::AlignOf<const MatConstIterator*>::value,
                rustcpp::Flags<const MatConstIterator*>::value
            }, {
                521370466056887834ull,
                sizeof(const uchar*),
                rustcpp::AlignOf<const uchar*>::value,
                rustcpp::Flags<const uchar*>::value | 0ull << 32
            }, {
                521370466056887834ull,
                sizeof(const MatConstIterator*),
                rustcpp::AlignOf<const MatConstIterator*>::value,
                rustcpp::Flags<const MatConstIterator*>::value
            }, {
                5406660396885533778ull,
                sizeof(cv_return_value_double),
                rustcpp::AlignOf<cv_return_value_double>::value,
                rustcpp::Flags<cv_return_value_double>::value | 0ull << 32
            }, {
                5406660396885533778ull,
                sizeof(const dnn::DictValue*),
                rustcpp::AlignOf<const dnn::DictValue*>::value,
                rustcpp::Flags<const dnn::DictValue*>::value
            }, {
                5406660396885533778ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                16742548704627009861ull,
                sizeof(cv_return_value_int64),
                rustcpp::AlignOf<cv_return_value_int64>::value,
                rustcpp::Flags<cv_return_value_int64>::value | 0ull << 32
            }, {
                16742548704627009861ull,
                sizeof(const dnn::DictValue*),
                rustcpp::AlignOf<const dnn::DictValue*>::value,
                rustcpp::Flags<const dnn::DictValue*>::value
            }, {
                16742548704627009861ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                15041122553148099353ull,
                sizeof(cv_return_value_char_X),
                rustcpp::AlignOf<cv_return_value_char_X>::value,
                rustcpp::Flags<cv_return_value_char_X>::value | 0ull << 32
            }, {
                15041122553148099353ull,
                sizeof(const dnn::DictValue*),
                rustcpp::AlignOf<const dnn::DictValue*>::value,
                rustcpp::Flags<const dnn::DictValue*>::value
            }, {
                15041122553148099353ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            } }
};

} // namespace rustcpp
